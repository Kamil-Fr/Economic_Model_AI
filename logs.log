2025-02-27 14:10:12,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:10:12,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:10:12,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:10:12,454:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:22:50,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:22:50,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:22:50,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:22:50,748:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:22:50,840:INFO:PyCaret RegressionExperiment
2025-02-27 14:22:50,840:INFO:Logging name: reg-default-name
2025-02-27 14:22:50,840:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 14:22:50,840:INFO:version 3.3.2
2025-02-27 14:22:50,840:INFO:Initializing setup()
2025-02-27 14:22:50,840:INFO:self.USI: 2c5e
2025-02-27 14:22:50,840:INFO:self._variable_keys: {'X', 'y_test', 'gpu_param', 'target_param', 'data', 'X_train', 'idx', 'y_train', 'X_test', 'fold_groups_param', 'fold_generator', 'pipeline', 'memory', 'exp_id', 'log_plots_param', 'seed', 'gpu_n_jobs_param', 'exp_name_log', 'n_jobs_param', 'fold_shuffle_param', '_ml_usecase', 'transform_target_param', '_available_plots', 'y', 'html_param', 'logging_param', 'USI'}
2025-02-27 14:22:50,840:INFO:Checking environment
2025-02-27 14:22:50,840:INFO:python_version: 3.10.12
2025-02-27 14:22:50,840:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 14:22:50,840:INFO:machine: x86_64
2025-02-27 14:22:50,841:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:22:50,841:INFO:Memory: svmem(total=16420966400, available=11198922752, percent=31.8, used=4255612928, free=1671340032, active=5205299200, inactive=8074047488, buffers=387678208, cached=10106335232, shared=614768640, slab=776237056)
2025-02-27 14:22:50,842:INFO:Physical Core: 4
2025-02-27 14:22:50,842:INFO:Logical Core: 8
2025-02-27 14:22:50,842:INFO:Checking libraries
2025-02-27 14:22:50,842:INFO:System:
2025-02-27 14:22:50,842:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 14:22:50,842:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 14:22:50,842:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:22:50,842:INFO:PyCaret required dependencies:
2025-02-27 14:22:50,860:INFO:                 pip: 25.0.1
2025-02-27 14:22:50,860:INFO:          setuptools: 75.8.2
2025-02-27 14:22:50,860:INFO:             pycaret: 3.3.2
2025-02-27 14:22:50,860:INFO:             IPython: 8.32.0
2025-02-27 14:22:50,860:INFO:          ipywidgets: 8.1.5
2025-02-27 14:22:50,860:INFO:                tqdm: 4.67.1
2025-02-27 14:22:50,860:INFO:               numpy: 1.26.4
2025-02-27 14:22:50,860:INFO:              pandas: 2.1.4
2025-02-27 14:22:50,860:INFO:              jinja2: 3.1.5
2025-02-27 14:22:50,860:INFO:               scipy: 1.11.4
2025-02-27 14:22:50,860:INFO:              joblib: 1.3.2
2025-02-27 14:22:50,860:INFO:             sklearn: 1.4.2
2025-02-27 14:22:50,861:INFO:                pyod: 2.0.3
2025-02-27 14:22:50,861:INFO:            imblearn: 0.13.0
2025-02-27 14:22:50,861:INFO:   category_encoders: 2.7.0
2025-02-27 14:22:50,861:INFO:            lightgbm: 4.6.0
2025-02-27 14:22:50,861:INFO:               numba: 0.61.0
2025-02-27 14:22:50,861:INFO:            requests: 2.32.3
2025-02-27 14:22:50,861:INFO:          matplotlib: 3.7.5
2025-02-27 14:22:50,861:INFO:          scikitplot: 0.3.7
2025-02-27 14:22:50,861:INFO:         yellowbrick: 1.5
2025-02-27 14:22:50,861:INFO:              plotly: 5.24.1
2025-02-27 14:22:50,861:INFO:    plotly-resampler: Not installed
2025-02-27 14:22:50,861:INFO:             kaleido: 0.2.1
2025-02-27 14:22:50,861:INFO:           schemdraw: 0.15
2025-02-27 14:22:50,861:INFO:         statsmodels: 0.14.4
2025-02-27 14:22:50,861:INFO:              sktime: 0.26.0
2025-02-27 14:22:50,861:INFO:               tbats: 1.1.3
2025-02-27 14:22:50,861:INFO:            pmdarima: 2.0.4
2025-02-27 14:22:50,861:INFO:              psutil: 7.0.0
2025-02-27 14:22:50,861:INFO:          markupsafe: 3.0.2
2025-02-27 14:22:50,861:INFO:             pickle5: Not installed
2025-02-27 14:22:50,861:INFO:         cloudpickle: 3.1.1
2025-02-27 14:22:50,861:INFO:         deprecation: 2.1.0
2025-02-27 14:22:50,861:INFO:              xxhash: 3.5.0
2025-02-27 14:22:50,861:INFO:           wurlitzer: 3.1.1
2025-02-27 14:22:50,861:INFO:PyCaret optional dependencies:
2025-02-27 14:22:50,872:INFO:                shap: Not installed
2025-02-27 14:22:50,872:INFO:           interpret: Not installed
2025-02-27 14:22:50,872:INFO:                umap: Not installed
2025-02-27 14:22:50,872:INFO:     ydata_profiling: Not installed
2025-02-27 14:22:50,872:INFO:  explainerdashboard: Not installed
2025-02-27 14:22:50,872:INFO:             autoviz: Not installed
2025-02-27 14:22:50,872:INFO:           fairlearn: Not installed
2025-02-27 14:22:50,872:INFO:          deepchecks: Not installed
2025-02-27 14:22:50,872:INFO:             xgboost: Not installed
2025-02-27 14:22:50,872:INFO:            catboost: Not installed
2025-02-27 14:22:50,872:INFO:              kmodes: Not installed
2025-02-27 14:22:50,872:INFO:             mlxtend: Not installed
2025-02-27 14:22:50,872:INFO:       statsforecast: Not installed
2025-02-27 14:22:50,872:INFO:        tune_sklearn: Not installed
2025-02-27 14:22:50,872:INFO:                 ray: Not installed
2025-02-27 14:22:50,872:INFO:            hyperopt: Not installed
2025-02-27 14:22:50,872:INFO:              optuna: Not installed
2025-02-27 14:22:50,872:INFO:               skopt: Not installed
2025-02-27 14:22:50,872:INFO:              mlflow: Not installed
2025-02-27 14:22:50,872:INFO:              gradio: Not installed
2025-02-27 14:22:50,872:INFO:             fastapi: Not installed
2025-02-27 14:22:50,872:INFO:             uvicorn: Not installed
2025-02-27 14:22:50,872:INFO:              m2cgen: Not installed
2025-02-27 14:22:50,872:INFO:           evidently: Not installed
2025-02-27 14:22:50,872:INFO:               fugue: Not installed
2025-02-27 14:22:50,873:INFO:           streamlit: Not installed
2025-02-27 14:22:50,873:INFO:             prophet: Not installed
2025-02-27 14:22:50,873:INFO:None
2025-02-27 14:22:50,873:INFO:Set up data.
2025-02-27 14:28:54,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:28:54,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:28:54,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:28:54,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:28:54,169:INFO:PyCaret RegressionExperiment
2025-02-27 14:28:54,169:INFO:Logging name: reg-default-name
2025-02-27 14:28:54,169:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 14:28:54,169:INFO:version 3.3.2
2025-02-27 14:28:54,169:INFO:Initializing setup()
2025-02-27 14:28:54,169:INFO:self.USI: a20b
2025-02-27 14:28:54,170:INFO:self._variable_keys: {'html_param', 'y_test', 'target_param', 'USI', 'y_train', 'fold_shuffle_param', 'seed', 'memory', 'exp_id', 'log_plots_param', '_ml_usecase', 'X', 'fold_generator', 'n_jobs_param', 'logging_param', 'fold_groups_param', 'pipeline', 'y', 'data', 'gpu_param', 'gpu_n_jobs_param', 'transform_target_param', 'exp_name_log', 'X_test', 'X_train', 'idx', '_available_plots'}
2025-02-27 14:28:54,170:INFO:Checking environment
2025-02-27 14:28:54,170:INFO:python_version: 3.10.12
2025-02-27 14:28:54,170:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 14:28:54,170:INFO:machine: x86_64
2025-02-27 14:28:54,171:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:28:54,171:INFO:Memory: svmem(total=16420966400, available=11000750080, percent=33.0, used=4395040768, free=1467125760, active=5324222464, inactive=8079024128, buffers=390815744, cached=10167984128, shared=673513472, slab=776454144)
2025-02-27 14:28:54,172:INFO:Physical Core: 4
2025-02-27 14:28:54,172:INFO:Logical Core: 8
2025-02-27 14:28:54,172:INFO:Checking libraries
2025-02-27 14:28:54,172:INFO:System:
2025-02-27 14:28:54,172:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 14:28:54,172:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 14:28:54,172:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:28:54,172:INFO:PyCaret required dependencies:
2025-02-27 14:28:54,193:INFO:                 pip: 25.0.1
2025-02-27 14:28:54,194:INFO:          setuptools: 75.8.2
2025-02-27 14:28:54,194:INFO:             pycaret: 3.3.2
2025-02-27 14:28:54,194:INFO:             IPython: 8.32.0
2025-02-27 14:28:54,194:INFO:          ipywidgets: 8.1.5
2025-02-27 14:28:54,194:INFO:                tqdm: 4.67.1
2025-02-27 14:28:54,194:INFO:               numpy: 1.26.4
2025-02-27 14:28:54,194:INFO:              pandas: 2.1.4
2025-02-27 14:28:54,194:INFO:              jinja2: 3.1.5
2025-02-27 14:28:54,194:INFO:               scipy: 1.11.4
2025-02-27 14:28:54,194:INFO:              joblib: 1.3.2
2025-02-27 14:28:54,194:INFO:             sklearn: 1.4.2
2025-02-27 14:28:54,194:INFO:                pyod: 2.0.3
2025-02-27 14:28:54,194:INFO:            imblearn: 0.13.0
2025-02-27 14:28:54,194:INFO:   category_encoders: 2.7.0
2025-02-27 14:28:54,194:INFO:            lightgbm: 4.6.0
2025-02-27 14:28:54,194:INFO:               numba: 0.61.0
2025-02-27 14:28:54,194:INFO:            requests: 2.32.3
2025-02-27 14:28:54,194:INFO:          matplotlib: 3.7.5
2025-02-27 14:28:54,194:INFO:          scikitplot: 0.3.7
2025-02-27 14:28:54,194:INFO:         yellowbrick: 1.5
2025-02-27 14:28:54,194:INFO:              plotly: 5.24.1
2025-02-27 14:28:54,194:INFO:    plotly-resampler: Not installed
2025-02-27 14:28:54,194:INFO:             kaleido: 0.2.1
2025-02-27 14:28:54,194:INFO:           schemdraw: 0.15
2025-02-27 14:28:54,194:INFO:         statsmodels: 0.14.4
2025-02-27 14:28:54,194:INFO:              sktime: 0.26.0
2025-02-27 14:28:54,194:INFO:               tbats: 1.1.3
2025-02-27 14:28:54,194:INFO:            pmdarima: 2.0.4
2025-02-27 14:28:54,194:INFO:              psutil: 7.0.0
2025-02-27 14:28:54,194:INFO:          markupsafe: 3.0.2
2025-02-27 14:28:54,194:INFO:             pickle5: Not installed
2025-02-27 14:28:54,194:INFO:         cloudpickle: 3.1.1
2025-02-27 14:28:54,194:INFO:         deprecation: 2.1.0
2025-02-27 14:28:54,194:INFO:              xxhash: 3.5.0
2025-02-27 14:28:54,195:INFO:           wurlitzer: 3.1.1
2025-02-27 14:28:54,195:INFO:PyCaret optional dependencies:
2025-02-27 14:28:54,207:INFO:                shap: Not installed
2025-02-27 14:28:54,207:INFO:           interpret: Not installed
2025-02-27 14:28:54,207:INFO:                umap: Not installed
2025-02-27 14:28:54,207:INFO:     ydata_profiling: Not installed
2025-02-27 14:28:54,207:INFO:  explainerdashboard: Not installed
2025-02-27 14:28:54,207:INFO:             autoviz: Not installed
2025-02-27 14:28:54,207:INFO:           fairlearn: Not installed
2025-02-27 14:28:54,207:INFO:          deepchecks: Not installed
2025-02-27 14:28:54,207:INFO:             xgboost: Not installed
2025-02-27 14:28:54,207:INFO:            catboost: Not installed
2025-02-27 14:28:54,207:INFO:              kmodes: Not installed
2025-02-27 14:28:54,207:INFO:             mlxtend: Not installed
2025-02-27 14:28:54,207:INFO:       statsforecast: Not installed
2025-02-27 14:28:54,207:INFO:        tune_sklearn: Not installed
2025-02-27 14:28:54,207:INFO:                 ray: Not installed
2025-02-27 14:28:54,208:INFO:            hyperopt: Not installed
2025-02-27 14:28:54,208:INFO:              optuna: Not installed
2025-02-27 14:28:54,208:INFO:               skopt: Not installed
2025-02-27 14:28:54,208:INFO:              mlflow: Not installed
2025-02-27 14:28:54,208:INFO:              gradio: Not installed
2025-02-27 14:28:54,208:INFO:             fastapi: Not installed
2025-02-27 14:28:54,208:INFO:             uvicorn: Not installed
2025-02-27 14:28:54,208:INFO:              m2cgen: Not installed
2025-02-27 14:28:54,208:INFO:           evidently: Not installed
2025-02-27 14:28:54,208:INFO:               fugue: Not installed
2025-02-27 14:28:54,208:INFO:           streamlit: Not installed
2025-02-27 14:28:54,208:INFO:             prophet: Not installed
2025-02-27 14:28:54,208:INFO:None
2025-02-27 14:28:54,208:INFO:Set up data.
2025-02-27 14:28:54,212:INFO:Set up folding strategy.
2025-02-27 14:28:54,212:INFO:Set up train/test split.
2025-02-27 14:28:54,217:INFO:Set up index.
2025-02-27 14:28:54,217:INFO:Assigning column types.
2025-02-27 14:28:54,219:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 14:28:54,220:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,224:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,228:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,287:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,329:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,333:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,382:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,417:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,419:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,419:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 14:28:54,422:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,426:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,482:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,527:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,531:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,577:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,612:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,612:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,613:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 14:28:54,620:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,666:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,717:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,817:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,818:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,818:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 14:28:54,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,927:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:54,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:54,992:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:55,036:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:28:55,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,037:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,037:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 14:28:55,103:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:55,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,212:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:28:55,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,260:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 14:28:55,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,377:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,494:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,495:INFO:Preparing preprocessing pipeline...
2025-02-27 14:28:55,495:INFO:Set up simple imputation.
2025-02-27 14:28:55,495:INFO:Set up feature normalization.
2025-02-27 14:28:55,496:INFO:Set up column name cleaning.
2025-02-27 14:28:55,522:INFO:Finished creating preprocessing pipeline.
2025-02-27 14:28:55,527:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[' Year', ' GDP (in billion USD)',
                                             ' Inflation Rate (%)',
                                             ' Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 14:28:55,527:INFO:Creating final display dataframe.
2025-02-27 14:28:55,592:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target  Economic Growth (%)
2                   Target type           Regression
3           Original data shape             (304, 5)
4        Transformed data shape             (304, 5)
5   Transformed train set shape             (212, 5)
6    Transformed test set shape              (92, 5)
7              Numeric features                    4
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12                    Normalize                 True
13             Normalize method               zscore
14               Fold Generator                KFold
15                  Fold Number                   10
16                     CPU Jobs                   -1
17                      Use GPU                False
18               Log Experiment                False
19              Experiment Name     reg-default-name
20                          USI                 a20b
2025-02-27 14:28:55,711:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,711:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,809:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,809:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:28:55,810:INFO:setup() successfully completed in 1.64s...............
2025-02-27 14:28:55,810:INFO:Initializing compare_models()
2025-02-27 14:28:55,810:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-27 14:28:55,810:INFO:Checking exceptions
2025-02-27 14:28:55,811:INFO:Preparing display monitor
2025-02-27 14:28:55,814:INFO:Initializing Linear Regression
2025-02-27 14:28:55,814:INFO:Total runtime is 1.7801920572916667e-06 minutes
2025-02-27 14:28:55,814:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:55,814:INFO:Initializing create_model()
2025-02-27 14:28:55,814:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:55,814:INFO:Checking exceptions
2025-02-27 14:28:55,814:INFO:Importing libraries
2025-02-27 14:28:55,814:INFO:Copying training dataset
2025-02-27 14:28:55,817:INFO:Defining folds
2025-02-27 14:28:55,817:INFO:Declaring metric variables
2025-02-27 14:28:55,818:INFO:Importing untrained model
2025-02-27 14:28:55,818:INFO:Linear Regression Imported successfully
2025-02-27 14:28:55,818:INFO:Starting cross validation
2025-02-27 14:28:55,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:58,667:INFO:Calculating mean and std
2025-02-27 14:28:58,668:INFO:Creating metrics dataframe
2025-02-27 14:28:58,671:INFO:Uploading results into container
2025-02-27 14:28:58,672:INFO:Uploading model into container now
2025-02-27 14:28:58,673:INFO:_master_model_container: 1
2025-02-27 14:28:58,673:INFO:_display_container: 2
2025-02-27 14:28:58,673:INFO:LinearRegression(n_jobs=-1)
2025-02-27 14:28:58,673:INFO:create_model() successfully completed......................................
2025-02-27 14:28:58,752:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:58,753:INFO:Creating metrics dataframe
2025-02-27 14:28:58,756:INFO:Initializing Lasso Regression
2025-02-27 14:28:58,756:INFO:Total runtime is 0.049035394191741945 minutes
2025-02-27 14:28:58,756:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:58,756:INFO:Initializing create_model()
2025-02-27 14:28:58,756:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:58,757:INFO:Checking exceptions
2025-02-27 14:28:58,757:INFO:Importing libraries
2025-02-27 14:28:58,757:INFO:Copying training dataset
2025-02-27 14:28:58,759:INFO:Defining folds
2025-02-27 14:28:58,760:INFO:Declaring metric variables
2025-02-27 14:28:58,760:INFO:Importing untrained model
2025-02-27 14:28:58,760:INFO:Lasso Regression Imported successfully
2025-02-27 14:28:58,760:INFO:Starting cross validation
2025-02-27 14:28:58,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:58,877:INFO:Calculating mean and std
2025-02-27 14:28:58,878:INFO:Creating metrics dataframe
2025-02-27 14:28:58,880:INFO:Uploading results into container
2025-02-27 14:28:58,880:INFO:Uploading model into container now
2025-02-27 14:28:58,880:INFO:_master_model_container: 2
2025-02-27 14:28:58,881:INFO:_display_container: 2
2025-02-27 14:28:58,881:INFO:Lasso(random_state=42)
2025-02-27 14:28:58,881:INFO:create_model() successfully completed......................................
2025-02-27 14:28:58,944:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:58,944:INFO:Creating metrics dataframe
2025-02-27 14:28:58,947:INFO:Initializing Ridge Regression
2025-02-27 14:28:58,947:INFO:Total runtime is 0.052218282222747804 minutes
2025-02-27 14:28:58,947:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:58,947:INFO:Initializing create_model()
2025-02-27 14:28:58,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:58,947:INFO:Checking exceptions
2025-02-27 14:28:58,947:INFO:Importing libraries
2025-02-27 14:28:58,947:INFO:Copying training dataset
2025-02-27 14:28:58,952:INFO:Defining folds
2025-02-27 14:28:58,952:INFO:Declaring metric variables
2025-02-27 14:28:58,952:INFO:Importing untrained model
2025-02-27 14:28:58,952:INFO:Ridge Regression Imported successfully
2025-02-27 14:28:58,952:INFO:Starting cross validation
2025-02-27 14:28:58,953:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,079:INFO:Calculating mean and std
2025-02-27 14:28:59,079:INFO:Creating metrics dataframe
2025-02-27 14:28:59,082:INFO:Uploading results into container
2025-02-27 14:28:59,083:INFO:Uploading model into container now
2025-02-27 14:28:59,084:INFO:_master_model_container: 3
2025-02-27 14:28:59,084:INFO:_display_container: 2
2025-02-27 14:28:59,084:INFO:Ridge(random_state=42)
2025-02-27 14:28:59,084:INFO:create_model() successfully completed......................................
2025-02-27 14:28:59,153:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:59,154:INFO:Creating metrics dataframe
2025-02-27 14:28:59,157:INFO:Initializing Elastic Net
2025-02-27 14:28:59,157:INFO:Total runtime is 0.05571674505869548 minutes
2025-02-27 14:28:59,157:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:59,157:INFO:Initializing create_model()
2025-02-27 14:28:59,157:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:59,157:INFO:Checking exceptions
2025-02-27 14:28:59,157:INFO:Importing libraries
2025-02-27 14:28:59,157:INFO:Copying training dataset
2025-02-27 14:28:59,160:INFO:Defining folds
2025-02-27 14:28:59,160:INFO:Declaring metric variables
2025-02-27 14:28:59,160:INFO:Importing untrained model
2025-02-27 14:28:59,161:INFO:Elastic Net Imported successfully
2025-02-27 14:28:59,161:INFO:Starting cross validation
2025-02-27 14:28:59,162:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,278:INFO:Calculating mean and std
2025-02-27 14:28:59,278:INFO:Creating metrics dataframe
2025-02-27 14:28:59,280:INFO:Uploading results into container
2025-02-27 14:28:59,281:INFO:Uploading model into container now
2025-02-27 14:28:59,281:INFO:_master_model_container: 4
2025-02-27 14:28:59,281:INFO:_display_container: 2
2025-02-27 14:28:59,282:INFO:ElasticNet(random_state=42)
2025-02-27 14:28:59,282:INFO:create_model() successfully completed......................................
2025-02-27 14:28:59,347:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:59,347:INFO:Creating metrics dataframe
2025-02-27 14:28:59,350:INFO:Initializing Least Angle Regression
2025-02-27 14:28:59,350:INFO:Total runtime is 0.05893619855244955 minutes
2025-02-27 14:28:59,350:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:59,351:INFO:Initializing create_model()
2025-02-27 14:28:59,351:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:59,351:INFO:Checking exceptions
2025-02-27 14:28:59,351:INFO:Importing libraries
2025-02-27 14:28:59,351:INFO:Copying training dataset
2025-02-27 14:28:59,353:INFO:Defining folds
2025-02-27 14:28:59,353:INFO:Declaring metric variables
2025-02-27 14:28:59,354:INFO:Importing untrained model
2025-02-27 14:28:59,354:INFO:Least Angle Regression Imported successfully
2025-02-27 14:28:59,354:INFO:Starting cross validation
2025-02-27 14:28:59,355:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,455:INFO:Calculating mean and std
2025-02-27 14:28:59,455:INFO:Creating metrics dataframe
2025-02-27 14:28:59,457:INFO:Uploading results into container
2025-02-27 14:28:59,458:INFO:Uploading model into container now
2025-02-27 14:28:59,458:INFO:_master_model_container: 5
2025-02-27 14:28:59,458:INFO:_display_container: 2
2025-02-27 14:28:59,458:INFO:Lars(random_state=42)
2025-02-27 14:28:59,458:INFO:create_model() successfully completed......................................
2025-02-27 14:28:59,521:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:59,521:INFO:Creating metrics dataframe
2025-02-27 14:28:59,523:INFO:Initializing Lasso Least Angle Regression
2025-02-27 14:28:59,523:INFO:Total runtime is 0.061828049023946126 minutes
2025-02-27 14:28:59,524:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:59,524:INFO:Initializing create_model()
2025-02-27 14:28:59,524:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:59,524:INFO:Checking exceptions
2025-02-27 14:28:59,524:INFO:Importing libraries
2025-02-27 14:28:59,524:INFO:Copying training dataset
2025-02-27 14:28:59,527:INFO:Defining folds
2025-02-27 14:28:59,527:INFO:Declaring metric variables
2025-02-27 14:28:59,527:INFO:Importing untrained model
2025-02-27 14:28:59,527:INFO:Lasso Least Angle Regression Imported successfully
2025-02-27 14:28:59,527:INFO:Starting cross validation
2025-02-27 14:28:59,528:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,638:INFO:Calculating mean and std
2025-02-27 14:28:59,639:INFO:Creating metrics dataframe
2025-02-27 14:28:59,640:INFO:Uploading results into container
2025-02-27 14:28:59,641:INFO:Uploading model into container now
2025-02-27 14:28:59,641:INFO:_master_model_container: 6
2025-02-27 14:28:59,641:INFO:_display_container: 2
2025-02-27 14:28:59,641:INFO:LassoLars(random_state=42)
2025-02-27 14:28:59,641:INFO:create_model() successfully completed......................................
2025-02-27 14:28:59,704:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:59,704:INFO:Creating metrics dataframe
2025-02-27 14:28:59,707:INFO:Initializing Orthogonal Matching Pursuit
2025-02-27 14:28:59,707:INFO:Total runtime is 0.06489355166753133 minutes
2025-02-27 14:28:59,708:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:59,708:INFO:Initializing create_model()
2025-02-27 14:28:59,708:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:59,708:INFO:Checking exceptions
2025-02-27 14:28:59,708:INFO:Importing libraries
2025-02-27 14:28:59,708:INFO:Copying training dataset
2025-02-27 14:28:59,711:INFO:Defining folds
2025-02-27 14:28:59,711:INFO:Declaring metric variables
2025-02-27 14:28:59,711:INFO:Importing untrained model
2025-02-27 14:28:59,712:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-27 14:28:59,712:INFO:Starting cross validation
2025-02-27 14:28:59,712:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,806:INFO:Calculating mean and std
2025-02-27 14:28:59,807:INFO:Creating metrics dataframe
2025-02-27 14:28:59,809:INFO:Uploading results into container
2025-02-27 14:28:59,809:INFO:Uploading model into container now
2025-02-27 14:28:59,810:INFO:_master_model_container: 7
2025-02-27 14:28:59,810:INFO:_display_container: 2
2025-02-27 14:28:59,810:INFO:OrthogonalMatchingPursuit()
2025-02-27 14:28:59,810:INFO:create_model() successfully completed......................................
2025-02-27 14:28:59,871:INFO:SubProcess create_model() end ==================================
2025-02-27 14:28:59,871:INFO:Creating metrics dataframe
2025-02-27 14:28:59,874:INFO:Initializing Bayesian Ridge
2025-02-27 14:28:59,874:INFO:Total runtime is 0.06766411066055297 minutes
2025-02-27 14:28:59,874:INFO:SubProcess create_model() called ==================================
2025-02-27 14:28:59,874:INFO:Initializing create_model()
2025-02-27 14:28:59,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:28:59,874:INFO:Checking exceptions
2025-02-27 14:28:59,874:INFO:Importing libraries
2025-02-27 14:28:59,874:INFO:Copying training dataset
2025-02-27 14:28:59,877:INFO:Defining folds
2025-02-27 14:28:59,877:INFO:Declaring metric variables
2025-02-27 14:28:59,877:INFO:Importing untrained model
2025-02-27 14:28:59,877:INFO:Bayesian Ridge Imported successfully
2025-02-27 14:28:59,877:INFO:Starting cross validation
2025-02-27 14:28:59,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:28:59,965:INFO:Calculating mean and std
2025-02-27 14:28:59,966:INFO:Creating metrics dataframe
2025-02-27 14:28:59,968:INFO:Uploading results into container
2025-02-27 14:28:59,971:INFO:Uploading model into container now
2025-02-27 14:28:59,972:INFO:_master_model_container: 8
2025-02-27 14:28:59,972:INFO:_display_container: 2
2025-02-27 14:28:59,972:INFO:BayesianRidge()
2025-02-27 14:28:59,972:INFO:create_model() successfully completed......................................
2025-02-27 14:29:00,035:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:00,035:INFO:Creating metrics dataframe
2025-02-27 14:29:00,037:INFO:Initializing Passive Aggressive Regressor
2025-02-27 14:29:00,037:INFO:Total runtime is 0.07039262453715006 minutes
2025-02-27 14:29:00,038:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:00,038:INFO:Initializing create_model()
2025-02-27 14:29:00,038:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:00,038:INFO:Checking exceptions
2025-02-27 14:29:00,038:INFO:Importing libraries
2025-02-27 14:29:00,038:INFO:Copying training dataset
2025-02-27 14:29:00,041:INFO:Defining folds
2025-02-27 14:29:00,041:INFO:Declaring metric variables
2025-02-27 14:29:00,041:INFO:Importing untrained model
2025-02-27 14:29:00,041:INFO:Passive Aggressive Regressor Imported successfully
2025-02-27 14:29:00,042:INFO:Starting cross validation
2025-02-27 14:29:00,042:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:00,131:INFO:Calculating mean and std
2025-02-27 14:29:00,132:INFO:Creating metrics dataframe
2025-02-27 14:29:00,134:INFO:Uploading results into container
2025-02-27 14:29:00,134:INFO:Uploading model into container now
2025-02-27 14:29:00,134:INFO:_master_model_container: 9
2025-02-27 14:29:00,135:INFO:_display_container: 2
2025-02-27 14:29:00,135:INFO:PassiveAggressiveRegressor(random_state=42)
2025-02-27 14:29:00,135:INFO:create_model() successfully completed......................................
2025-02-27 14:29:00,197:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:00,197:INFO:Creating metrics dataframe
2025-02-27 14:29:00,200:INFO:Initializing Huber Regressor
2025-02-27 14:29:00,200:INFO:Total runtime is 0.07309974034627278 minutes
2025-02-27 14:29:00,200:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:00,200:INFO:Initializing create_model()
2025-02-27 14:29:00,200:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:00,200:INFO:Checking exceptions
2025-02-27 14:29:00,200:INFO:Importing libraries
2025-02-27 14:29:00,200:INFO:Copying training dataset
2025-02-27 14:29:00,203:INFO:Defining folds
2025-02-27 14:29:00,203:INFO:Declaring metric variables
2025-02-27 14:29:00,203:INFO:Importing untrained model
2025-02-27 14:29:00,203:INFO:Huber Regressor Imported successfully
2025-02-27 14:29:00,203:INFO:Starting cross validation
2025-02-27 14:29:00,204:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:00,308:INFO:Calculating mean and std
2025-02-27 14:29:00,309:INFO:Creating metrics dataframe
2025-02-27 14:29:00,310:INFO:Uploading results into container
2025-02-27 14:29:00,311:INFO:Uploading model into container now
2025-02-27 14:29:00,311:INFO:_master_model_container: 10
2025-02-27 14:29:00,311:INFO:_display_container: 2
2025-02-27 14:29:00,311:INFO:HuberRegressor()
2025-02-27 14:29:00,311:INFO:create_model() successfully completed......................................
2025-02-27 14:29:00,371:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:00,371:INFO:Creating metrics dataframe
2025-02-27 14:29:00,374:INFO:Initializing K Neighbors Regressor
2025-02-27 14:29:00,374:INFO:Total runtime is 0.07600379387537638 minutes
2025-02-27 14:29:00,374:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:00,374:INFO:Initializing create_model()
2025-02-27 14:29:00,374:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:00,374:INFO:Checking exceptions
2025-02-27 14:29:00,374:INFO:Importing libraries
2025-02-27 14:29:00,375:INFO:Copying training dataset
2025-02-27 14:29:00,377:INFO:Defining folds
2025-02-27 14:29:00,377:INFO:Declaring metric variables
2025-02-27 14:29:00,377:INFO:Importing untrained model
2025-02-27 14:29:00,378:INFO:K Neighbors Regressor Imported successfully
2025-02-27 14:29:00,378:INFO:Starting cross validation
2025-02-27 14:29:00,379:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:00,497:INFO:Calculating mean and std
2025-02-27 14:29:00,497:INFO:Creating metrics dataframe
2025-02-27 14:29:00,499:INFO:Uploading results into container
2025-02-27 14:29:00,500:INFO:Uploading model into container now
2025-02-27 14:29:00,500:INFO:_master_model_container: 11
2025-02-27 14:29:00,500:INFO:_display_container: 2
2025-02-27 14:29:00,500:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-27 14:29:00,500:INFO:create_model() successfully completed......................................
2025-02-27 14:29:00,560:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:00,560:INFO:Creating metrics dataframe
2025-02-27 14:29:00,562:INFO:Initializing Decision Tree Regressor
2025-02-27 14:29:00,563:INFO:Total runtime is 0.07914624611536662 minutes
2025-02-27 14:29:00,563:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:00,563:INFO:Initializing create_model()
2025-02-27 14:29:00,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:00,563:INFO:Checking exceptions
2025-02-27 14:29:00,563:INFO:Importing libraries
2025-02-27 14:29:00,563:INFO:Copying training dataset
2025-02-27 14:29:00,565:INFO:Defining folds
2025-02-27 14:29:00,566:INFO:Declaring metric variables
2025-02-27 14:29:00,566:INFO:Importing untrained model
2025-02-27 14:29:00,566:INFO:Decision Tree Regressor Imported successfully
2025-02-27 14:29:00,566:INFO:Starting cross validation
2025-02-27 14:29:00,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:00,662:INFO:Calculating mean and std
2025-02-27 14:29:00,662:INFO:Creating metrics dataframe
2025-02-27 14:29:00,664:INFO:Uploading results into container
2025-02-27 14:29:00,664:INFO:Uploading model into container now
2025-02-27 14:29:00,665:INFO:_master_model_container: 12
2025-02-27 14:29:00,665:INFO:_display_container: 2
2025-02-27 14:29:00,665:INFO:DecisionTreeRegressor(random_state=42)
2025-02-27 14:29:00,665:INFO:create_model() successfully completed......................................
2025-02-27 14:29:00,726:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:00,726:INFO:Creating metrics dataframe
2025-02-27 14:29:00,728:INFO:Initializing Random Forest Regressor
2025-02-27 14:29:00,728:INFO:Total runtime is 0.08191092411677044 minutes
2025-02-27 14:29:00,729:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:00,729:INFO:Initializing create_model()
2025-02-27 14:29:00,729:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:00,729:INFO:Checking exceptions
2025-02-27 14:29:00,729:INFO:Importing libraries
2025-02-27 14:29:00,729:INFO:Copying training dataset
2025-02-27 14:29:00,731:INFO:Defining folds
2025-02-27 14:29:00,731:INFO:Declaring metric variables
2025-02-27 14:29:00,731:INFO:Importing untrained model
2025-02-27 14:29:00,732:INFO:Random Forest Regressor Imported successfully
2025-02-27 14:29:00,732:INFO:Starting cross validation
2025-02-27 14:29:00,733:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:01,263:INFO:Calculating mean and std
2025-02-27 14:29:01,264:INFO:Creating metrics dataframe
2025-02-27 14:29:01,266:INFO:Uploading results into container
2025-02-27 14:29:01,266:INFO:Uploading model into container now
2025-02-27 14:29:01,266:INFO:_master_model_container: 13
2025-02-27 14:29:01,266:INFO:_display_container: 2
2025-02-27 14:29:01,267:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:29:01,267:INFO:create_model() successfully completed......................................
2025-02-27 14:29:01,328:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:01,328:INFO:Creating metrics dataframe
2025-02-27 14:29:01,330:INFO:Initializing Extra Trees Regressor
2025-02-27 14:29:01,330:INFO:Total runtime is 0.09194043477376303 minutes
2025-02-27 14:29:01,330:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:01,331:INFO:Initializing create_model()
2025-02-27 14:29:01,331:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:01,331:INFO:Checking exceptions
2025-02-27 14:29:01,331:INFO:Importing libraries
2025-02-27 14:29:01,331:INFO:Copying training dataset
2025-02-27 14:29:01,333:INFO:Defining folds
2025-02-27 14:29:01,333:INFO:Declaring metric variables
2025-02-27 14:29:01,334:INFO:Importing untrained model
2025-02-27 14:29:01,334:INFO:Extra Trees Regressor Imported successfully
2025-02-27 14:29:01,334:INFO:Starting cross validation
2025-02-27 14:29:01,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:01,754:INFO:Calculating mean and std
2025-02-27 14:29:01,755:INFO:Creating metrics dataframe
2025-02-27 14:29:01,757:INFO:Uploading results into container
2025-02-27 14:29:01,757:INFO:Uploading model into container now
2025-02-27 14:29:01,757:INFO:_master_model_container: 14
2025-02-27 14:29:01,757:INFO:_display_container: 2
2025-02-27 14:29:01,758:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:29:01,758:INFO:create_model() successfully completed......................................
2025-02-27 14:29:01,825:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:01,825:INFO:Creating metrics dataframe
2025-02-27 14:29:01,828:INFO:Initializing AdaBoost Regressor
2025-02-27 14:29:01,828:INFO:Total runtime is 0.10023857355117799 minutes
2025-02-27 14:29:01,828:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:01,829:INFO:Initializing create_model()
2025-02-27 14:29:01,829:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:01,829:INFO:Checking exceptions
2025-02-27 14:29:01,829:INFO:Importing libraries
2025-02-27 14:29:01,829:INFO:Copying training dataset
2025-02-27 14:29:01,831:INFO:Defining folds
2025-02-27 14:29:01,831:INFO:Declaring metric variables
2025-02-27 14:29:01,832:INFO:Importing untrained model
2025-02-27 14:29:01,832:INFO:AdaBoost Regressor Imported successfully
2025-02-27 14:29:01,832:INFO:Starting cross validation
2025-02-27 14:29:01,833:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:02,127:INFO:Calculating mean and std
2025-02-27 14:29:02,128:INFO:Creating metrics dataframe
2025-02-27 14:29:02,129:INFO:Uploading results into container
2025-02-27 14:29:02,130:INFO:Uploading model into container now
2025-02-27 14:29:02,130:INFO:_master_model_container: 15
2025-02-27 14:29:02,130:INFO:_display_container: 2
2025-02-27 14:29:02,131:INFO:AdaBoostRegressor(random_state=42)
2025-02-27 14:29:02,131:INFO:create_model() successfully completed......................................
2025-02-27 14:29:02,192:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:02,192:INFO:Creating metrics dataframe
2025-02-27 14:29:02,194:INFO:Initializing Gradient Boosting Regressor
2025-02-27 14:29:02,194:INFO:Total runtime is 0.10634391307830812 minutes
2025-02-27 14:29:02,195:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:02,195:INFO:Initializing create_model()
2025-02-27 14:29:02,195:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:02,195:INFO:Checking exceptions
2025-02-27 14:29:02,195:INFO:Importing libraries
2025-02-27 14:29:02,195:INFO:Copying training dataset
2025-02-27 14:29:02,198:INFO:Defining folds
2025-02-27 14:29:02,198:INFO:Declaring metric variables
2025-02-27 14:29:02,198:INFO:Importing untrained model
2025-02-27 14:29:02,199:INFO:Gradient Boosting Regressor Imported successfully
2025-02-27 14:29:02,199:INFO:Starting cross validation
2025-02-27 14:29:02,200:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:29:02,477:INFO:Calculating mean and std
2025-02-27 14:29:02,478:INFO:Creating metrics dataframe
2025-02-27 14:29:02,480:INFO:Uploading results into container
2025-02-27 14:29:02,480:INFO:Uploading model into container now
2025-02-27 14:29:02,481:INFO:_master_model_container: 16
2025-02-27 14:29:02,481:INFO:_display_container: 2
2025-02-27 14:29:02,481:INFO:GradientBoostingRegressor(random_state=42)
2025-02-27 14:29:02,481:INFO:create_model() successfully completed......................................
2025-02-27 14:29:02,549:INFO:SubProcess create_model() end ==================================
2025-02-27 14:29:02,549:INFO:Creating metrics dataframe
2025-02-27 14:29:02,552:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 14:29:02,552:INFO:Total runtime is 0.1122973680496216 minutes
2025-02-27 14:29:02,552:INFO:SubProcess create_model() called ==================================
2025-02-27 14:29:02,552:INFO:Initializing create_model()
2025-02-27 14:29:02,552:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:29:02,552:INFO:Checking exceptions
2025-02-27 14:29:02,552:INFO:Importing libraries
2025-02-27 14:29:02,552:INFO:Copying training dataset
2025-02-27 14:29:02,555:INFO:Defining folds
2025-02-27 14:29:02,555:INFO:Declaring metric variables
2025-02-27 14:29:02,555:INFO:Importing untrained model
2025-02-27 14:29:02,556:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:29:02,556:INFO:Starting cross validation
2025-02-27 14:29:02,557:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:32:00,130:INFO:Calculating mean and std
2025-02-27 14:32:00,131:INFO:Creating metrics dataframe
2025-02-27 14:32:00,134:INFO:Uploading results into container
2025-02-27 14:32:00,134:INFO:Uploading model into container now
2025-02-27 14:32:00,135:INFO:_master_model_container: 17
2025-02-27 14:32:00,135:INFO:_display_container: 2
2025-02-27 14:32:00,136:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:32:00,136:INFO:create_model() successfully completed......................................
2025-02-27 14:32:00,204:INFO:SubProcess create_model() end ==================================
2025-02-27 14:32:00,204:INFO:Creating metrics dataframe
2025-02-27 14:32:00,208:INFO:Initializing Dummy Regressor
2025-02-27 14:32:00,209:INFO:Total runtime is 3.0732457915941875 minutes
2025-02-27 14:32:00,209:INFO:SubProcess create_model() called ==================================
2025-02-27 14:32:00,209:INFO:Initializing create_model()
2025-02-27 14:32:00,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fc132a26e90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:32:00,209:INFO:Checking exceptions
2025-02-27 14:32:00,209:INFO:Importing libraries
2025-02-27 14:32:00,209:INFO:Copying training dataset
2025-02-27 14:32:00,214:INFO:Defining folds
2025-02-27 14:32:00,214:INFO:Declaring metric variables
2025-02-27 14:32:00,214:INFO:Importing untrained model
2025-02-27 14:32:00,215:INFO:Dummy Regressor Imported successfully
2025-02-27 14:32:00,215:INFO:Starting cross validation
2025-02-27 14:32:00,216:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:32:00,372:INFO:Calculating mean and std
2025-02-27 14:32:00,373:INFO:Creating metrics dataframe
2025-02-27 14:32:00,376:INFO:Uploading results into container
2025-02-27 14:32:00,377:INFO:Uploading model into container now
2025-02-27 14:32:00,377:INFO:_master_model_container: 18
2025-02-27 14:32:00,377:INFO:_display_container: 2
2025-02-27 14:32:00,378:INFO:DummyRegressor()
2025-02-27 14:32:00,378:INFO:create_model() successfully completed......................................
2025-02-27 14:32:00,455:INFO:SubProcess create_model() end ==================================
2025-02-27 14:32:00,455:INFO:Creating metrics dataframe
2025-02-27 14:32:00,461:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 14:32:00,464:INFO:Initializing create_model()
2025-02-27 14:32:00,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:32:00,465:INFO:Checking exceptions
2025-02-27 14:32:00,466:INFO:Importing libraries
2025-02-27 14:32:00,466:INFO:Copying training dataset
2025-02-27 14:32:00,470:INFO:Defining folds
2025-02-27 14:32:00,471:INFO:Declaring metric variables
2025-02-27 14:32:00,471:INFO:Importing untrained model
2025-02-27 14:32:00,471:INFO:Declaring custom model
2025-02-27 14:32:00,473:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:32:00,475:INFO:Cross validation set to False
2025-02-27 14:32:00,475:INFO:Fitting Model
2025-02-27 14:32:00,518:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 14:32:00,548:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.028482 seconds.
2025-02-27 14:32:00,548:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 14:32:00,549:INFO:[LightGBM] [Info] Total Bins 179
2025-02-27 14:32:00,553:INFO:[LightGBM] [Info] Number of data points in the train set: 212, number of used features: 4
2025-02-27 14:32:00,562:INFO:[LightGBM] [Info] Start training from score 3.435472
2025-02-27 14:32:00,598:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:00,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:01,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:01,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:01,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:01,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:01,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:02,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:02,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:02,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:02,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:02,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:03,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:03,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:03,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:03,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:03,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:04,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:04,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:04,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:04,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:04,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:05,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:05,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:05,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:05,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:06,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:06,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:06,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:06,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:06,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:07,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:07,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:07,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:07,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:07,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:08,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:08,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:08,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:08,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:08,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:09,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:09,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:09,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:09,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:09,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:10,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:10,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:10,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:10,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:10,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:11,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:11,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:11,528:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:11,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:11,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:12,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:12,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:12,600:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:12,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:12,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:13,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:13,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:13,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:13,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:13,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:14,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:14,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:14,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:14,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:15,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:15,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:15,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:15,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:15,860:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:16,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:16,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:16,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:16,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:16,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:17,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:17,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:17,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:17,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:17,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:18,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:18,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:18,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:18,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:18,805:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:32:18,805:INFO:create_model() successfully completed......................................
2025-02-27 14:32:18,887:INFO:_master_model_container: 18
2025-02-27 14:32:18,887:INFO:_display_container: 2
2025-02-27 14:32:18,888:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:32:18,888:INFO:compare_models() successfully completed......................................
2025-02-27 14:32:18,888:INFO:Initializing finalize_model()
2025-02-27 14:32:18,888:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 14:32:18,889:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:32:18,893:INFO:Initializing create_model()
2025-02-27 14:32:18,893:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7fc138194700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:32:18,893:INFO:Checking exceptions
2025-02-27 14:32:18,895:INFO:Importing libraries
2025-02-27 14:32:18,895:INFO:Copying training dataset
2025-02-27 14:32:18,896:INFO:Defining folds
2025-02-27 14:32:18,896:INFO:Declaring metric variables
2025-02-27 14:32:18,896:INFO:Importing untrained model
2025-02-27 14:32:18,896:INFO:Declaring custom model
2025-02-27 14:32:18,898:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:32:18,899:INFO:Cross validation set to False
2025-02-27 14:32:18,899:INFO:Fitting Model
2025-02-27 14:32:18,929:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 14:32:18,956:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.025791 seconds.
2025-02-27 14:32:18,956:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 14:32:18,956:INFO:[LightGBM] [Info] Total Bins 221
2025-02-27 14:32:18,962:INFO:[LightGBM] [Info] Number of data points in the train set: 304, number of used features: 4
2025-02-27 14:32:18,972:INFO:[LightGBM] [Info] Start training from score 3.391349
2025-02-27 14:32:19,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:19,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:19,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:20,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:20,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:20,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:20,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:21,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:21,614:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:21,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:22,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:22,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:22,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:23,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:23,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:23,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:23,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:24,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:24,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:24,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:25,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:25,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:25,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:26,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:26,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:26,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:27,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:27,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:27,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:27,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:28,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:28,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:28,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:29,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:29,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:29,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:29,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:30,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:30,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:30,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:31,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:31,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:31,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:32,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:32,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:32,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:33,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:33,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:33,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:33,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:34,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:34,550:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:34,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:35,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:35,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:35,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:36,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:36,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:36,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:36,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:37,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:37,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:37,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:38,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:38,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:38,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:39,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:39,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:39,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:40,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:40,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:40,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:40,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:41,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:41,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:41,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:42,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:42,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:42,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:43,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:43,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:43,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:44,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:44,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:44,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:45,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:45,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:45,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:46,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:46,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:46,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:47,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:47,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:47,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:48,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:48,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:48,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:49,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:49,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:49,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:32:49,605:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[' Year', ' GDP (in billion USD)',
                                             ' Inflation Rate (%)',
                                             ' Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 14:32:49,605:INFO:create_model() successfully completed......................................
2025-02-27 14:32:49,674:INFO:_master_model_container: 18
2025-02-27 14:32:49,674:INFO:_display_container: 2
2025-02-27 14:32:49,685:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=[' Year', ' GDP (in billion USD)',
                                             ' Inflation Rate (%)',
                                             ' Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 14:32:49,685:INFO:finalize_model() successfully completed......................................
2025-02-27 14:42:55,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:42:55,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:42:55,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:42:55,268:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:42:55,393:INFO:PyCaret RegressionExperiment
2025-02-27 14:42:55,393:INFO:Logging name: reg-default-name
2025-02-27 14:42:55,393:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 14:42:55,393:INFO:version 3.3.2
2025-02-27 14:42:55,393:INFO:Initializing setup()
2025-02-27 14:42:55,393:INFO:self.USI: 459d
2025-02-27 14:42:55,394:INFO:self._variable_keys: {'gpu_param', 'n_jobs_param', 'gpu_n_jobs_param', 'y', 'exp_id', 'target_param', 'memory', 'pipeline', '_available_plots', 'seed', 'data', 'USI', 'logging_param', 'y_train', 'transform_target_param', 'fold_generator', 'fold_groups_param', 'idx', 'fold_shuffle_param', 'X', 'html_param', 'log_plots_param', 'y_test', '_ml_usecase', 'exp_name_log', 'X_train', 'X_test'}
2025-02-27 14:42:55,394:INFO:Checking environment
2025-02-27 14:42:55,394:INFO:python_version: 3.10.12
2025-02-27 14:42:55,394:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 14:42:55,394:INFO:machine: x86_64
2025-02-27 14:42:55,395:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:42:55,395:INFO:Memory: svmem(total=16420966400, available=10924355584, percent=33.5, used=4528963584, free=1333886976, active=5472714752, inactive=8134402048, buffers=396886016, cached=10161229824, shared=615985152, slab=780382208)
2025-02-27 14:42:55,395:INFO:Physical Core: 4
2025-02-27 14:42:55,396:INFO:Logical Core: 8
2025-02-27 14:42:55,396:INFO:Checking libraries
2025-02-27 14:42:55,396:INFO:System:
2025-02-27 14:42:55,396:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 14:42:55,396:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 14:42:55,396:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 14:42:55,396:INFO:PyCaret required dependencies:
2025-02-27 14:42:55,420:INFO:                 pip: 25.0.1
2025-02-27 14:42:55,421:INFO:          setuptools: 75.8.2
2025-02-27 14:42:55,421:INFO:             pycaret: 3.3.2
2025-02-27 14:42:55,421:INFO:             IPython: 8.32.0
2025-02-27 14:42:55,421:INFO:          ipywidgets: 8.1.5
2025-02-27 14:42:55,421:INFO:                tqdm: 4.67.1
2025-02-27 14:42:55,421:INFO:               numpy: 1.26.4
2025-02-27 14:42:55,421:INFO:              pandas: 2.1.4
2025-02-27 14:42:55,421:INFO:              jinja2: 3.1.5
2025-02-27 14:42:55,421:INFO:               scipy: 1.11.4
2025-02-27 14:42:55,421:INFO:              joblib: 1.3.2
2025-02-27 14:42:55,421:INFO:             sklearn: 1.4.2
2025-02-27 14:42:55,421:INFO:                pyod: 2.0.3
2025-02-27 14:42:55,421:INFO:            imblearn: 0.13.0
2025-02-27 14:42:55,421:INFO:   category_encoders: 2.7.0
2025-02-27 14:42:55,421:INFO:            lightgbm: 4.6.0
2025-02-27 14:42:55,421:INFO:               numba: 0.61.0
2025-02-27 14:42:55,421:INFO:            requests: 2.32.3
2025-02-27 14:42:55,421:INFO:          matplotlib: 3.7.5
2025-02-27 14:42:55,421:INFO:          scikitplot: 0.3.7
2025-02-27 14:42:55,422:INFO:         yellowbrick: 1.5
2025-02-27 14:42:55,422:INFO:              plotly: 5.24.1
2025-02-27 14:42:55,422:INFO:    plotly-resampler: Not installed
2025-02-27 14:42:55,422:INFO:             kaleido: 0.2.1
2025-02-27 14:42:55,422:INFO:           schemdraw: 0.15
2025-02-27 14:42:55,422:INFO:         statsmodels: 0.14.4
2025-02-27 14:42:55,422:INFO:              sktime: 0.26.0
2025-02-27 14:42:55,422:INFO:               tbats: 1.1.3
2025-02-27 14:42:55,422:INFO:            pmdarima: 2.0.4
2025-02-27 14:42:55,422:INFO:              psutil: 7.0.0
2025-02-27 14:42:55,422:INFO:          markupsafe: 3.0.2
2025-02-27 14:42:55,422:INFO:             pickle5: Not installed
2025-02-27 14:42:55,422:INFO:         cloudpickle: 3.1.1
2025-02-27 14:42:55,422:INFO:         deprecation: 2.1.0
2025-02-27 14:42:55,422:INFO:              xxhash: 3.5.0
2025-02-27 14:42:55,422:INFO:           wurlitzer: 3.1.1
2025-02-27 14:42:55,422:INFO:PyCaret optional dependencies:
2025-02-27 14:42:55,437:INFO:                shap: Not installed
2025-02-27 14:42:55,437:INFO:           interpret: Not installed
2025-02-27 14:42:55,437:INFO:                umap: Not installed
2025-02-27 14:42:55,437:INFO:     ydata_profiling: Not installed
2025-02-27 14:42:55,437:INFO:  explainerdashboard: Not installed
2025-02-27 14:42:55,437:INFO:             autoviz: Not installed
2025-02-27 14:42:55,437:INFO:           fairlearn: Not installed
2025-02-27 14:42:55,437:INFO:          deepchecks: Not installed
2025-02-27 14:42:55,437:INFO:             xgboost: Not installed
2025-02-27 14:42:55,437:INFO:            catboost: Not installed
2025-02-27 14:42:55,437:INFO:              kmodes: Not installed
2025-02-27 14:42:55,437:INFO:             mlxtend: Not installed
2025-02-27 14:42:55,437:INFO:       statsforecast: Not installed
2025-02-27 14:42:55,437:INFO:        tune_sklearn: Not installed
2025-02-27 14:42:55,437:INFO:                 ray: Not installed
2025-02-27 14:42:55,437:INFO:            hyperopt: Not installed
2025-02-27 14:42:55,437:INFO:              optuna: Not installed
2025-02-27 14:42:55,437:INFO:               skopt: Not installed
2025-02-27 14:42:55,437:INFO:              mlflow: Not installed
2025-02-27 14:42:55,438:INFO:              gradio: Not installed
2025-02-27 14:42:55,438:INFO:             fastapi: Not installed
2025-02-27 14:42:55,438:INFO:             uvicorn: Not installed
2025-02-27 14:42:55,438:INFO:              m2cgen: Not installed
2025-02-27 14:42:55,438:INFO:           evidently: Not installed
2025-02-27 14:42:55,438:INFO:               fugue: Not installed
2025-02-27 14:42:55,438:INFO:           streamlit: Not installed
2025-02-27 14:42:55,438:INFO:             prophet: Not installed
2025-02-27 14:42:55,438:INFO:None
2025-02-27 14:42:55,438:INFO:Set up data.
2025-02-27 14:42:55,442:INFO:Set up folding strategy.
2025-02-27 14:42:55,442:INFO:Set up train/test split.
2025-02-27 14:42:55,445:INFO:Set up index.
2025-02-27 14:42:55,445:INFO:Assigning column types.
2025-02-27 14:42:55,449:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 14:42:55,449:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,456:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,461:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,573:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,578:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,691:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,692:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,692:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 14:42:55,696:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,702:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,761:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,805:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,807:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,811:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,817:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,874:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,918:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:55,919:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 14:42:55,927:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:55,986:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,035:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,045:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,099:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,139:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,140:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,140:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 14:42:56,201:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,303:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,343:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,344:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,344:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 14:42:56,406:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 14:42:56,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,553:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 14:42:56,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,654:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,755:INFO:Preparing preprocessing pipeline...
2025-02-27 14:42:56,755:INFO:Set up simple imputation.
2025-02-27 14:42:56,755:INFO:Set up feature normalization.
2025-02-27 14:42:56,756:INFO:Set up column name cleaning.
2025-02-27 14:42:56,781:INFO:Finished creating preprocessing pipeline.
2025-02-27 14:42:56,786:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 14:42:56,786:INFO:Creating final display dataframe.
2025-02-27 14:42:56,858:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target  Economic Growth (%)
2                   Target type           Regression
3           Original data shape             (304, 5)
4        Transformed data shape             (304, 5)
5   Transformed train set shape             (212, 5)
6    Transformed test set shape              (92, 5)
7              Numeric features                    4
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12                    Normalize                 True
13             Normalize method               zscore
14               Fold Generator                KFold
15                  Fold Number                   10
16                     CPU Jobs                   -1
17                      Use GPU                False
18               Log Experiment                False
19              Experiment Name     reg-default-name
20                          USI                 459d
2025-02-27 14:42:56,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:56,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:57,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:57,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 14:42:57,071:INFO:setup() successfully completed in 1.68s...............
2025-02-27 14:42:57,071:INFO:Initializing compare_models()
2025-02-27 14:42:57,071:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-27 14:42:57,071:INFO:Checking exceptions
2025-02-27 14:42:57,072:INFO:Preparing display monitor
2025-02-27 14:42:57,076:INFO:Initializing Linear Regression
2025-02-27 14:42:57,076:INFO:Total runtime is 1.8636385599772135e-06 minutes
2025-02-27 14:42:57,076:INFO:SubProcess create_model() called ==================================
2025-02-27 14:42:57,076:INFO:Initializing create_model()
2025-02-27 14:42:57,076:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:42:57,076:INFO:Checking exceptions
2025-02-27 14:42:57,076:INFO:Importing libraries
2025-02-27 14:42:57,076:INFO:Copying training dataset
2025-02-27 14:42:57,080:INFO:Defining folds
2025-02-27 14:42:57,080:INFO:Declaring metric variables
2025-02-27 14:42:57,080:INFO:Importing untrained model
2025-02-27 14:42:57,080:INFO:Linear Regression Imported successfully
2025-02-27 14:42:57,081:INFO:Starting cross validation
2025-02-27 14:42:57,084:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:00,133:INFO:Calculating mean and std
2025-02-27 14:43:00,134:INFO:Creating metrics dataframe
2025-02-27 14:43:00,138:INFO:Uploading results into container
2025-02-27 14:43:00,139:INFO:Uploading model into container now
2025-02-27 14:43:00,140:INFO:_master_model_container: 1
2025-02-27 14:43:00,140:INFO:_display_container: 2
2025-02-27 14:43:00,141:INFO:LinearRegression(n_jobs=-1)
2025-02-27 14:43:00,141:INFO:create_model() successfully completed......................................
2025-02-27 14:43:00,218:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:00,218:INFO:Creating metrics dataframe
2025-02-27 14:43:00,221:INFO:Initializing Lasso Regression
2025-02-27 14:43:00,221:INFO:Total runtime is 0.05241843859354655 minutes
2025-02-27 14:43:00,221:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:00,221:INFO:Initializing create_model()
2025-02-27 14:43:00,221:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:00,221:INFO:Checking exceptions
2025-02-27 14:43:00,221:INFO:Importing libraries
2025-02-27 14:43:00,221:INFO:Copying training dataset
2025-02-27 14:43:00,224:INFO:Defining folds
2025-02-27 14:43:00,224:INFO:Declaring metric variables
2025-02-27 14:43:00,224:INFO:Importing untrained model
2025-02-27 14:43:00,224:INFO:Lasso Regression Imported successfully
2025-02-27 14:43:00,225:INFO:Starting cross validation
2025-02-27 14:43:00,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:00,328:INFO:Calculating mean and std
2025-02-27 14:43:00,329:INFO:Creating metrics dataframe
2025-02-27 14:43:00,335:INFO:Uploading results into container
2025-02-27 14:43:00,336:INFO:Uploading model into container now
2025-02-27 14:43:00,336:INFO:_master_model_container: 2
2025-02-27 14:43:00,336:INFO:_display_container: 2
2025-02-27 14:43:00,336:INFO:Lasso(random_state=42)
2025-02-27 14:43:00,336:INFO:create_model() successfully completed......................................
2025-02-27 14:43:00,392:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:00,392:INFO:Creating metrics dataframe
2025-02-27 14:43:00,395:INFO:Initializing Ridge Regression
2025-02-27 14:43:00,395:INFO:Total runtime is 0.05532217025756836 minutes
2025-02-27 14:43:00,395:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:00,395:INFO:Initializing create_model()
2025-02-27 14:43:00,395:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:00,395:INFO:Checking exceptions
2025-02-27 14:43:00,395:INFO:Importing libraries
2025-02-27 14:43:00,395:INFO:Copying training dataset
2025-02-27 14:43:00,398:INFO:Defining folds
2025-02-27 14:43:00,399:INFO:Declaring metric variables
2025-02-27 14:43:00,399:INFO:Importing untrained model
2025-02-27 14:43:00,399:INFO:Ridge Regression Imported successfully
2025-02-27 14:43:00,399:INFO:Starting cross validation
2025-02-27 14:43:00,400:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:00,498:INFO:Calculating mean and std
2025-02-27 14:43:00,498:INFO:Creating metrics dataframe
2025-02-27 14:43:00,500:INFO:Uploading results into container
2025-02-27 14:43:00,500:INFO:Uploading model into container now
2025-02-27 14:43:00,501:INFO:_master_model_container: 3
2025-02-27 14:43:00,501:INFO:_display_container: 2
2025-02-27 14:43:00,501:INFO:Ridge(random_state=42)
2025-02-27 14:43:00,501:INFO:create_model() successfully completed......................................
2025-02-27 14:43:00,556:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:00,557:INFO:Creating metrics dataframe
2025-02-27 14:43:00,559:INFO:Initializing Elastic Net
2025-02-27 14:43:00,559:INFO:Total runtime is 0.05805991490681966 minutes
2025-02-27 14:43:00,559:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:00,560:INFO:Initializing create_model()
2025-02-27 14:43:00,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:00,560:INFO:Checking exceptions
2025-02-27 14:43:00,560:INFO:Importing libraries
2025-02-27 14:43:00,560:INFO:Copying training dataset
2025-02-27 14:43:00,562:INFO:Defining folds
2025-02-27 14:43:00,562:INFO:Declaring metric variables
2025-02-27 14:43:00,563:INFO:Importing untrained model
2025-02-27 14:43:00,563:INFO:Elastic Net Imported successfully
2025-02-27 14:43:00,563:INFO:Starting cross validation
2025-02-27 14:43:00,564:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:00,667:INFO:Calculating mean and std
2025-02-27 14:43:00,667:INFO:Creating metrics dataframe
2025-02-27 14:43:00,669:INFO:Uploading results into container
2025-02-27 14:43:00,669:INFO:Uploading model into container now
2025-02-27 14:43:00,670:INFO:_master_model_container: 4
2025-02-27 14:43:00,670:INFO:_display_container: 2
2025-02-27 14:43:00,670:INFO:ElasticNet(random_state=42)
2025-02-27 14:43:00,670:INFO:create_model() successfully completed......................................
2025-02-27 14:43:00,727:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:00,727:INFO:Creating metrics dataframe
2025-02-27 14:43:00,730:INFO:Initializing Least Angle Regression
2025-02-27 14:43:00,730:INFO:Total runtime is 0.06091415087381998 minutes
2025-02-27 14:43:00,731:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:00,731:INFO:Initializing create_model()
2025-02-27 14:43:00,731:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:00,731:INFO:Checking exceptions
2025-02-27 14:43:00,731:INFO:Importing libraries
2025-02-27 14:43:00,731:INFO:Copying training dataset
2025-02-27 14:43:00,734:INFO:Defining folds
2025-02-27 14:43:00,734:INFO:Declaring metric variables
2025-02-27 14:43:00,735:INFO:Importing untrained model
2025-02-27 14:43:00,735:INFO:Least Angle Regression Imported successfully
2025-02-27 14:43:00,735:INFO:Starting cross validation
2025-02-27 14:43:00,736:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:00,846:INFO:Calculating mean and std
2025-02-27 14:43:00,847:INFO:Creating metrics dataframe
2025-02-27 14:43:00,849:INFO:Uploading results into container
2025-02-27 14:43:00,849:INFO:Uploading model into container now
2025-02-27 14:43:00,850:INFO:_master_model_container: 5
2025-02-27 14:43:00,850:INFO:_display_container: 2
2025-02-27 14:43:00,850:INFO:Lars(random_state=42)
2025-02-27 14:43:00,850:INFO:create_model() successfully completed......................................
2025-02-27 14:43:00,907:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:00,907:INFO:Creating metrics dataframe
2025-02-27 14:43:00,910:INFO:Initializing Lasso Least Angle Regression
2025-02-27 14:43:00,910:INFO:Total runtime is 0.0639128049214681 minutes
2025-02-27 14:43:00,911:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:00,911:INFO:Initializing create_model()
2025-02-27 14:43:00,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:00,911:INFO:Checking exceptions
2025-02-27 14:43:00,911:INFO:Importing libraries
2025-02-27 14:43:00,911:INFO:Copying training dataset
2025-02-27 14:43:00,915:INFO:Defining folds
2025-02-27 14:43:00,915:INFO:Declaring metric variables
2025-02-27 14:43:00,915:INFO:Importing untrained model
2025-02-27 14:43:00,915:INFO:Lasso Least Angle Regression Imported successfully
2025-02-27 14:43:00,916:INFO:Starting cross validation
2025-02-27 14:43:00,917:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,039:INFO:Calculating mean and std
2025-02-27 14:43:01,039:INFO:Creating metrics dataframe
2025-02-27 14:43:01,041:INFO:Uploading results into container
2025-02-27 14:43:01,042:INFO:Uploading model into container now
2025-02-27 14:43:01,042:INFO:_master_model_container: 6
2025-02-27 14:43:01,042:INFO:_display_container: 2
2025-02-27 14:43:01,042:INFO:LassoLars(random_state=42)
2025-02-27 14:43:01,043:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,098:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,098:INFO:Creating metrics dataframe
2025-02-27 14:43:01,101:INFO:Initializing Orthogonal Matching Pursuit
2025-02-27 14:43:01,101:INFO:Total runtime is 0.06709441343943279 minutes
2025-02-27 14:43:01,101:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,102:INFO:Initializing create_model()
2025-02-27 14:43:01,102:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,102:INFO:Checking exceptions
2025-02-27 14:43:01,102:INFO:Importing libraries
2025-02-27 14:43:01,102:INFO:Copying training dataset
2025-02-27 14:43:01,105:INFO:Defining folds
2025-02-27 14:43:01,105:INFO:Declaring metric variables
2025-02-27 14:43:01,105:INFO:Importing untrained model
2025-02-27 14:43:01,105:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-27 14:43:01,105:INFO:Starting cross validation
2025-02-27 14:43:01,106:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,213:INFO:Calculating mean and std
2025-02-27 14:43:01,214:INFO:Creating metrics dataframe
2025-02-27 14:43:01,216:INFO:Uploading results into container
2025-02-27 14:43:01,217:INFO:Uploading model into container now
2025-02-27 14:43:01,217:INFO:_master_model_container: 7
2025-02-27 14:43:01,217:INFO:_display_container: 2
2025-02-27 14:43:01,217:INFO:OrthogonalMatchingPursuit()
2025-02-27 14:43:01,218:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,271:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,271:INFO:Creating metrics dataframe
2025-02-27 14:43:01,274:INFO:Initializing Bayesian Ridge
2025-02-27 14:43:01,275:INFO:Total runtime is 0.06998380819956462 minutes
2025-02-27 14:43:01,275:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,275:INFO:Initializing create_model()
2025-02-27 14:43:01,275:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,275:INFO:Checking exceptions
2025-02-27 14:43:01,275:INFO:Importing libraries
2025-02-27 14:43:01,275:INFO:Copying training dataset
2025-02-27 14:43:01,280:INFO:Defining folds
2025-02-27 14:43:01,281:INFO:Declaring metric variables
2025-02-27 14:43:01,281:INFO:Importing untrained model
2025-02-27 14:43:01,281:INFO:Bayesian Ridge Imported successfully
2025-02-27 14:43:01,282:INFO:Starting cross validation
2025-02-27 14:43:01,283:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,396:INFO:Calculating mean and std
2025-02-27 14:43:01,396:INFO:Creating metrics dataframe
2025-02-27 14:43:01,398:INFO:Uploading results into container
2025-02-27 14:43:01,399:INFO:Uploading model into container now
2025-02-27 14:43:01,399:INFO:_master_model_container: 8
2025-02-27 14:43:01,399:INFO:_display_container: 2
2025-02-27 14:43:01,399:INFO:BayesianRidge()
2025-02-27 14:43:01,399:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,452:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,452:INFO:Creating metrics dataframe
2025-02-27 14:43:01,455:INFO:Initializing Passive Aggressive Regressor
2025-02-27 14:43:01,455:INFO:Total runtime is 0.07298621733983358 minutes
2025-02-27 14:43:01,455:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,455:INFO:Initializing create_model()
2025-02-27 14:43:01,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,455:INFO:Checking exceptions
2025-02-27 14:43:01,455:INFO:Importing libraries
2025-02-27 14:43:01,455:INFO:Copying training dataset
2025-02-27 14:43:01,458:INFO:Defining folds
2025-02-27 14:43:01,458:INFO:Declaring metric variables
2025-02-27 14:43:01,458:INFO:Importing untrained model
2025-02-27 14:43:01,458:INFO:Passive Aggressive Regressor Imported successfully
2025-02-27 14:43:01,459:INFO:Starting cross validation
2025-02-27 14:43:01,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,555:INFO:Calculating mean and std
2025-02-27 14:43:01,556:INFO:Creating metrics dataframe
2025-02-27 14:43:01,557:INFO:Uploading results into container
2025-02-27 14:43:01,558:INFO:Uploading model into container now
2025-02-27 14:43:01,558:INFO:_master_model_container: 9
2025-02-27 14:43:01,558:INFO:_display_container: 2
2025-02-27 14:43:01,558:INFO:PassiveAggressiveRegressor(random_state=42)
2025-02-27 14:43:01,558:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,612:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,612:INFO:Creating metrics dataframe
2025-02-27 14:43:01,615:INFO:Initializing Huber Regressor
2025-02-27 14:43:01,615:INFO:Total runtime is 0.07565383513768514 minutes
2025-02-27 14:43:01,615:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,615:INFO:Initializing create_model()
2025-02-27 14:43:01,615:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,615:INFO:Checking exceptions
2025-02-27 14:43:01,615:INFO:Importing libraries
2025-02-27 14:43:01,615:INFO:Copying training dataset
2025-02-27 14:43:01,618:INFO:Defining folds
2025-02-27 14:43:01,618:INFO:Declaring metric variables
2025-02-27 14:43:01,619:INFO:Importing untrained model
2025-02-27 14:43:01,619:INFO:Huber Regressor Imported successfully
2025-02-27 14:43:01,619:INFO:Starting cross validation
2025-02-27 14:43:01,620:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,721:INFO:Calculating mean and std
2025-02-27 14:43:01,722:INFO:Creating metrics dataframe
2025-02-27 14:43:01,723:INFO:Uploading results into container
2025-02-27 14:43:01,724:INFO:Uploading model into container now
2025-02-27 14:43:01,724:INFO:_master_model_container: 10
2025-02-27 14:43:01,724:INFO:_display_container: 2
2025-02-27 14:43:01,724:INFO:HuberRegressor()
2025-02-27 14:43:01,724:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,782:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,782:INFO:Creating metrics dataframe
2025-02-27 14:43:01,785:INFO:Initializing K Neighbors Regressor
2025-02-27 14:43:01,785:INFO:Total runtime is 0.0784888505935669 minutes
2025-02-27 14:43:01,785:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,785:INFO:Initializing create_model()
2025-02-27 14:43:01,785:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,785:INFO:Checking exceptions
2025-02-27 14:43:01,785:INFO:Importing libraries
2025-02-27 14:43:01,785:INFO:Copying training dataset
2025-02-27 14:43:01,789:INFO:Defining folds
2025-02-27 14:43:01,790:INFO:Declaring metric variables
2025-02-27 14:43:01,790:INFO:Importing untrained model
2025-02-27 14:43:01,790:INFO:K Neighbors Regressor Imported successfully
2025-02-27 14:43:01,790:INFO:Starting cross validation
2025-02-27 14:43:01,792:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:01,934:INFO:Calculating mean and std
2025-02-27 14:43:01,935:INFO:Creating metrics dataframe
2025-02-27 14:43:01,937:INFO:Uploading results into container
2025-02-27 14:43:01,937:INFO:Uploading model into container now
2025-02-27 14:43:01,938:INFO:_master_model_container: 11
2025-02-27 14:43:01,938:INFO:_display_container: 2
2025-02-27 14:43:01,938:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-27 14:43:01,938:INFO:create_model() successfully completed......................................
2025-02-27 14:43:01,993:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:01,994:INFO:Creating metrics dataframe
2025-02-27 14:43:01,996:INFO:Initializing Decision Tree Regressor
2025-02-27 14:43:01,996:INFO:Total runtime is 0.08201097249984741 minutes
2025-02-27 14:43:01,996:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:01,997:INFO:Initializing create_model()
2025-02-27 14:43:01,997:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:01,997:INFO:Checking exceptions
2025-02-27 14:43:01,997:INFO:Importing libraries
2025-02-27 14:43:01,997:INFO:Copying training dataset
2025-02-27 14:43:01,999:INFO:Defining folds
2025-02-27 14:43:01,999:INFO:Declaring metric variables
2025-02-27 14:43:02,000:INFO:Importing untrained model
2025-02-27 14:43:02,000:INFO:Decision Tree Regressor Imported successfully
2025-02-27 14:43:02,000:INFO:Starting cross validation
2025-02-27 14:43:02,001:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:02,113:INFO:Calculating mean and std
2025-02-27 14:43:02,114:INFO:Creating metrics dataframe
2025-02-27 14:43:02,116:INFO:Uploading results into container
2025-02-27 14:43:02,116:INFO:Uploading model into container now
2025-02-27 14:43:02,117:INFO:_master_model_container: 12
2025-02-27 14:43:02,117:INFO:_display_container: 2
2025-02-27 14:43:02,117:INFO:DecisionTreeRegressor(random_state=42)
2025-02-27 14:43:02,117:INFO:create_model() successfully completed......................................
2025-02-27 14:43:02,176:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:02,176:INFO:Creating metrics dataframe
2025-02-27 14:43:02,179:INFO:Initializing Random Forest Regressor
2025-02-27 14:43:02,179:INFO:Total runtime is 0.0850569725036621 minutes
2025-02-27 14:43:02,179:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:02,179:INFO:Initializing create_model()
2025-02-27 14:43:02,180:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:02,180:INFO:Checking exceptions
2025-02-27 14:43:02,180:INFO:Importing libraries
2025-02-27 14:43:02,180:INFO:Copying training dataset
2025-02-27 14:43:02,183:INFO:Defining folds
2025-02-27 14:43:02,183:INFO:Declaring metric variables
2025-02-27 14:43:02,183:INFO:Importing untrained model
2025-02-27 14:43:02,183:INFO:Random Forest Regressor Imported successfully
2025-02-27 14:43:02,183:INFO:Starting cross validation
2025-02-27 14:43:02,184:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:02,748:INFO:Calculating mean and std
2025-02-27 14:43:02,748:INFO:Creating metrics dataframe
2025-02-27 14:43:02,750:INFO:Uploading results into container
2025-02-27 14:43:02,751:INFO:Uploading model into container now
2025-02-27 14:43:02,751:INFO:_master_model_container: 13
2025-02-27 14:43:02,751:INFO:_display_container: 2
2025-02-27 14:43:02,751:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:43:02,752:INFO:create_model() successfully completed......................................
2025-02-27 14:43:02,807:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:02,807:INFO:Creating metrics dataframe
2025-02-27 14:43:02,810:INFO:Initializing Extra Trees Regressor
2025-02-27 14:43:02,810:INFO:Total runtime is 0.09557565848032633 minutes
2025-02-27 14:43:02,810:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:02,811:INFO:Initializing create_model()
2025-02-27 14:43:02,811:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:02,811:INFO:Checking exceptions
2025-02-27 14:43:02,811:INFO:Importing libraries
2025-02-27 14:43:02,811:INFO:Copying training dataset
2025-02-27 14:43:02,813:INFO:Defining folds
2025-02-27 14:43:02,813:INFO:Declaring metric variables
2025-02-27 14:43:02,813:INFO:Importing untrained model
2025-02-27 14:43:02,814:INFO:Extra Trees Regressor Imported successfully
2025-02-27 14:43:02,814:INFO:Starting cross validation
2025-02-27 14:43:02,814:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:03,246:INFO:Calculating mean and std
2025-02-27 14:43:03,246:INFO:Creating metrics dataframe
2025-02-27 14:43:03,248:INFO:Uploading results into container
2025-02-27 14:43:03,248:INFO:Uploading model into container now
2025-02-27 14:43:03,249:INFO:_master_model_container: 14
2025-02-27 14:43:03,249:INFO:_display_container: 2
2025-02-27 14:43:03,249:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:43:03,249:INFO:create_model() successfully completed......................................
2025-02-27 14:43:03,305:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:03,305:INFO:Creating metrics dataframe
2025-02-27 14:43:03,308:INFO:Initializing AdaBoost Regressor
2025-02-27 14:43:03,308:INFO:Total runtime is 0.10387428601582845 minutes
2025-02-27 14:43:03,308:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:03,309:INFO:Initializing create_model()
2025-02-27 14:43:03,309:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:03,309:INFO:Checking exceptions
2025-02-27 14:43:03,309:INFO:Importing libraries
2025-02-27 14:43:03,309:INFO:Copying training dataset
2025-02-27 14:43:03,311:INFO:Defining folds
2025-02-27 14:43:03,311:INFO:Declaring metric variables
2025-02-27 14:43:03,311:INFO:Importing untrained model
2025-02-27 14:43:03,312:INFO:AdaBoost Regressor Imported successfully
2025-02-27 14:43:03,312:INFO:Starting cross validation
2025-02-27 14:43:03,313:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:03,597:INFO:Calculating mean and std
2025-02-27 14:43:03,597:INFO:Creating metrics dataframe
2025-02-27 14:43:03,599:INFO:Uploading results into container
2025-02-27 14:43:03,600:INFO:Uploading model into container now
2025-02-27 14:43:03,600:INFO:_master_model_container: 15
2025-02-27 14:43:03,600:INFO:_display_container: 2
2025-02-27 14:43:03,600:INFO:AdaBoostRegressor(random_state=42)
2025-02-27 14:43:03,600:INFO:create_model() successfully completed......................................
2025-02-27 14:43:03,652:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:03,652:INFO:Creating metrics dataframe
2025-02-27 14:43:03,656:INFO:Initializing Gradient Boosting Regressor
2025-02-27 14:43:03,656:INFO:Total runtime is 0.1096775730450948 minutes
2025-02-27 14:43:03,656:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:03,657:INFO:Initializing create_model()
2025-02-27 14:43:03,657:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:03,657:INFO:Checking exceptions
2025-02-27 14:43:03,657:INFO:Importing libraries
2025-02-27 14:43:03,657:INFO:Copying training dataset
2025-02-27 14:43:03,661:INFO:Defining folds
2025-02-27 14:43:03,661:INFO:Declaring metric variables
2025-02-27 14:43:03,661:INFO:Importing untrained model
2025-02-27 14:43:03,662:INFO:Gradient Boosting Regressor Imported successfully
2025-02-27 14:43:03,662:INFO:Starting cross validation
2025-02-27 14:43:03,663:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:43:04,111:INFO:Calculating mean and std
2025-02-27 14:43:04,111:INFO:Creating metrics dataframe
2025-02-27 14:43:04,113:INFO:Uploading results into container
2025-02-27 14:43:04,114:INFO:Uploading model into container now
2025-02-27 14:43:04,114:INFO:_master_model_container: 16
2025-02-27 14:43:04,114:INFO:_display_container: 2
2025-02-27 14:43:04,114:INFO:GradientBoostingRegressor(random_state=42)
2025-02-27 14:43:04,114:INFO:create_model() successfully completed......................................
2025-02-27 14:43:04,184:INFO:SubProcess create_model() end ==================================
2025-02-27 14:43:04,185:INFO:Creating metrics dataframe
2025-02-27 14:43:04,188:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 14:43:04,188:INFO:Total runtime is 0.1185446818669637 minutes
2025-02-27 14:43:04,189:INFO:SubProcess create_model() called ==================================
2025-02-27 14:43:04,189:INFO:Initializing create_model()
2025-02-27 14:43:04,189:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:43:04,189:INFO:Checking exceptions
2025-02-27 14:43:04,189:INFO:Importing libraries
2025-02-27 14:43:04,189:INFO:Copying training dataset
2025-02-27 14:43:04,194:INFO:Defining folds
2025-02-27 14:43:04,194:INFO:Declaring metric variables
2025-02-27 14:43:04,195:INFO:Importing untrained model
2025-02-27 14:43:04,195:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:43:04,196:INFO:Starting cross validation
2025-02-27 14:43:04,197:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:47:18,588:INFO:Calculating mean and std
2025-02-27 14:47:18,589:INFO:Creating metrics dataframe
2025-02-27 14:47:18,592:INFO:Uploading results into container
2025-02-27 14:47:18,592:INFO:Uploading model into container now
2025-02-27 14:47:18,593:INFO:_master_model_container: 17
2025-02-27 14:47:18,593:INFO:_display_container: 2
2025-02-27 14:47:18,594:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:47:18,594:INFO:create_model() successfully completed......................................
2025-02-27 14:47:18,661:INFO:SubProcess create_model() end ==================================
2025-02-27 14:47:18,661:INFO:Creating metrics dataframe
2025-02-27 14:47:18,665:INFO:Initializing Dummy Regressor
2025-02-27 14:47:18,666:INFO:Total runtime is 4.3598314881324765 minutes
2025-02-27 14:47:18,666:INFO:SubProcess create_model() called ==================================
2025-02-27 14:47:18,666:INFO:Initializing create_model()
2025-02-27 14:47:18,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7401d40e3250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:47:18,666:INFO:Checking exceptions
2025-02-27 14:47:18,666:INFO:Importing libraries
2025-02-27 14:47:18,666:INFO:Copying training dataset
2025-02-27 14:47:18,670:INFO:Defining folds
2025-02-27 14:47:18,670:INFO:Declaring metric variables
2025-02-27 14:47:18,670:INFO:Importing untrained model
2025-02-27 14:47:18,671:INFO:Dummy Regressor Imported successfully
2025-02-27 14:47:18,671:INFO:Starting cross validation
2025-02-27 14:47:18,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:47:18,793:INFO:Calculating mean and std
2025-02-27 14:47:18,794:INFO:Creating metrics dataframe
2025-02-27 14:47:18,797:INFO:Uploading results into container
2025-02-27 14:47:18,797:INFO:Uploading model into container now
2025-02-27 14:47:18,798:INFO:_master_model_container: 18
2025-02-27 14:47:18,798:INFO:_display_container: 2
2025-02-27 14:47:18,798:INFO:DummyRegressor()
2025-02-27 14:47:18,798:INFO:create_model() successfully completed......................................
2025-02-27 14:47:18,866:INFO:SubProcess create_model() end ==================================
2025-02-27 14:47:18,866:INFO:Creating metrics dataframe
2025-02-27 14:47:18,871:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 14:47:18,874:INFO:Initializing create_model()
2025-02-27 14:47:18,874:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:47:18,874:INFO:Checking exceptions
2025-02-27 14:47:18,875:INFO:Importing libraries
2025-02-27 14:47:18,875:INFO:Copying training dataset
2025-02-27 14:47:18,879:INFO:Defining folds
2025-02-27 14:47:18,879:INFO:Declaring metric variables
2025-02-27 14:47:18,879:INFO:Importing untrained model
2025-02-27 14:47:18,880:INFO:Declaring custom model
2025-02-27 14:47:18,881:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:47:18,882:INFO:Cross validation set to False
2025-02-27 14:47:18,882:INFO:Fitting Model
2025-02-27 14:47:18,915:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 14:47:18,945:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.028646 seconds.
2025-02-27 14:47:18,945:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 14:47:18,945:INFO:[LightGBM] [Info] Total Bins 179
2025-02-27 14:47:18,955:INFO:[LightGBM] [Info] Number of data points in the train set: 212, number of used features: 4
2025-02-27 14:47:18,962:INFO:[LightGBM] [Info] Start training from score 3.435472
2025-02-27 14:47:19,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:19,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:19,509:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:19,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:19,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:20,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:20,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:20,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:20,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,526:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:21,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:22,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:22,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:22,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:22,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:23,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:23,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:23,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:23,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:23,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:24,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:24,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:24,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:24,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:24,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:25,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:25,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:25,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:25,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:26,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:26,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:26,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:26,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:26,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:27,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:27,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:27,517:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:27,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:27,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:28,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:28,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:28,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:28,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:29,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:29,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:29,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:29,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:29,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:30,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:30,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:30,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:30,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:30,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:31,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:31,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:31,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:31,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:31,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:32,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:32,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:32,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:32,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:32,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:33,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:33,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:33,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:33,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:33,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:34,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:34,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:34,596:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:34,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:35,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:35,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:35,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:35,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:35,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:36,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:36,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:36,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:36,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:36,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:37,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:37,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:37,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:37,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,533:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:38,946:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:47:38,946:INFO:create_model() successfully completed......................................
2025-02-27 14:47:39,031:INFO:_master_model_container: 18
2025-02-27 14:47:39,031:INFO:_display_container: 2
2025-02-27 14:47:39,031:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:47:39,031:INFO:compare_models() successfully completed......................................
2025-02-27 14:47:39,032:INFO:Initializing finalize_model()
2025-02-27 14:47:39,032:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 14:47:39,032:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 14:47:39,035:INFO:Initializing create_model()
2025-02-27 14:47:39,035:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7401d4e94700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:47:39,036:INFO:Checking exceptions
2025-02-27 14:47:39,036:INFO:Importing libraries
2025-02-27 14:47:39,037:INFO:Copying training dataset
2025-02-27 14:47:39,037:INFO:Defining folds
2025-02-27 14:47:39,037:INFO:Declaring metric variables
2025-02-27 14:47:39,037:INFO:Importing untrained model
2025-02-27 14:47:39,038:INFO:Declaring custom model
2025-02-27 14:47:39,040:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 14:47:39,041:INFO:Cross validation set to False
2025-02-27 14:47:39,041:INFO:Fitting Model
2025-02-27 14:47:39,066:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 14:47:39,093:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.025869 seconds.
2025-02-27 14:47:39,093:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 14:47:39,093:INFO:[LightGBM] [Info] Total Bins 221
2025-02-27 14:47:39,099:INFO:[LightGBM] [Info] Number of data points in the train set: 304, number of used features: 4
2025-02-27 14:47:39,106:INFO:[LightGBM] [Info] Start training from score 3.391349
2025-02-27 14:47:39,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:39,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:39,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:40,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:40,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:40,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:41,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:41,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:41,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:42,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:42,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:42,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:42,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:43,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:43,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:43,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:44,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:44,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:44,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:45,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:45,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:45,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:46,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:46,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:46,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:47,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:47,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:47,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:47,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:48,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:48,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:48,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:49,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:49,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:49,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:49,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:50,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:50,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:51,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:51,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:51,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:51,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:52,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:52,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:52,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:53,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:53,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:53,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:54,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:54,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:54,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:55,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:55,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:55,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:56,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:56,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:56,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:56,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:57,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:57,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:57,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 14:47:58,793:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 14:47:58,793:INFO:create_model() successfully completed......................................
2025-02-27 14:47:58,845:INFO:_master_model_container: 18
2025-02-27 14:47:58,845:INFO:_display_container: 2
2025-02-27 14:47:58,851:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 14:47:58,851:INFO:finalize_model() successfully completed......................................
2025-02-27 15:16:47,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:16:47,836:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:16:47,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:16:47,837:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:17:13,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:17:13,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:17:13,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:17:13,311:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:17:13,400:INFO:PyCaret RegressionExperiment
2025-02-27 15:17:13,400:INFO:Logging name: reg-default-name
2025-02-27 15:17:13,400:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 15:17:13,400:INFO:version 3.3.2
2025-02-27 15:17:13,400:INFO:Initializing setup()
2025-02-27 15:17:13,400:INFO:self.USI: 56c5
2025-02-27 15:17:13,400:INFO:self._variable_keys: {'exp_name_log', 'y_train', 'gpu_n_jobs_param', 'fold_shuffle_param', '_ml_usecase', 'fold_generator', 'data', 'X_test', 'target_param', 'idx', 'memory', 'log_plots_param', 'logging_param', 'y_test', 'html_param', 'seed', 'pipeline', 'USI', 'y', 'fold_groups_param', '_available_plots', 'gpu_param', 'X_train', 'n_jobs_param', 'transform_target_param', 'X', 'exp_id'}
2025-02-27 15:17:13,400:INFO:Checking environment
2025-02-27 15:17:13,400:INFO:python_version: 3.10.12
2025-02-27 15:17:13,400:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 15:17:13,400:INFO:machine: x86_64
2025-02-27 15:17:13,402:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 15:17:13,402:INFO:Memory: svmem(total=16420966400, available=9808904192, percent=40.3, used=5570301952, free=571658240, active=6572003328, inactive=7715897344, buffers=393080832, cached=9885925376, shared=677515264, slab=789880832)
2025-02-27 15:17:13,403:INFO:Physical Core: 4
2025-02-27 15:17:13,403:INFO:Logical Core: 8
2025-02-27 15:17:13,403:INFO:Checking libraries
2025-02-27 15:17:13,403:INFO:System:
2025-02-27 15:17:13,403:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 15:17:13,403:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 15:17:13,403:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 15:17:13,403:INFO:PyCaret required dependencies:
2025-02-27 15:17:13,429:INFO:                 pip: 25.0.1
2025-02-27 15:17:13,429:INFO:          setuptools: 75.8.2
2025-02-27 15:17:13,429:INFO:             pycaret: 3.3.2
2025-02-27 15:17:13,429:INFO:             IPython: 8.32.0
2025-02-27 15:17:13,429:INFO:          ipywidgets: 8.1.5
2025-02-27 15:17:13,429:INFO:                tqdm: 4.67.1
2025-02-27 15:17:13,429:INFO:               numpy: 1.26.4
2025-02-27 15:17:13,429:INFO:              pandas: 2.1.4
2025-02-27 15:17:13,429:INFO:              jinja2: 3.1.5
2025-02-27 15:17:13,429:INFO:               scipy: 1.11.4
2025-02-27 15:17:13,429:INFO:              joblib: 1.3.2
2025-02-27 15:17:13,429:INFO:             sklearn: 1.4.2
2025-02-27 15:17:13,429:INFO:                pyod: 2.0.3
2025-02-27 15:17:13,429:INFO:            imblearn: 0.13.0
2025-02-27 15:17:13,429:INFO:   category_encoders: 2.7.0
2025-02-27 15:17:13,430:INFO:            lightgbm: 4.6.0
2025-02-27 15:17:13,430:INFO:               numba: 0.61.0
2025-02-27 15:17:13,430:INFO:            requests: 2.32.3
2025-02-27 15:17:13,430:INFO:          matplotlib: 3.7.5
2025-02-27 15:17:13,430:INFO:          scikitplot: 0.3.7
2025-02-27 15:17:13,430:INFO:         yellowbrick: 1.5
2025-02-27 15:17:13,430:INFO:              plotly: 5.24.1
2025-02-27 15:17:13,430:INFO:    plotly-resampler: Not installed
2025-02-27 15:17:13,430:INFO:             kaleido: 0.2.1
2025-02-27 15:17:13,430:INFO:           schemdraw: 0.15
2025-02-27 15:17:13,430:INFO:         statsmodels: 0.14.4
2025-02-27 15:17:13,430:INFO:              sktime: 0.26.0
2025-02-27 15:17:13,430:INFO:               tbats: 1.1.3
2025-02-27 15:17:13,430:INFO:            pmdarima: 2.0.4
2025-02-27 15:17:13,430:INFO:              psutil: 7.0.0
2025-02-27 15:17:13,430:INFO:          markupsafe: 3.0.2
2025-02-27 15:17:13,431:INFO:             pickle5: Not installed
2025-02-27 15:17:13,431:INFO:         cloudpickle: 3.1.1
2025-02-27 15:17:13,431:INFO:         deprecation: 2.1.0
2025-02-27 15:17:13,431:INFO:              xxhash: 3.5.0
2025-02-27 15:17:13,431:INFO:           wurlitzer: 3.1.1
2025-02-27 15:17:13,431:INFO:PyCaret optional dependencies:
2025-02-27 15:17:13,449:INFO:                shap: Not installed
2025-02-27 15:17:13,449:INFO:           interpret: Not installed
2025-02-27 15:17:13,449:INFO:                umap: Not installed
2025-02-27 15:17:13,449:INFO:     ydata_profiling: Not installed
2025-02-27 15:17:13,449:INFO:  explainerdashboard: Not installed
2025-02-27 15:17:13,449:INFO:             autoviz: Not installed
2025-02-27 15:17:13,449:INFO:           fairlearn: Not installed
2025-02-27 15:17:13,449:INFO:          deepchecks: Not installed
2025-02-27 15:17:13,449:INFO:             xgboost: Not installed
2025-02-27 15:17:13,449:INFO:            catboost: Not installed
2025-02-27 15:17:13,449:INFO:              kmodes: Not installed
2025-02-27 15:17:13,449:INFO:             mlxtend: Not installed
2025-02-27 15:17:13,449:INFO:       statsforecast: Not installed
2025-02-27 15:17:13,449:INFO:        tune_sklearn: Not installed
2025-02-27 15:17:13,449:INFO:                 ray: Not installed
2025-02-27 15:17:13,450:INFO:            hyperopt: Not installed
2025-02-27 15:17:13,450:INFO:              optuna: Not installed
2025-02-27 15:17:13,450:INFO:               skopt: Not installed
2025-02-27 15:17:13,450:INFO:              mlflow: Not installed
2025-02-27 15:17:13,450:INFO:              gradio: Not installed
2025-02-27 15:17:13,450:INFO:             fastapi: Not installed
2025-02-27 15:17:13,450:INFO:             uvicorn: Not installed
2025-02-27 15:17:13,450:INFO:              m2cgen: Not installed
2025-02-27 15:17:13,450:INFO:           evidently: Not installed
2025-02-27 15:17:13,450:INFO:               fugue: Not installed
2025-02-27 15:17:13,450:INFO:           streamlit: Not installed
2025-02-27 15:17:13,450:INFO:             prophet: Not installed
2025-02-27 15:17:13,450:INFO:None
2025-02-27 15:17:13,450:INFO:Set up data.
2025-02-27 15:17:13,455:INFO:Set up folding strategy.
2025-02-27 15:17:13,455:INFO:Set up train/test split.
2025-02-27 15:17:13,460:INFO:Set up index.
2025-02-27 15:17:13,460:INFO:Assigning column types.
2025-02-27 15:17:13,465:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 15:17:13,465:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,471:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,475:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,536:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,573:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,575:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,579:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,584:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,626:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,660:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,661:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,661:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 15:17:13,666:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,670:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,710:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,743:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,750:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,828:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,829:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,830:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,830:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 15:17:13,839:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,879:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:13,925:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 15:17:13,983:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,023:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,025:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 15:17:14,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,129:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,192:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,235:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 15:17:14,296:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,404:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 15:17:14,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,446:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 15:17:14,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,657:INFO:Preparing preprocessing pipeline...
2025-02-27 15:17:14,657:INFO:Set up simple imputation.
2025-02-27 15:17:14,657:INFO:Set up feature normalization.
2025-02-27 15:17:14,658:INFO:Set up column name cleaning.
2025-02-27 15:17:14,690:INFO:Finished creating preprocessing pipeline.
2025-02-27 15:17:14,695:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 15:17:14,696:INFO:Creating final display dataframe.
2025-02-27 15:17:14,768:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target  Economic Growth (%)
2                   Target type           Regression
3           Original data shape             (304, 5)
4        Transformed data shape             (304, 5)
5   Transformed train set shape             (212, 5)
6    Transformed test set shape              (92, 5)
7              Numeric features                    4
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12                    Normalize                 True
13             Normalize method               zscore
14               Fold Generator                KFold
15                  Fold Number                   10
16                     CPU Jobs                   -1
17                      Use GPU                False
18               Log Experiment                False
19              Experiment Name     reg-default-name
20                          USI                 56c5
2025-02-27 15:17:14,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 15:17:14,970:INFO:setup() successfully completed in 1.57s...............
2025-02-27 15:17:14,970:INFO:Initializing compare_models()
2025-02-27 15:17:14,970:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-27 15:17:14,970:INFO:Checking exceptions
2025-02-27 15:17:14,972:INFO:Preparing display monitor
2025-02-27 15:17:14,975:INFO:Initializing Linear Regression
2025-02-27 15:17:14,976:INFO:Total runtime is 2.4199485778808595e-06 minutes
2025-02-27 15:17:14,976:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:14,976:INFO:Initializing create_model()
2025-02-27 15:17:14,976:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:14,976:INFO:Checking exceptions
2025-02-27 15:17:14,976:INFO:Importing libraries
2025-02-27 15:17:14,976:INFO:Copying training dataset
2025-02-27 15:17:14,981:INFO:Defining folds
2025-02-27 15:17:14,981:INFO:Declaring metric variables
2025-02-27 15:17:14,981:INFO:Importing untrained model
2025-02-27 15:17:14,981:INFO:Linear Regression Imported successfully
2025-02-27 15:17:14,982:INFO:Starting cross validation
2025-02-27 15:17:14,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:18,382:INFO:Calculating mean and std
2025-02-27 15:17:18,384:INFO:Creating metrics dataframe
2025-02-27 15:17:18,389:INFO:Uploading results into container
2025-02-27 15:17:18,390:INFO:Uploading model into container now
2025-02-27 15:17:18,392:INFO:_master_model_container: 1
2025-02-27 15:17:18,392:INFO:_display_container: 2
2025-02-27 15:17:18,392:INFO:LinearRegression(n_jobs=-1)
2025-02-27 15:17:18,393:INFO:create_model() successfully completed......................................
2025-02-27 15:17:18,491:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:18,491:INFO:Creating metrics dataframe
2025-02-27 15:17:18,496:INFO:Initializing Lasso Regression
2025-02-27 15:17:18,497:INFO:Total runtime is 0.05868766705195109 minutes
2025-02-27 15:17:18,497:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:18,497:INFO:Initializing create_model()
2025-02-27 15:17:18,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:18,497:INFO:Checking exceptions
2025-02-27 15:17:18,497:INFO:Importing libraries
2025-02-27 15:17:18,498:INFO:Copying training dataset
2025-02-27 15:17:18,501:INFO:Defining folds
2025-02-27 15:17:18,501:INFO:Declaring metric variables
2025-02-27 15:17:18,501:INFO:Importing untrained model
2025-02-27 15:17:18,502:INFO:Lasso Regression Imported successfully
2025-02-27 15:17:18,502:INFO:Starting cross validation
2025-02-27 15:17:18,503:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:18,652:INFO:Calculating mean and std
2025-02-27 15:17:18,653:INFO:Creating metrics dataframe
2025-02-27 15:17:18,656:INFO:Uploading results into container
2025-02-27 15:17:18,657:INFO:Uploading model into container now
2025-02-27 15:17:18,657:INFO:_master_model_container: 2
2025-02-27 15:17:18,657:INFO:_display_container: 2
2025-02-27 15:17:18,658:INFO:Lasso(random_state=42)
2025-02-27 15:17:18,658:INFO:create_model() successfully completed......................................
2025-02-27 15:17:18,727:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:18,727:INFO:Creating metrics dataframe
2025-02-27 15:17:18,732:INFO:Initializing Ridge Regression
2025-02-27 15:17:18,732:INFO:Total runtime is 0.06260965267817178 minutes
2025-02-27 15:17:18,732:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:18,732:INFO:Initializing create_model()
2025-02-27 15:17:18,732:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:18,732:INFO:Checking exceptions
2025-02-27 15:17:18,733:INFO:Importing libraries
2025-02-27 15:17:18,733:INFO:Copying training dataset
2025-02-27 15:17:18,736:INFO:Defining folds
2025-02-27 15:17:18,736:INFO:Declaring metric variables
2025-02-27 15:17:18,736:INFO:Importing untrained model
2025-02-27 15:17:18,737:INFO:Ridge Regression Imported successfully
2025-02-27 15:17:18,737:INFO:Starting cross validation
2025-02-27 15:17:18,738:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:18,862:INFO:Calculating mean and std
2025-02-27 15:17:18,863:INFO:Creating metrics dataframe
2025-02-27 15:17:18,865:INFO:Uploading results into container
2025-02-27 15:17:18,866:INFO:Uploading model into container now
2025-02-27 15:17:18,867:INFO:_master_model_container: 3
2025-02-27 15:17:18,867:INFO:_display_container: 2
2025-02-27 15:17:18,867:INFO:Ridge(random_state=42)
2025-02-27 15:17:18,867:INFO:create_model() successfully completed......................................
2025-02-27 15:17:18,929:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:18,929:INFO:Creating metrics dataframe
2025-02-27 15:17:18,933:INFO:Initializing Elastic Net
2025-02-27 15:17:18,933:INFO:Total runtime is 0.06595544815063475 minutes
2025-02-27 15:17:18,933:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:18,933:INFO:Initializing create_model()
2025-02-27 15:17:18,933:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:18,933:INFO:Checking exceptions
2025-02-27 15:17:18,933:INFO:Importing libraries
2025-02-27 15:17:18,933:INFO:Copying training dataset
2025-02-27 15:17:18,936:INFO:Defining folds
2025-02-27 15:17:18,937:INFO:Declaring metric variables
2025-02-27 15:17:18,937:INFO:Importing untrained model
2025-02-27 15:17:18,937:INFO:Elastic Net Imported successfully
2025-02-27 15:17:18,937:INFO:Starting cross validation
2025-02-27 15:17:18,938:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,039:INFO:Calculating mean and std
2025-02-27 15:17:19,040:INFO:Creating metrics dataframe
2025-02-27 15:17:19,042:INFO:Uploading results into container
2025-02-27 15:17:19,043:INFO:Uploading model into container now
2025-02-27 15:17:19,043:INFO:_master_model_container: 4
2025-02-27 15:17:19,043:INFO:_display_container: 2
2025-02-27 15:17:19,044:INFO:ElasticNet(random_state=42)
2025-02-27 15:17:19,044:INFO:create_model() successfully completed......................................
2025-02-27 15:17:19,113:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:19,113:INFO:Creating metrics dataframe
2025-02-27 15:17:19,116:INFO:Initializing Least Angle Regression
2025-02-27 15:17:19,116:INFO:Total runtime is 0.06901569366455076 minutes
2025-02-27 15:17:19,117:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:19,117:INFO:Initializing create_model()
2025-02-27 15:17:19,117:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:19,117:INFO:Checking exceptions
2025-02-27 15:17:19,117:INFO:Importing libraries
2025-02-27 15:17:19,117:INFO:Copying training dataset
2025-02-27 15:17:19,120:INFO:Defining folds
2025-02-27 15:17:19,120:INFO:Declaring metric variables
2025-02-27 15:17:19,120:INFO:Importing untrained model
2025-02-27 15:17:19,121:INFO:Least Angle Regression Imported successfully
2025-02-27 15:17:19,121:INFO:Starting cross validation
2025-02-27 15:17:19,122:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,228:INFO:Calculating mean and std
2025-02-27 15:17:19,229:INFO:Creating metrics dataframe
2025-02-27 15:17:19,232:INFO:Uploading results into container
2025-02-27 15:17:19,232:INFO:Uploading model into container now
2025-02-27 15:17:19,233:INFO:_master_model_container: 5
2025-02-27 15:17:19,233:INFO:_display_container: 2
2025-02-27 15:17:19,233:INFO:Lars(random_state=42)
2025-02-27 15:17:19,234:INFO:create_model() successfully completed......................................
2025-02-27 15:17:19,296:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:19,296:INFO:Creating metrics dataframe
2025-02-27 15:17:19,300:INFO:Initializing Lasso Least Angle Regression
2025-02-27 15:17:19,300:INFO:Total runtime is 0.07208262681961058 minutes
2025-02-27 15:17:19,301:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:19,301:INFO:Initializing create_model()
2025-02-27 15:17:19,301:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:19,301:INFO:Checking exceptions
2025-02-27 15:17:19,301:INFO:Importing libraries
2025-02-27 15:17:19,301:INFO:Copying training dataset
2025-02-27 15:17:19,305:INFO:Defining folds
2025-02-27 15:17:19,305:INFO:Declaring metric variables
2025-02-27 15:17:19,305:INFO:Importing untrained model
2025-02-27 15:17:19,305:INFO:Lasso Least Angle Regression Imported successfully
2025-02-27 15:17:19,306:INFO:Starting cross validation
2025-02-27 15:17:19,307:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,418:INFO:Calculating mean and std
2025-02-27 15:17:19,419:INFO:Creating metrics dataframe
2025-02-27 15:17:19,421:INFO:Uploading results into container
2025-02-27 15:17:19,422:INFO:Uploading model into container now
2025-02-27 15:17:19,422:INFO:_master_model_container: 6
2025-02-27 15:17:19,422:INFO:_display_container: 2
2025-02-27 15:17:19,423:INFO:LassoLars(random_state=42)
2025-02-27 15:17:19,423:INFO:create_model() successfully completed......................................
2025-02-27 15:17:19,484:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:19,484:INFO:Creating metrics dataframe
2025-02-27 15:17:19,488:INFO:Initializing Orthogonal Matching Pursuit
2025-02-27 15:17:19,488:INFO:Total runtime is 0.07520841360092162 minutes
2025-02-27 15:17:19,488:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:19,488:INFO:Initializing create_model()
2025-02-27 15:17:19,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:19,488:INFO:Checking exceptions
2025-02-27 15:17:19,489:INFO:Importing libraries
2025-02-27 15:17:19,489:INFO:Copying training dataset
2025-02-27 15:17:19,492:INFO:Defining folds
2025-02-27 15:17:19,492:INFO:Declaring metric variables
2025-02-27 15:17:19,492:INFO:Importing untrained model
2025-02-27 15:17:19,492:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-27 15:17:19,492:INFO:Starting cross validation
2025-02-27 15:17:19,493:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,595:INFO:Calculating mean and std
2025-02-27 15:17:19,596:INFO:Creating metrics dataframe
2025-02-27 15:17:19,598:INFO:Uploading results into container
2025-02-27 15:17:19,598:INFO:Uploading model into container now
2025-02-27 15:17:19,599:INFO:_master_model_container: 7
2025-02-27 15:17:19,599:INFO:_display_container: 2
2025-02-27 15:17:19,599:INFO:OrthogonalMatchingPursuit()
2025-02-27 15:17:19,599:INFO:create_model() successfully completed......................................
2025-02-27 15:17:19,662:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:19,662:INFO:Creating metrics dataframe
2025-02-27 15:17:19,666:INFO:Initializing Bayesian Ridge
2025-02-27 15:17:19,666:INFO:Total runtime is 0.07817203601201374 minutes
2025-02-27 15:17:19,666:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:19,666:INFO:Initializing create_model()
2025-02-27 15:17:19,666:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:19,666:INFO:Checking exceptions
2025-02-27 15:17:19,666:INFO:Importing libraries
2025-02-27 15:17:19,666:INFO:Copying training dataset
2025-02-27 15:17:19,670:INFO:Defining folds
2025-02-27 15:17:19,670:INFO:Declaring metric variables
2025-02-27 15:17:19,670:INFO:Importing untrained model
2025-02-27 15:17:19,670:INFO:Bayesian Ridge Imported successfully
2025-02-27 15:17:19,671:INFO:Starting cross validation
2025-02-27 15:17:19,672:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,772:INFO:Calculating mean and std
2025-02-27 15:17:19,773:INFO:Creating metrics dataframe
2025-02-27 15:17:19,775:INFO:Uploading results into container
2025-02-27 15:17:19,776:INFO:Uploading model into container now
2025-02-27 15:17:19,776:INFO:_master_model_container: 8
2025-02-27 15:17:19,776:INFO:_display_container: 2
2025-02-27 15:17:19,776:INFO:BayesianRidge()
2025-02-27 15:17:19,777:INFO:create_model() successfully completed......................................
2025-02-27 15:17:19,839:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:19,839:INFO:Creating metrics dataframe
2025-02-27 15:17:19,842:INFO:Initializing Passive Aggressive Regressor
2025-02-27 15:17:19,843:INFO:Total runtime is 0.0811191956202189 minutes
2025-02-27 15:17:19,843:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:19,843:INFO:Initializing create_model()
2025-02-27 15:17:19,843:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:19,843:INFO:Checking exceptions
2025-02-27 15:17:19,843:INFO:Importing libraries
2025-02-27 15:17:19,843:INFO:Copying training dataset
2025-02-27 15:17:19,846:INFO:Defining folds
2025-02-27 15:17:19,846:INFO:Declaring metric variables
2025-02-27 15:17:19,846:INFO:Importing untrained model
2025-02-27 15:17:19,847:INFO:Passive Aggressive Regressor Imported successfully
2025-02-27 15:17:19,847:INFO:Starting cross validation
2025-02-27 15:17:19,848:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:19,958:INFO:Calculating mean and std
2025-02-27 15:17:19,959:INFO:Creating metrics dataframe
2025-02-27 15:17:19,961:INFO:Uploading results into container
2025-02-27 15:17:19,962:INFO:Uploading model into container now
2025-02-27 15:17:19,962:INFO:_master_model_container: 9
2025-02-27 15:17:19,963:INFO:_display_container: 2
2025-02-27 15:17:19,963:INFO:PassiveAggressiveRegressor(random_state=42)
2025-02-27 15:17:19,964:INFO:create_model() successfully completed......................................
2025-02-27 15:17:20,040:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:20,040:INFO:Creating metrics dataframe
2025-02-27 15:17:20,045:INFO:Initializing Huber Regressor
2025-02-27 15:17:20,045:INFO:Total runtime is 0.08449440399805704 minutes
2025-02-27 15:17:20,045:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:20,046:INFO:Initializing create_model()
2025-02-27 15:17:20,046:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:20,046:INFO:Checking exceptions
2025-02-27 15:17:20,046:INFO:Importing libraries
2025-02-27 15:17:20,046:INFO:Copying training dataset
2025-02-27 15:17:20,050:INFO:Defining folds
2025-02-27 15:17:20,050:INFO:Declaring metric variables
2025-02-27 15:17:20,050:INFO:Importing untrained model
2025-02-27 15:17:20,052:INFO:Huber Regressor Imported successfully
2025-02-27 15:17:20,052:INFO:Starting cross validation
2025-02-27 15:17:20,054:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:20,193:INFO:Calculating mean and std
2025-02-27 15:17:20,194:INFO:Creating metrics dataframe
2025-02-27 15:17:20,196:INFO:Uploading results into container
2025-02-27 15:17:20,197:INFO:Uploading model into container now
2025-02-27 15:17:20,198:INFO:_master_model_container: 10
2025-02-27 15:17:20,198:INFO:_display_container: 2
2025-02-27 15:17:20,198:INFO:HuberRegressor()
2025-02-27 15:17:20,198:INFO:create_model() successfully completed......................................
2025-02-27 15:17:20,264:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:20,264:INFO:Creating metrics dataframe
2025-02-27 15:17:20,267:INFO:Initializing K Neighbors Regressor
2025-02-27 15:17:20,267:INFO:Total runtime is 0.08819764852523802 minutes
2025-02-27 15:17:20,267:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:20,268:INFO:Initializing create_model()
2025-02-27 15:17:20,268:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:20,268:INFO:Checking exceptions
2025-02-27 15:17:20,268:INFO:Importing libraries
2025-02-27 15:17:20,268:INFO:Copying training dataset
2025-02-27 15:17:20,271:INFO:Defining folds
2025-02-27 15:17:20,271:INFO:Declaring metric variables
2025-02-27 15:17:20,271:INFO:Importing untrained model
2025-02-27 15:17:20,271:INFO:K Neighbors Regressor Imported successfully
2025-02-27 15:17:20,272:INFO:Starting cross validation
2025-02-27 15:17:20,273:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:20,414:INFO:Calculating mean and std
2025-02-27 15:17:20,415:INFO:Creating metrics dataframe
2025-02-27 15:17:20,418:INFO:Uploading results into container
2025-02-27 15:17:20,419:INFO:Uploading model into container now
2025-02-27 15:17:20,419:INFO:_master_model_container: 11
2025-02-27 15:17:20,419:INFO:_display_container: 2
2025-02-27 15:17:20,419:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-27 15:17:20,419:INFO:create_model() successfully completed......................................
2025-02-27 15:17:20,481:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:20,481:INFO:Creating metrics dataframe
2025-02-27 15:17:20,485:INFO:Initializing Decision Tree Regressor
2025-02-27 15:17:20,485:INFO:Total runtime is 0.09182361761728922 minutes
2025-02-27 15:17:20,485:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:20,485:INFO:Initializing create_model()
2025-02-27 15:17:20,485:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:20,485:INFO:Checking exceptions
2025-02-27 15:17:20,485:INFO:Importing libraries
2025-02-27 15:17:20,485:INFO:Copying training dataset
2025-02-27 15:17:20,489:INFO:Defining folds
2025-02-27 15:17:20,489:INFO:Declaring metric variables
2025-02-27 15:17:20,489:INFO:Importing untrained model
2025-02-27 15:17:20,489:INFO:Decision Tree Regressor Imported successfully
2025-02-27 15:17:20,490:INFO:Starting cross validation
2025-02-27 15:17:20,490:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:20,598:INFO:Calculating mean and std
2025-02-27 15:17:20,598:INFO:Creating metrics dataframe
2025-02-27 15:17:20,601:INFO:Uploading results into container
2025-02-27 15:17:20,601:INFO:Uploading model into container now
2025-02-27 15:17:20,602:INFO:_master_model_container: 12
2025-02-27 15:17:20,602:INFO:_display_container: 2
2025-02-27 15:17:20,602:INFO:DecisionTreeRegressor(random_state=42)
2025-02-27 15:17:20,602:INFO:create_model() successfully completed......................................
2025-02-27 15:17:20,665:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:20,665:INFO:Creating metrics dataframe
2025-02-27 15:17:20,668:INFO:Initializing Random Forest Regressor
2025-02-27 15:17:20,669:INFO:Total runtime is 0.09488611221313475 minutes
2025-02-27 15:17:20,669:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:20,669:INFO:Initializing create_model()
2025-02-27 15:17:20,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:20,669:INFO:Checking exceptions
2025-02-27 15:17:20,669:INFO:Importing libraries
2025-02-27 15:17:20,669:INFO:Copying training dataset
2025-02-27 15:17:20,672:INFO:Defining folds
2025-02-27 15:17:20,672:INFO:Declaring metric variables
2025-02-27 15:17:20,673:INFO:Importing untrained model
2025-02-27 15:17:20,673:INFO:Random Forest Regressor Imported successfully
2025-02-27 15:17:20,673:INFO:Starting cross validation
2025-02-27 15:17:20,674:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:21,277:INFO:Calculating mean and std
2025-02-27 15:17:21,278:INFO:Creating metrics dataframe
2025-02-27 15:17:21,280:INFO:Uploading results into container
2025-02-27 15:17:21,281:INFO:Uploading model into container now
2025-02-27 15:17:21,281:INFO:_master_model_container: 13
2025-02-27 15:17:21,281:INFO:_display_container: 2
2025-02-27 15:17:21,282:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:17:21,282:INFO:create_model() successfully completed......................................
2025-02-27 15:17:21,345:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:21,345:INFO:Creating metrics dataframe
2025-02-27 15:17:21,349:INFO:Initializing Extra Trees Regressor
2025-02-27 15:17:21,349:INFO:Total runtime is 0.1062271197636922 minutes
2025-02-27 15:17:21,349:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:21,349:INFO:Initializing create_model()
2025-02-27 15:17:21,350:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:21,350:INFO:Checking exceptions
2025-02-27 15:17:21,350:INFO:Importing libraries
2025-02-27 15:17:21,350:INFO:Copying training dataset
2025-02-27 15:17:21,353:INFO:Defining folds
2025-02-27 15:17:21,354:INFO:Declaring metric variables
2025-02-27 15:17:21,354:INFO:Importing untrained model
2025-02-27 15:17:21,355:INFO:Extra Trees Regressor Imported successfully
2025-02-27 15:17:21,356:INFO:Starting cross validation
2025-02-27 15:17:21,357:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:21,816:INFO:Calculating mean and std
2025-02-27 15:17:21,817:INFO:Creating metrics dataframe
2025-02-27 15:17:21,819:INFO:Uploading results into container
2025-02-27 15:17:21,819:INFO:Uploading model into container now
2025-02-27 15:17:21,820:INFO:_master_model_container: 14
2025-02-27 15:17:21,820:INFO:_display_container: 2
2025-02-27 15:17:21,820:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:17:21,820:INFO:create_model() successfully completed......................................
2025-02-27 15:17:21,883:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:21,883:INFO:Creating metrics dataframe
2025-02-27 15:17:21,886:INFO:Initializing AdaBoost Regressor
2025-02-27 15:17:21,887:INFO:Total runtime is 0.11518523295720416 minutes
2025-02-27 15:17:21,887:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:21,887:INFO:Initializing create_model()
2025-02-27 15:17:21,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:21,887:INFO:Checking exceptions
2025-02-27 15:17:21,887:INFO:Importing libraries
2025-02-27 15:17:21,887:INFO:Copying training dataset
2025-02-27 15:17:21,890:INFO:Defining folds
2025-02-27 15:17:21,890:INFO:Declaring metric variables
2025-02-27 15:17:21,891:INFO:Importing untrained model
2025-02-27 15:17:21,891:INFO:AdaBoost Regressor Imported successfully
2025-02-27 15:17:21,891:INFO:Starting cross validation
2025-02-27 15:17:21,892:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:22,207:INFO:Calculating mean and std
2025-02-27 15:17:22,208:INFO:Creating metrics dataframe
2025-02-27 15:17:22,210:INFO:Uploading results into container
2025-02-27 15:17:22,210:INFO:Uploading model into container now
2025-02-27 15:17:22,211:INFO:_master_model_container: 15
2025-02-27 15:17:22,211:INFO:_display_container: 2
2025-02-27 15:17:22,211:INFO:AdaBoostRegressor(random_state=42)
2025-02-27 15:17:22,211:INFO:create_model() successfully completed......................................
2025-02-27 15:17:22,282:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:22,282:INFO:Creating metrics dataframe
2025-02-27 15:17:22,286:INFO:Initializing Gradient Boosting Regressor
2025-02-27 15:17:22,286:INFO:Total runtime is 0.1218433101971944 minutes
2025-02-27 15:17:22,286:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:22,286:INFO:Initializing create_model()
2025-02-27 15:17:22,287:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:22,287:INFO:Checking exceptions
2025-02-27 15:17:22,287:INFO:Importing libraries
2025-02-27 15:17:22,287:INFO:Copying training dataset
2025-02-27 15:17:22,290:INFO:Defining folds
2025-02-27 15:17:22,290:INFO:Declaring metric variables
2025-02-27 15:17:22,291:INFO:Importing untrained model
2025-02-27 15:17:22,291:INFO:Gradient Boosting Regressor Imported successfully
2025-02-27 15:17:22,291:INFO:Starting cross validation
2025-02-27 15:17:22,292:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:17:22,602:INFO:Calculating mean and std
2025-02-27 15:17:22,603:INFO:Creating metrics dataframe
2025-02-27 15:17:22,605:INFO:Uploading results into container
2025-02-27 15:17:22,606:INFO:Uploading model into container now
2025-02-27 15:17:22,606:INFO:_master_model_container: 16
2025-02-27 15:17:22,606:INFO:_display_container: 2
2025-02-27 15:17:22,607:INFO:GradientBoostingRegressor(random_state=42)
2025-02-27 15:17:22,607:INFO:create_model() successfully completed......................................
2025-02-27 15:17:22,680:INFO:SubProcess create_model() end ==================================
2025-02-27 15:17:22,680:INFO:Creating metrics dataframe
2025-02-27 15:17:22,683:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 15:17:22,684:INFO:Total runtime is 0.1284695784250895 minutes
2025-02-27 15:17:22,684:INFO:SubProcess create_model() called ==================================
2025-02-27 15:17:22,684:INFO:Initializing create_model()
2025-02-27 15:17:22,684:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:17:22,684:INFO:Checking exceptions
2025-02-27 15:17:22,684:INFO:Importing libraries
2025-02-27 15:17:22,684:INFO:Copying training dataset
2025-02-27 15:17:22,687:INFO:Defining folds
2025-02-27 15:17:22,687:INFO:Declaring metric variables
2025-02-27 15:17:22,688:INFO:Importing untrained model
2025-02-27 15:17:22,688:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 15:17:22,688:INFO:Starting cross validation
2025-02-27 15:17:22,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:20:45,619:INFO:Calculating mean and std
2025-02-27 15:20:45,620:INFO:Creating metrics dataframe
2025-02-27 15:20:45,623:INFO:Uploading results into container
2025-02-27 15:20:45,624:INFO:Uploading model into container now
2025-02-27 15:20:45,625:INFO:_master_model_container: 17
2025-02-27 15:20:45,625:INFO:_display_container: 2
2025-02-27 15:20:45,626:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:20:45,626:INFO:create_model() successfully completed......................................
2025-02-27 15:20:45,692:INFO:SubProcess create_model() end ==================================
2025-02-27 15:20:45,692:INFO:Creating metrics dataframe
2025-02-27 15:20:45,698:INFO:Initializing Dummy Regressor
2025-02-27 15:20:45,698:INFO:Total runtime is 3.512040654818217 minutes
2025-02-27 15:20:45,698:INFO:SubProcess create_model() called ==================================
2025-02-27 15:20:45,699:INFO:Initializing create_model()
2025-02-27 15:20:45,699:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7974443ff250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:20:45,699:INFO:Checking exceptions
2025-02-27 15:20:45,699:INFO:Importing libraries
2025-02-27 15:20:45,699:INFO:Copying training dataset
2025-02-27 15:20:45,704:INFO:Defining folds
2025-02-27 15:20:45,704:INFO:Declaring metric variables
2025-02-27 15:20:45,705:INFO:Importing untrained model
2025-02-27 15:20:45,705:INFO:Dummy Regressor Imported successfully
2025-02-27 15:20:45,706:INFO:Starting cross validation
2025-02-27 15:20:45,707:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:20:45,824:INFO:Calculating mean and std
2025-02-27 15:20:45,825:INFO:Creating metrics dataframe
2025-02-27 15:20:45,828:INFO:Uploading results into container
2025-02-27 15:20:45,829:INFO:Uploading model into container now
2025-02-27 15:20:45,829:INFO:_master_model_container: 18
2025-02-27 15:20:45,830:INFO:_display_container: 2
2025-02-27 15:20:45,830:INFO:DummyRegressor()
2025-02-27 15:20:45,830:INFO:create_model() successfully completed......................................
2025-02-27 15:20:45,913:INFO:SubProcess create_model() end ==================================
2025-02-27 15:20:45,913:INFO:Creating metrics dataframe
2025-02-27 15:20:45,920:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 15:20:45,923:INFO:Initializing create_model()
2025-02-27 15:20:45,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:20:45,923:INFO:Checking exceptions
2025-02-27 15:20:45,924:INFO:Importing libraries
2025-02-27 15:20:45,925:INFO:Copying training dataset
2025-02-27 15:20:45,929:INFO:Defining folds
2025-02-27 15:20:45,929:INFO:Declaring metric variables
2025-02-27 15:20:45,930:INFO:Importing untrained model
2025-02-27 15:20:45,930:INFO:Declaring custom model
2025-02-27 15:20:45,932:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 15:20:45,934:INFO:Cross validation set to False
2025-02-27 15:20:45,934:INFO:Fitting Model
2025-02-27 15:20:45,979:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 15:20:46,011:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.030964 seconds.
2025-02-27 15:20:46,011:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 15:20:46,011:INFO:[LightGBM] [Info] Total Bins 179
2025-02-27 15:20:46,015:INFO:[LightGBM] [Info] Number of data points in the train set: 212, number of used features: 4
2025-02-27 15:20:46,019:INFO:[LightGBM] [Info] Start training from score 3.435472
2025-02-27 15:20:46,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,174:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,246:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:20:46,246:INFO:create_model() successfully completed......................................
2025-02-27 15:20:46,345:INFO:_master_model_container: 18
2025-02-27 15:20:46,345:INFO:_display_container: 2
2025-02-27 15:20:46,346:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:20:46,346:INFO:compare_models() successfully completed......................................
2025-02-27 15:20:46,347:INFO:Initializing finalize_model()
2025-02-27 15:20:46,347:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 15:20:46,348:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 15:20:46,353:INFO:Initializing create_model()
2025-02-27 15:20:46,353:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x797445278700>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:20:46,353:INFO:Checking exceptions
2025-02-27 15:20:46,354:INFO:Importing libraries
2025-02-27 15:20:46,354:INFO:Copying training dataset
2025-02-27 15:20:46,355:INFO:Defining folds
2025-02-27 15:20:46,355:INFO:Declaring metric variables
2025-02-27 15:20:46,356:INFO:Importing untrained model
2025-02-27 15:20:46,356:INFO:Declaring custom model
2025-02-27 15:20:46,358:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 15:20:46,359:INFO:Cross validation set to False
2025-02-27 15:20:46,359:INFO:Fitting Model
2025-02-27 15:20:46,378:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 15:20:46,379:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000086 seconds.
2025-02-27 15:20:46,379:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 15:20:46,379:INFO:[LightGBM] [Info] Total Bins 221
2025-02-27 15:20:46,379:INFO:[LightGBM] [Info] Number of data points in the train set: 304, number of used features: 4
2025-02-27 15:20:46,379:INFO:[LightGBM] [Info] Start training from score 3.391349
2025-02-27 15:20:46,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,441:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,447:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,449:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 15:20:46,498:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 15:20:46,498:INFO:create_model() successfully completed......................................
2025-02-27 15:20:46,567:INFO:_master_model_container: 18
2025-02-27 15:20:46,568:INFO:_display_container: 2
2025-02-27 15:20:46,578:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 15:20:46,578:INFO:finalize_model() successfully completed......................................
2025-02-27 15:45:38,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:45:38,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:45:38,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:45:38,342:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:49:07,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:49:07,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:49:07,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:49:07,585:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:51:28,761:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:51:28,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:51:28,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:51:28,762:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:52:38,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:52:38,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:52:38,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:52:38,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:05,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:05,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:05,757:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:05,758:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:39,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:39,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:39,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:53:39,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:01,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:01,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:01,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:01,680:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:54,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:54,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:54,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:54:54,691:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:55:57,255:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:55:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:55:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:55:57,256:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:34,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:34,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:34,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:34,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:48,002:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:48,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:48,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:10:48,003:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:12:57,237:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:12:57,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:12:57,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:12:57,238:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:12:57,452:INFO:PyCaret RegressionExperiment
2025-02-27 16:12:57,452:INFO:Logging name: reg-default-name
2025-02-27 16:12:57,452:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 16:12:57,452:INFO:version 3.3.2
2025-02-27 16:12:57,452:INFO:Initializing setup()
2025-02-27 16:12:57,453:INFO:self.USI: fcba
2025-02-27 16:12:57,453:INFO:self._variable_keys: {'data', 'pipeline', 'X', 'gpu_n_jobs_param', 'X_test', 'y_test', 'transform_target_param', 'memory', 'html_param', 'fold_groups_param', 'idx', 'logging_param', 'USI', 'log_plots_param', 'fold_shuffle_param', 'seed', 'exp_id', 'y', 'target_param', '_ml_usecase', 'X_train', 'exp_name_log', 'n_jobs_param', 'fold_generator', 'y_train', 'gpu_param', '_available_plots'}
2025-02-27 16:12:57,453:INFO:Checking environment
2025-02-27 16:12:57,453:INFO:python_version: 3.10.12
2025-02-27 16:12:57,453:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 16:12:57,453:INFO:machine: x86_64
2025-02-27 16:12:57,455:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:12:57,456:INFO:Memory: svmem(total=16420966400, available=9343647744, percent=43.1, used=6062669824, free=878051328, active=7368073216, inactive=6756188160, buffers=392609792, cached=9087635456, shared=662986752, slab=778964992)
2025-02-27 16:12:57,457:INFO:Physical Core: 4
2025-02-27 16:12:57,458:INFO:Logical Core: 8
2025-02-27 16:12:57,458:INFO:Checking libraries
2025-02-27 16:12:57,458:INFO:System:
2025-02-27 16:12:57,458:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 16:12:57,458:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 16:12:57,458:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:12:57,458:INFO:PyCaret required dependencies:
2025-02-27 16:12:57,497:INFO:                 pip: 25.0.1
2025-02-27 16:12:57,497:INFO:          setuptools: 75.8.2
2025-02-27 16:12:57,497:INFO:             pycaret: 3.3.2
2025-02-27 16:12:57,497:INFO:             IPython: 8.32.0
2025-02-27 16:12:57,497:INFO:          ipywidgets: 8.1.5
2025-02-27 16:12:57,497:INFO:                tqdm: 4.67.1
2025-02-27 16:12:57,497:INFO:               numpy: 1.26.4
2025-02-27 16:12:57,497:INFO:              pandas: 2.1.4
2025-02-27 16:12:57,498:INFO:              jinja2: 3.1.5
2025-02-27 16:12:57,498:INFO:               scipy: 1.11.4
2025-02-27 16:12:57,498:INFO:              joblib: 1.3.2
2025-02-27 16:12:57,498:INFO:             sklearn: 1.4.2
2025-02-27 16:12:57,498:INFO:                pyod: 2.0.3
2025-02-27 16:12:57,498:INFO:            imblearn: 0.13.0
2025-02-27 16:12:57,498:INFO:   category_encoders: 2.7.0
2025-02-27 16:12:57,498:INFO:            lightgbm: 4.6.0
2025-02-27 16:12:57,498:INFO:               numba: 0.61.0
2025-02-27 16:12:57,498:INFO:            requests: 2.32.3
2025-02-27 16:12:57,498:INFO:          matplotlib: 3.7.5
2025-02-27 16:12:57,499:INFO:          scikitplot: 0.3.7
2025-02-27 16:12:57,499:INFO:         yellowbrick: 1.5
2025-02-27 16:12:57,499:INFO:              plotly: 5.24.1
2025-02-27 16:12:57,499:INFO:    plotly-resampler: Not installed
2025-02-27 16:12:57,499:INFO:             kaleido: 0.2.1
2025-02-27 16:12:57,499:INFO:           schemdraw: 0.15
2025-02-27 16:12:57,499:INFO:         statsmodels: 0.14.4
2025-02-27 16:12:57,499:INFO:              sktime: 0.26.0
2025-02-27 16:12:57,499:INFO:               tbats: 1.1.3
2025-02-27 16:12:57,499:INFO:            pmdarima: 2.0.4
2025-02-27 16:12:57,499:INFO:              psutil: 7.0.0
2025-02-27 16:12:57,500:INFO:          markupsafe: 3.0.2
2025-02-27 16:12:57,500:INFO:             pickle5: Not installed
2025-02-27 16:12:57,500:INFO:         cloudpickle: 3.1.1
2025-02-27 16:12:57,500:INFO:         deprecation: 2.1.0
2025-02-27 16:12:57,500:INFO:              xxhash: 3.5.0
2025-02-27 16:12:57,500:INFO:           wurlitzer: 3.1.1
2025-02-27 16:12:57,500:INFO:PyCaret optional dependencies:
2025-02-27 16:12:57,526:INFO:                shap: Not installed
2025-02-27 16:12:57,527:INFO:           interpret: Not installed
2025-02-27 16:12:57,527:INFO:                umap: Not installed
2025-02-27 16:12:57,527:INFO:     ydata_profiling: Not installed
2025-02-27 16:12:57,527:INFO:  explainerdashboard: Not installed
2025-02-27 16:12:57,527:INFO:             autoviz: Not installed
2025-02-27 16:12:57,527:INFO:           fairlearn: Not installed
2025-02-27 16:12:57,527:INFO:          deepchecks: Not installed
2025-02-27 16:12:57,527:INFO:             xgboost: Not installed
2025-02-27 16:12:57,527:INFO:            catboost: Not installed
2025-02-27 16:12:57,527:INFO:              kmodes: Not installed
2025-02-27 16:12:57,527:INFO:             mlxtend: Not installed
2025-02-27 16:12:57,527:INFO:       statsforecast: Not installed
2025-02-27 16:12:57,527:INFO:        tune_sklearn: Not installed
2025-02-27 16:12:57,527:INFO:                 ray: Not installed
2025-02-27 16:12:57,528:INFO:            hyperopt: Not installed
2025-02-27 16:12:57,528:INFO:              optuna: Not installed
2025-02-27 16:12:57,528:INFO:               skopt: Not installed
2025-02-27 16:12:57,528:INFO:              mlflow: Not installed
2025-02-27 16:12:57,528:INFO:              gradio: Not installed
2025-02-27 16:12:57,528:INFO:             fastapi: Not installed
2025-02-27 16:12:57,528:INFO:             uvicorn: Not installed
2025-02-27 16:12:57,528:INFO:              m2cgen: Not installed
2025-02-27 16:12:57,528:INFO:           evidently: Not installed
2025-02-27 16:12:57,528:INFO:               fugue: Not installed
2025-02-27 16:12:57,528:INFO:           streamlit: Not installed
2025-02-27 16:12:57,528:INFO:             prophet: Not installed
2025-02-27 16:12:57,528:INFO:None
2025-02-27 16:12:57,528:INFO:Set up data.
2025-02-27 16:12:57,536:INFO:Set up folding strategy.
2025-02-27 16:12:57,537:INFO:Set up train/test split.
2025-02-27 16:12:57,543:INFO:Set up index.
2025-02-27 16:12:57,544:INFO:Assigning column types.
2025-02-27 16:12:57,551:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:12:57,552:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,561:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,570:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,677:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,759:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,760:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:57,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:57,762:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,771:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,779:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,885:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,973:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:57,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:57,976:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 16:12:57,987:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:12:57,996:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,115:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,209:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,225:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,235:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,459:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 16:12:58,481:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,694:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,695:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,714:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,829:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,912:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:58,914:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,914:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:58,915:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 16:12:59,039:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,247:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,330:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,333:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:12:59,454:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,661:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:12:59,746:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,746:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,747:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 16:12:59,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:12:59,957:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,169:INFO:Preparing preprocessing pipeline...
2025-02-27 16:13:00,169:INFO:Set up simple imputation.
2025-02-27 16:13:00,169:INFO:Set up feature normalization.
2025-02-27 16:13:00,171:INFO:Set up column name cleaning.
2025-02-27 16:13:00,221:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:13:00,232:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 16:13:00,232:INFO:Creating final display dataframe.
2025-02-27 16:13:00,373:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target  Economic Growth (%)
2                   Target type           Regression
3           Original data shape             (304, 5)
4        Transformed data shape             (304, 5)
5   Transformed train set shape             (212, 5)
6    Transformed test set shape              (92, 5)
7              Numeric features                    4
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12                    Normalize                 True
13             Normalize method               zscore
14               Fold Generator                KFold
15                  Fold Number                   10
16                     CPU Jobs                   -1
17                      Use GPU                False
18               Log Experiment                False
19              Experiment Name     reg-default-name
20                          USI                 fcba
2025-02-27 16:13:00,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,609:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:13:00,849:INFO:setup() successfully completed in 3.4s...............
2025-02-27 16:13:00,849:INFO:Initializing compare_models()
2025-02-27 16:13:00,849:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-27 16:13:00,849:INFO:Checking exceptions
2025-02-27 16:13:00,852:INFO:Preparing display monitor
2025-02-27 16:13:00,858:INFO:Initializing Linear Regression
2025-02-27 16:13:00,858:INFO:Total runtime is 3.3259391784667967e-06 minutes
2025-02-27 16:13:00,858:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:00,859:INFO:Initializing create_model()
2025-02-27 16:13:00,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:00,859:INFO:Checking exceptions
2025-02-27 16:13:00,859:INFO:Importing libraries
2025-02-27 16:13:00,859:INFO:Copying training dataset
2025-02-27 16:13:00,867:INFO:Defining folds
2025-02-27 16:13:00,867:INFO:Declaring metric variables
2025-02-27 16:13:00,868:INFO:Importing untrained model
2025-02-27 16:13:00,869:INFO:Linear Regression Imported successfully
2025-02-27 16:13:00,869:INFO:Starting cross validation
2025-02-27 16:13:00,878:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:06,211:INFO:Calculating mean and std
2025-02-27 16:13:06,214:INFO:Creating metrics dataframe
2025-02-27 16:13:06,221:INFO:Uploading results into container
2025-02-27 16:13:06,223:INFO:Uploading model into container now
2025-02-27 16:13:06,224:INFO:_master_model_container: 1
2025-02-27 16:13:06,224:INFO:_display_container: 2
2025-02-27 16:13:06,225:INFO:LinearRegression(n_jobs=-1)
2025-02-27 16:13:06,226:INFO:create_model() successfully completed......................................
2025-02-27 16:13:06,352:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:06,352:INFO:Creating metrics dataframe
2025-02-27 16:13:06,359:INFO:Initializing Lasso Regression
2025-02-27 16:13:06,359:INFO:Total runtime is 0.09169251124064128 minutes
2025-02-27 16:13:06,360:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:06,361:INFO:Initializing create_model()
2025-02-27 16:13:06,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:06,361:INFO:Checking exceptions
2025-02-27 16:13:06,361:INFO:Importing libraries
2025-02-27 16:13:06,361:INFO:Copying training dataset
2025-02-27 16:13:06,369:INFO:Defining folds
2025-02-27 16:13:06,369:INFO:Declaring metric variables
2025-02-27 16:13:06,369:INFO:Importing untrained model
2025-02-27 16:13:06,370:INFO:Lasso Regression Imported successfully
2025-02-27 16:13:06,371:INFO:Starting cross validation
2025-02-27 16:13:06,373:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:06,568:INFO:Calculating mean and std
2025-02-27 16:13:06,569:INFO:Creating metrics dataframe
2025-02-27 16:13:06,573:INFO:Uploading results into container
2025-02-27 16:13:06,574:INFO:Uploading model into container now
2025-02-27 16:13:06,575:INFO:_master_model_container: 2
2025-02-27 16:13:06,575:INFO:_display_container: 2
2025-02-27 16:13:06,576:INFO:Lasso(random_state=42)
2025-02-27 16:13:06,576:INFO:create_model() successfully completed......................................
2025-02-27 16:13:06,669:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:06,669:INFO:Creating metrics dataframe
2025-02-27 16:13:06,677:INFO:Initializing Ridge Regression
2025-02-27 16:13:06,677:INFO:Total runtime is 0.09699036677678426 minutes
2025-02-27 16:13:06,678:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:06,678:INFO:Initializing create_model()
2025-02-27 16:13:06,679:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:06,679:INFO:Checking exceptions
2025-02-27 16:13:06,679:INFO:Importing libraries
2025-02-27 16:13:06,679:INFO:Copying training dataset
2025-02-27 16:13:06,687:INFO:Defining folds
2025-02-27 16:13:06,687:INFO:Declaring metric variables
2025-02-27 16:13:06,688:INFO:Importing untrained model
2025-02-27 16:13:06,688:INFO:Ridge Regression Imported successfully
2025-02-27 16:13:06,689:INFO:Starting cross validation
2025-02-27 16:13:06,691:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:06,888:INFO:Calculating mean and std
2025-02-27 16:13:06,889:INFO:Creating metrics dataframe
2025-02-27 16:13:06,892:INFO:Uploading results into container
2025-02-27 16:13:06,894:INFO:Uploading model into container now
2025-02-27 16:13:06,894:INFO:_master_model_container: 3
2025-02-27 16:13:06,895:INFO:_display_container: 2
2025-02-27 16:13:06,895:INFO:Ridge(random_state=42)
2025-02-27 16:13:06,895:INFO:create_model() successfully completed......................................
2025-02-27 16:13:06,991:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:06,991:INFO:Creating metrics dataframe
2025-02-27 16:13:07,000:INFO:Initializing Elastic Net
2025-02-27 16:13:07,000:INFO:Total runtime is 0.10236566066741942 minutes
2025-02-27 16:13:07,000:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:07,001:INFO:Initializing create_model()
2025-02-27 16:13:07,001:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:07,001:INFO:Checking exceptions
2025-02-27 16:13:07,001:INFO:Importing libraries
2025-02-27 16:13:07,001:INFO:Copying training dataset
2025-02-27 16:13:07,009:INFO:Defining folds
2025-02-27 16:13:07,010:INFO:Declaring metric variables
2025-02-27 16:13:07,010:INFO:Importing untrained model
2025-02-27 16:13:07,011:INFO:Elastic Net Imported successfully
2025-02-27 16:13:07,012:INFO:Starting cross validation
2025-02-27 16:13:07,014:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:07,210:INFO:Calculating mean and std
2025-02-27 16:13:07,211:INFO:Creating metrics dataframe
2025-02-27 16:13:07,216:INFO:Uploading results into container
2025-02-27 16:13:07,217:INFO:Uploading model into container now
2025-02-27 16:13:07,218:INFO:_master_model_container: 4
2025-02-27 16:13:07,219:INFO:_display_container: 2
2025-02-27 16:13:07,219:INFO:ElasticNet(random_state=42)
2025-02-27 16:13:07,220:INFO:create_model() successfully completed......................................
2025-02-27 16:13:07,315:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:07,316:INFO:Creating metrics dataframe
2025-02-27 16:13:07,324:INFO:Initializing Least Angle Regression
2025-02-27 16:13:07,324:INFO:Total runtime is 0.10777164697647093 minutes
2025-02-27 16:13:07,325:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:07,325:INFO:Initializing create_model()
2025-02-27 16:13:07,325:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:07,326:INFO:Checking exceptions
2025-02-27 16:13:07,326:INFO:Importing libraries
2025-02-27 16:13:07,326:INFO:Copying training dataset
2025-02-27 16:13:07,335:INFO:Defining folds
2025-02-27 16:13:07,336:INFO:Declaring metric variables
2025-02-27 16:13:07,336:INFO:Importing untrained model
2025-02-27 16:13:07,337:INFO:Least Angle Regression Imported successfully
2025-02-27 16:13:07,338:INFO:Starting cross validation
2025-02-27 16:13:07,340:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:07,649:INFO:Calculating mean and std
2025-02-27 16:13:07,650:INFO:Creating metrics dataframe
2025-02-27 16:13:07,655:INFO:Uploading results into container
2025-02-27 16:13:07,656:INFO:Uploading model into container now
2025-02-27 16:13:07,658:INFO:_master_model_container: 5
2025-02-27 16:13:07,658:INFO:_display_container: 2
2025-02-27 16:13:07,659:INFO:Lars(random_state=42)
2025-02-27 16:13:07,659:INFO:create_model() successfully completed......................................
2025-02-27 16:13:07,766:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:07,766:INFO:Creating metrics dataframe
2025-02-27 16:13:07,774:INFO:Initializing Lasso Least Angle Regression
2025-02-27 16:13:07,774:INFO:Total runtime is 0.11527259747187295 minutes
2025-02-27 16:13:07,775:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:07,775:INFO:Initializing create_model()
2025-02-27 16:13:07,775:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:07,776:INFO:Checking exceptions
2025-02-27 16:13:07,776:INFO:Importing libraries
2025-02-27 16:13:07,776:INFO:Copying training dataset
2025-02-27 16:13:07,788:INFO:Defining folds
2025-02-27 16:13:07,789:INFO:Declaring metric variables
2025-02-27 16:13:07,789:INFO:Importing untrained model
2025-02-27 16:13:07,790:INFO:Lasso Least Angle Regression Imported successfully
2025-02-27 16:13:07,791:INFO:Starting cross validation
2025-02-27 16:13:07,793:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:08,097:INFO:Calculating mean and std
2025-02-27 16:13:08,100:INFO:Creating metrics dataframe
2025-02-27 16:13:08,110:INFO:Uploading results into container
2025-02-27 16:13:08,112:INFO:Uploading model into container now
2025-02-27 16:13:08,114:INFO:_master_model_container: 6
2025-02-27 16:13:08,114:INFO:_display_container: 2
2025-02-27 16:13:08,115:INFO:LassoLars(random_state=42)
2025-02-27 16:13:08,115:INFO:create_model() successfully completed......................................
2025-02-27 16:13:08,228:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:08,228:INFO:Creating metrics dataframe
2025-02-27 16:13:08,237:INFO:Initializing Orthogonal Matching Pursuit
2025-02-27 16:13:08,237:INFO:Total runtime is 0.12299228906631468 minutes
2025-02-27 16:13:08,238:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:08,239:INFO:Initializing create_model()
2025-02-27 16:13:08,239:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:08,239:INFO:Checking exceptions
2025-02-27 16:13:08,239:INFO:Importing libraries
2025-02-27 16:13:08,239:INFO:Copying training dataset
2025-02-27 16:13:08,249:INFO:Defining folds
2025-02-27 16:13:08,250:INFO:Declaring metric variables
2025-02-27 16:13:08,250:INFO:Importing untrained model
2025-02-27 16:13:08,251:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-27 16:13:08,252:INFO:Starting cross validation
2025-02-27 16:13:08,254:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:08,502:INFO:Calculating mean and std
2025-02-27 16:13:08,504:INFO:Creating metrics dataframe
2025-02-27 16:13:08,508:INFO:Uploading results into container
2025-02-27 16:13:08,509:INFO:Uploading model into container now
2025-02-27 16:13:08,510:INFO:_master_model_container: 7
2025-02-27 16:13:08,510:INFO:_display_container: 2
2025-02-27 16:13:08,511:INFO:OrthogonalMatchingPursuit()
2025-02-27 16:13:08,511:INFO:create_model() successfully completed......................................
2025-02-27 16:13:08,609:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:08,610:INFO:Creating metrics dataframe
2025-02-27 16:13:08,618:INFO:Initializing Bayesian Ridge
2025-02-27 16:13:08,618:INFO:Total runtime is 0.12933990160624184 minutes
2025-02-27 16:13:08,619:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:08,619:INFO:Initializing create_model()
2025-02-27 16:13:08,620:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:08,620:INFO:Checking exceptions
2025-02-27 16:13:08,620:INFO:Importing libraries
2025-02-27 16:13:08,620:INFO:Copying training dataset
2025-02-27 16:13:08,628:INFO:Defining folds
2025-02-27 16:13:08,628:INFO:Declaring metric variables
2025-02-27 16:13:08,629:INFO:Importing untrained model
2025-02-27 16:13:08,630:INFO:Bayesian Ridge Imported successfully
2025-02-27 16:13:08,630:INFO:Starting cross validation
2025-02-27 16:13:08,632:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:08,860:INFO:Calculating mean and std
2025-02-27 16:13:08,861:INFO:Creating metrics dataframe
2025-02-27 16:13:08,865:INFO:Uploading results into container
2025-02-27 16:13:08,866:INFO:Uploading model into container now
2025-02-27 16:13:08,867:INFO:_master_model_container: 8
2025-02-27 16:13:08,867:INFO:_display_container: 2
2025-02-27 16:13:08,868:INFO:BayesianRidge()
2025-02-27 16:13:08,868:INFO:create_model() successfully completed......................................
2025-02-27 16:13:08,967:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:08,968:INFO:Creating metrics dataframe
2025-02-27 16:13:08,977:INFO:Initializing Passive Aggressive Regressor
2025-02-27 16:13:08,977:INFO:Total runtime is 0.13532341718673704 minutes
2025-02-27 16:13:08,978:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:08,978:INFO:Initializing create_model()
2025-02-27 16:13:08,979:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:08,979:INFO:Checking exceptions
2025-02-27 16:13:08,979:INFO:Importing libraries
2025-02-27 16:13:08,979:INFO:Copying training dataset
2025-02-27 16:13:08,987:INFO:Defining folds
2025-02-27 16:13:08,987:INFO:Declaring metric variables
2025-02-27 16:13:08,988:INFO:Importing untrained model
2025-02-27 16:13:08,989:INFO:Passive Aggressive Regressor Imported successfully
2025-02-27 16:13:08,989:INFO:Starting cross validation
2025-02-27 16:13:08,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:09,207:INFO:Calculating mean and std
2025-02-27 16:13:09,208:INFO:Creating metrics dataframe
2025-02-27 16:13:09,212:INFO:Uploading results into container
2025-02-27 16:13:09,213:INFO:Uploading model into container now
2025-02-27 16:13:09,214:INFO:_master_model_container: 9
2025-02-27 16:13:09,214:INFO:_display_container: 2
2025-02-27 16:13:09,215:INFO:PassiveAggressiveRegressor(random_state=42)
2025-02-27 16:13:09,215:INFO:create_model() successfully completed......................................
2025-02-27 16:13:09,312:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:09,313:INFO:Creating metrics dataframe
2025-02-27 16:13:09,321:INFO:Initializing Huber Regressor
2025-02-27 16:13:09,322:INFO:Total runtime is 0.1410632252693176 minutes
2025-02-27 16:13:09,322:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:09,323:INFO:Initializing create_model()
2025-02-27 16:13:09,323:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:09,323:INFO:Checking exceptions
2025-02-27 16:13:09,323:INFO:Importing libraries
2025-02-27 16:13:09,323:INFO:Copying training dataset
2025-02-27 16:13:09,331:INFO:Defining folds
2025-02-27 16:13:09,332:INFO:Declaring metric variables
2025-02-27 16:13:09,332:INFO:Importing untrained model
2025-02-27 16:13:09,333:INFO:Huber Regressor Imported successfully
2025-02-27 16:13:09,333:INFO:Starting cross validation
2025-02-27 16:13:09,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:09,553:INFO:Calculating mean and std
2025-02-27 16:13:09,554:INFO:Creating metrics dataframe
2025-02-27 16:13:09,558:INFO:Uploading results into container
2025-02-27 16:13:09,559:INFO:Uploading model into container now
2025-02-27 16:13:09,560:INFO:_master_model_container: 10
2025-02-27 16:13:09,560:INFO:_display_container: 2
2025-02-27 16:13:09,561:INFO:HuberRegressor()
2025-02-27 16:13:09,561:INFO:create_model() successfully completed......................................
2025-02-27 16:13:09,659:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:09,659:INFO:Creating metrics dataframe
2025-02-27 16:13:09,667:INFO:Initializing K Neighbors Regressor
2025-02-27 16:13:09,668:INFO:Total runtime is 0.14682763814926145 minutes
2025-02-27 16:13:09,668:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:09,669:INFO:Initializing create_model()
2025-02-27 16:13:09,669:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:09,669:INFO:Checking exceptions
2025-02-27 16:13:09,669:INFO:Importing libraries
2025-02-27 16:13:09,669:INFO:Copying training dataset
2025-02-27 16:13:09,677:INFO:Defining folds
2025-02-27 16:13:09,677:INFO:Declaring metric variables
2025-02-27 16:13:09,678:INFO:Importing untrained model
2025-02-27 16:13:09,679:INFO:K Neighbors Regressor Imported successfully
2025-02-27 16:13:09,679:INFO:Starting cross validation
2025-02-27 16:13:09,681:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:09,929:INFO:Calculating mean and std
2025-02-27 16:13:09,931:INFO:Creating metrics dataframe
2025-02-27 16:13:09,935:INFO:Uploading results into container
2025-02-27 16:13:09,936:INFO:Uploading model into container now
2025-02-27 16:13:09,937:INFO:_master_model_container: 11
2025-02-27 16:13:09,938:INFO:_display_container: 2
2025-02-27 16:13:09,938:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-27 16:13:09,939:INFO:create_model() successfully completed......................................
2025-02-27 16:13:10,036:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:10,036:INFO:Creating metrics dataframe
2025-02-27 16:13:10,045:INFO:Initializing Decision Tree Regressor
2025-02-27 16:13:10,046:INFO:Total runtime is 0.15312906901041665 minutes
2025-02-27 16:13:10,046:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:10,047:INFO:Initializing create_model()
2025-02-27 16:13:10,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:10,047:INFO:Checking exceptions
2025-02-27 16:13:10,047:INFO:Importing libraries
2025-02-27 16:13:10,047:INFO:Copying training dataset
2025-02-27 16:13:10,055:INFO:Defining folds
2025-02-27 16:13:10,055:INFO:Declaring metric variables
2025-02-27 16:13:10,056:INFO:Importing untrained model
2025-02-27 16:13:10,057:INFO:Decision Tree Regressor Imported successfully
2025-02-27 16:13:10,057:INFO:Starting cross validation
2025-02-27 16:13:10,059:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:10,275:INFO:Calculating mean and std
2025-02-27 16:13:10,277:INFO:Creating metrics dataframe
2025-02-27 16:13:10,280:INFO:Uploading results into container
2025-02-27 16:13:10,282:INFO:Uploading model into container now
2025-02-27 16:13:10,282:INFO:_master_model_container: 12
2025-02-27 16:13:10,283:INFO:_display_container: 2
2025-02-27 16:13:10,283:INFO:DecisionTreeRegressor(random_state=42)
2025-02-27 16:13:10,284:INFO:create_model() successfully completed......................................
2025-02-27 16:13:10,381:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:10,381:INFO:Creating metrics dataframe
2025-02-27 16:13:10,391:INFO:Initializing Random Forest Regressor
2025-02-27 16:13:10,391:INFO:Total runtime is 0.1588861068089803 minutes
2025-02-27 16:13:10,392:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:10,392:INFO:Initializing create_model()
2025-02-27 16:13:10,392:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:10,393:INFO:Checking exceptions
2025-02-27 16:13:10,393:INFO:Importing libraries
2025-02-27 16:13:10,393:INFO:Copying training dataset
2025-02-27 16:13:10,403:INFO:Defining folds
2025-02-27 16:13:10,403:INFO:Declaring metric variables
2025-02-27 16:13:10,403:INFO:Importing untrained model
2025-02-27 16:13:10,405:INFO:Random Forest Regressor Imported successfully
2025-02-27 16:13:10,406:INFO:Starting cross validation
2025-02-27 16:13:10,408:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:11,501:INFO:Calculating mean and std
2025-02-27 16:13:11,502:INFO:Creating metrics dataframe
2025-02-27 16:13:11,505:INFO:Uploading results into container
2025-02-27 16:13:11,506:INFO:Uploading model into container now
2025-02-27 16:13:11,507:INFO:_master_model_container: 13
2025-02-27 16:13:11,507:INFO:_display_container: 2
2025-02-27 16:13:11,508:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:13:11,509:INFO:create_model() successfully completed......................................
2025-02-27 16:13:11,602:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:11,602:INFO:Creating metrics dataframe
2025-02-27 16:13:11,609:INFO:Initializing Extra Trees Regressor
2025-02-27 16:13:11,609:INFO:Total runtime is 0.17918665806452433 minutes
2025-02-27 16:13:11,610:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:11,610:INFO:Initializing create_model()
2025-02-27 16:13:11,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:11,611:INFO:Checking exceptions
2025-02-27 16:13:11,611:INFO:Importing libraries
2025-02-27 16:13:11,611:INFO:Copying training dataset
2025-02-27 16:13:11,618:INFO:Defining folds
2025-02-27 16:13:11,618:INFO:Declaring metric variables
2025-02-27 16:13:11,619:INFO:Importing untrained model
2025-02-27 16:13:11,620:INFO:Extra Trees Regressor Imported successfully
2025-02-27 16:13:11,620:INFO:Starting cross validation
2025-02-27 16:13:11,622:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:12,473:INFO:Calculating mean and std
2025-02-27 16:13:12,475:INFO:Creating metrics dataframe
2025-02-27 16:13:12,479:INFO:Uploading results into container
2025-02-27 16:13:12,480:INFO:Uploading model into container now
2025-02-27 16:13:12,482:INFO:_master_model_container: 14
2025-02-27 16:13:12,482:INFO:_display_container: 2
2025-02-27 16:13:12,483:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:13:12,483:INFO:create_model() successfully completed......................................
2025-02-27 16:13:12,577:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:12,577:INFO:Creating metrics dataframe
2025-02-27 16:13:12,586:INFO:Initializing AdaBoost Regressor
2025-02-27 16:13:12,586:INFO:Total runtime is 0.19547545909881592 minutes
2025-02-27 16:13:12,587:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:12,588:INFO:Initializing create_model()
2025-02-27 16:13:12,588:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:12,588:INFO:Checking exceptions
2025-02-27 16:13:12,588:INFO:Importing libraries
2025-02-27 16:13:12,588:INFO:Copying training dataset
2025-02-27 16:13:12,598:INFO:Defining folds
2025-02-27 16:13:12,598:INFO:Declaring metric variables
2025-02-27 16:13:12,599:INFO:Importing untrained model
2025-02-27 16:13:12,600:INFO:AdaBoost Regressor Imported successfully
2025-02-27 16:13:12,601:INFO:Starting cross validation
2025-02-27 16:13:12,603:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:13,247:INFO:Calculating mean and std
2025-02-27 16:13:13,248:INFO:Creating metrics dataframe
2025-02-27 16:13:13,253:INFO:Uploading results into container
2025-02-27 16:13:13,254:INFO:Uploading model into container now
2025-02-27 16:13:13,255:INFO:_master_model_container: 15
2025-02-27 16:13:13,255:INFO:_display_container: 2
2025-02-27 16:13:13,256:INFO:AdaBoostRegressor(random_state=42)
2025-02-27 16:13:13,256:INFO:create_model() successfully completed......................................
2025-02-27 16:13:13,349:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:13,349:INFO:Creating metrics dataframe
2025-02-27 16:13:13,358:INFO:Initializing Gradient Boosting Regressor
2025-02-27 16:13:13,358:INFO:Total runtime is 0.20834333896636964 minutes
2025-02-27 16:13:13,359:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:13,360:INFO:Initializing create_model()
2025-02-27 16:13:13,360:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:13,360:INFO:Checking exceptions
2025-02-27 16:13:13,360:INFO:Importing libraries
2025-02-27 16:13:13,360:INFO:Copying training dataset
2025-02-27 16:13:13,370:INFO:Defining folds
2025-02-27 16:13:13,370:INFO:Declaring metric variables
2025-02-27 16:13:13,370:INFO:Importing untrained model
2025-02-27 16:13:13,372:INFO:Gradient Boosting Regressor Imported successfully
2025-02-27 16:13:13,373:INFO:Starting cross validation
2025-02-27 16:13:13,375:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:13:13,949:INFO:Calculating mean and std
2025-02-27 16:13:13,951:INFO:Creating metrics dataframe
2025-02-27 16:13:13,956:INFO:Uploading results into container
2025-02-27 16:13:13,957:INFO:Uploading model into container now
2025-02-27 16:13:13,958:INFO:_master_model_container: 16
2025-02-27 16:13:13,958:INFO:_display_container: 2
2025-02-27 16:13:13,959:INFO:GradientBoostingRegressor(random_state=42)
2025-02-27 16:13:13,960:INFO:create_model() successfully completed......................................
2025-02-27 16:13:14,053:INFO:SubProcess create_model() end ==================================
2025-02-27 16:13:14,053:INFO:Creating metrics dataframe
2025-02-27 16:13:14,062:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 16:13:14,062:INFO:Total runtime is 0.22007351716359458 minutes
2025-02-27 16:13:14,063:INFO:SubProcess create_model() called ==================================
2025-02-27 16:13:14,064:INFO:Initializing create_model()
2025-02-27 16:13:14,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:13:14,064:INFO:Checking exceptions
2025-02-27 16:13:14,064:INFO:Importing libraries
2025-02-27 16:13:14,064:INFO:Copying training dataset
2025-02-27 16:13:14,073:INFO:Defining folds
2025-02-27 16:13:14,073:INFO:Declaring metric variables
2025-02-27 16:13:14,074:INFO:Importing untrained model
2025-02-27 16:13:14,076:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:13:14,077:INFO:Starting cross validation
2025-02-27 16:13:14,080:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:16:47,898:INFO:Calculating mean and std
2025-02-27 16:16:47,902:INFO:Creating metrics dataframe
2025-02-27 16:16:47,931:INFO:Uploading results into container
2025-02-27 16:16:47,946:INFO:Uploading model into container now
2025-02-27 16:16:47,948:INFO:_master_model_container: 17
2025-02-27 16:16:47,953:INFO:_display_container: 2
2025-02-27 16:16:47,959:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:16:47,960:INFO:create_model() successfully completed......................................
2025-02-27 16:16:48,091:INFO:SubProcess create_model() end ==================================
2025-02-27 16:16:48,092:INFO:Creating metrics dataframe
2025-02-27 16:16:48,101:INFO:Initializing Dummy Regressor
2025-02-27 16:16:48,102:INFO:Total runtime is 3.787396474679311 minutes
2025-02-27 16:16:48,102:INFO:SubProcess create_model() called ==================================
2025-02-27 16:16:48,103:INFO:Initializing create_model()
2025-02-27 16:16:48,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7c06312fb1f0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:16:48,103:INFO:Checking exceptions
2025-02-27 16:16:48,104:INFO:Importing libraries
2025-02-27 16:16:48,104:INFO:Copying training dataset
2025-02-27 16:16:48,113:INFO:Defining folds
2025-02-27 16:16:48,113:INFO:Declaring metric variables
2025-02-27 16:16:48,114:INFO:Importing untrained model
2025-02-27 16:16:48,115:INFO:Dummy Regressor Imported successfully
2025-02-27 16:16:48,116:INFO:Starting cross validation
2025-02-27 16:16:48,118:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:16:48,342:INFO:Calculating mean and std
2025-02-27 16:16:48,344:INFO:Creating metrics dataframe
2025-02-27 16:16:48,348:INFO:Uploading results into container
2025-02-27 16:16:48,350:INFO:Uploading model into container now
2025-02-27 16:16:48,351:INFO:_master_model_container: 18
2025-02-27 16:16:48,351:INFO:_display_container: 2
2025-02-27 16:16:48,352:INFO:DummyRegressor()
2025-02-27 16:16:48,353:INFO:create_model() successfully completed......................................
2025-02-27 16:16:48,457:INFO:SubProcess create_model() end ==================================
2025-02-27 16:16:48,458:INFO:Creating metrics dataframe
2025-02-27 16:16:48,469:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 16:16:48,474:INFO:Initializing create_model()
2025-02-27 16:16:48,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:16:48,475:INFO:Checking exceptions
2025-02-27 16:16:48,478:INFO:Importing libraries
2025-02-27 16:16:48,478:INFO:Copying training dataset
2025-02-27 16:16:48,491:INFO:Defining folds
2025-02-27 16:16:48,491:INFO:Declaring metric variables
2025-02-27 16:16:48,491:INFO:Importing untrained model
2025-02-27 16:16:48,492:INFO:Declaring custom model
2025-02-27 16:16:48,495:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:16:48,497:INFO:Cross validation set to False
2025-02-27 16:16:48,497:INFO:Fitting Model
2025-02-27 16:16:48,538:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 16:16:48,542:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000115 seconds.
2025-02-27 16:16:48,543:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:16:48,544:INFO:[LightGBM] [Info] Total Bins 180
2025-02-27 16:16:48,544:INFO:[LightGBM] [Info] Number of data points in the train set: 212, number of used features: 4
2025-02-27 16:16:48,545:INFO:[LightGBM] [Info] Start training from score 3.073208
2025-02-27 16:16:48,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,565:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:48,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,349:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:16:49,350:INFO:create_model() successfully completed......................................
2025-02-27 16:16:49,547:INFO:_master_model_container: 18
2025-02-27 16:16:49,547:INFO:_display_container: 2
2025-02-27 16:16:49,548:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:16:49,549:INFO:compare_models() successfully completed......................................
2025-02-27 16:16:49,550:INFO:Initializing finalize_model()
2025-02-27 16:16:49,551:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:16:49,552:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:16:49,559:INFO:Initializing create_model()
2025-02-27 16:16:49,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7c06671756c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:16:49,560:INFO:Checking exceptions
2025-02-27 16:16:49,562:INFO:Importing libraries
2025-02-27 16:16:49,562:INFO:Copying training dataset
2025-02-27 16:16:49,563:INFO:Defining folds
2025-02-27 16:16:49,563:INFO:Declaring metric variables
2025-02-27 16:16:49,563:INFO:Importing untrained model
2025-02-27 16:16:49,563:INFO:Declaring custom model
2025-02-27 16:16:49,568:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:16:49,570:INFO:Cross validation set to False
2025-02-27 16:16:49,570:INFO:Fitting Model
2025-02-27 16:16:49,604:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 16:16:49,605:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000088 seconds.
2025-02-27 16:16:49,605:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:16:49,605:INFO:[LightGBM] [Info] Total Bins 226
2025-02-27 16:16:49,606:INFO:[LightGBM] [Info] Number of data points in the train set: 304, number of used features: 4
2025-02-27 16:16:49,606:INFO:[LightGBM] [Info] Start training from score 3.060428
2025-02-27 16:16:49,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,646:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,648:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:49,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:16:50,293:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 16:16:50,294:INFO:create_model() successfully completed......................................
2025-02-27 16:16:50,420:INFO:_master_model_container: 18
2025-02-27 16:16:50,421:INFO:_display_container: 2
2025-02-27 16:16:50,446:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP (in billion USD)',
                                             'Inflation Rate (%)',
                                             'Unemployment Rate (%)'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 16:16:50,447:INFO:finalize_model() successfully completed......................................
2025-02-27 16:20:58,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:58,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:58,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:58,200:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:00,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:00,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:00,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:00,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:00,248:INFO:PyCaret RegressionExperiment
2025-02-27 16:22:00,249:INFO:Logging name: reg-default-name
2025-02-27 16:22:00,249:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 16:22:00,249:INFO:version 3.3.2
2025-02-27 16:22:00,249:INFO:Initializing setup()
2025-02-27 16:22:00,249:INFO:self.USI: beeb
2025-02-27 16:22:00,249:INFO:self._variable_keys: {'transform_target_param', 'gpu_n_jobs_param', 'n_jobs_param', 'log_plots_param', 'y_train', 'idx', 'y_test', '_ml_usecase', 'fold_shuffle_param', 'html_param', 'seed', 'pipeline', '_available_plots', 'exp_id', 'memory', 'logging_param', 'X', 'X_train', 'target_param', 'exp_name_log', 'fold_generator', 'USI', 'y', 'X_test', 'gpu_param', 'fold_groups_param', 'data'}
2025-02-27 16:22:00,249:INFO:Checking environment
2025-02-27 16:22:00,249:INFO:python_version: 3.10.12
2025-02-27 16:22:00,249:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 16:22:00,249:INFO:machine: x86_64
2025-02-27 16:22:00,251:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:22:00,252:INFO:Memory: svmem(total=16420966400, available=9026658304, percent=45.0, used=6303580160, free=1310121984, active=7178670080, inactive=6539825152, buffers=354725888, cached=8452538368, shared=739061760, slab=771182592)
2025-02-27 16:22:00,253:INFO:Physical Core: 4
2025-02-27 16:22:00,253:INFO:Logical Core: 8
2025-02-27 16:22:00,254:INFO:Checking libraries
2025-02-27 16:22:00,254:INFO:System:
2025-02-27 16:22:00,254:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 16:22:00,254:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 16:22:00,254:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:22:00,254:INFO:PyCaret required dependencies:
2025-02-27 16:22:00,281:INFO:                 pip: 25.0.1
2025-02-27 16:22:00,281:INFO:          setuptools: 75.8.2
2025-02-27 16:22:00,281:INFO:             pycaret: 3.3.2
2025-02-27 16:22:00,281:INFO:             IPython: 8.32.0
2025-02-27 16:22:00,281:INFO:          ipywidgets: 8.1.5
2025-02-27 16:22:00,281:INFO:                tqdm: 4.67.1
2025-02-27 16:22:00,281:INFO:               numpy: 1.26.4
2025-02-27 16:22:00,281:INFO:              pandas: 2.1.4
2025-02-27 16:22:00,281:INFO:              jinja2: 3.1.5
2025-02-27 16:22:00,281:INFO:               scipy: 1.11.4
2025-02-27 16:22:00,281:INFO:              joblib: 1.3.2
2025-02-27 16:22:00,281:INFO:             sklearn: 1.4.2
2025-02-27 16:22:00,281:INFO:                pyod: 2.0.3
2025-02-27 16:22:00,281:INFO:            imblearn: 0.13.0
2025-02-27 16:22:00,281:INFO:   category_encoders: 2.7.0
2025-02-27 16:22:00,281:INFO:            lightgbm: 4.6.0
2025-02-27 16:22:00,281:INFO:               numba: 0.61.0
2025-02-27 16:22:00,282:INFO:            requests: 2.32.3
2025-02-27 16:22:00,282:INFO:          matplotlib: 3.7.5
2025-02-27 16:22:00,282:INFO:          scikitplot: 0.3.7
2025-02-27 16:22:00,282:INFO:         yellowbrick: 1.5
2025-02-27 16:22:00,282:INFO:              plotly: 5.24.1
2025-02-27 16:22:00,282:INFO:    plotly-resampler: Not installed
2025-02-27 16:22:00,282:INFO:             kaleido: 0.2.1
2025-02-27 16:22:00,282:INFO:           schemdraw: 0.15
2025-02-27 16:22:00,282:INFO:         statsmodels: 0.14.4
2025-02-27 16:22:00,282:INFO:              sktime: 0.26.0
2025-02-27 16:22:00,282:INFO:               tbats: 1.1.3
2025-02-27 16:22:00,282:INFO:            pmdarima: 2.0.4
2025-02-27 16:22:00,282:INFO:              psutil: 7.0.0
2025-02-27 16:22:00,282:INFO:          markupsafe: 3.0.2
2025-02-27 16:22:00,282:INFO:             pickle5: Not installed
2025-02-27 16:22:00,282:INFO:         cloudpickle: 3.1.1
2025-02-27 16:22:00,283:INFO:         deprecation: 2.1.0
2025-02-27 16:22:00,283:INFO:              xxhash: 3.5.0
2025-02-27 16:22:00,283:INFO:           wurlitzer: 3.1.1
2025-02-27 16:22:00,283:INFO:PyCaret optional dependencies:
2025-02-27 16:22:00,300:INFO:                shap: Not installed
2025-02-27 16:22:00,300:INFO:           interpret: Not installed
2025-02-27 16:22:00,300:INFO:                umap: Not installed
2025-02-27 16:22:00,301:INFO:     ydata_profiling: Not installed
2025-02-27 16:22:00,301:INFO:  explainerdashboard: Not installed
2025-02-27 16:22:00,301:INFO:             autoviz: Not installed
2025-02-27 16:22:00,301:INFO:           fairlearn: Not installed
2025-02-27 16:22:00,301:INFO:          deepchecks: Not installed
2025-02-27 16:22:00,301:INFO:             xgboost: Not installed
2025-02-27 16:22:00,301:INFO:            catboost: Not installed
2025-02-27 16:22:00,301:INFO:              kmodes: Not installed
2025-02-27 16:22:00,301:INFO:             mlxtend: Not installed
2025-02-27 16:22:00,301:INFO:       statsforecast: Not installed
2025-02-27 16:22:00,301:INFO:        tune_sklearn: Not installed
2025-02-27 16:22:00,301:INFO:                 ray: Not installed
2025-02-27 16:22:00,301:INFO:            hyperopt: Not installed
2025-02-27 16:22:00,301:INFO:              optuna: Not installed
2025-02-27 16:22:00,301:INFO:               skopt: Not installed
2025-02-27 16:22:00,301:INFO:              mlflow: Not installed
2025-02-27 16:22:00,301:INFO:              gradio: Not installed
2025-02-27 16:22:00,301:INFO:             fastapi: Not installed
2025-02-27 16:22:00,301:INFO:             uvicorn: Not installed
2025-02-27 16:22:00,301:INFO:              m2cgen: Not installed
2025-02-27 16:22:00,301:INFO:           evidently: Not installed
2025-02-27 16:22:00,301:INFO:               fugue: Not installed
2025-02-27 16:22:00,302:INFO:           streamlit: Not installed
2025-02-27 16:22:00,302:INFO:             prophet: Not installed
2025-02-27 16:22:00,302:INFO:None
2025-02-27 16:22:00,302:INFO:Set up data.
2025-02-27 16:22:00,309:INFO:Set up folding strategy.
2025-02-27 16:22:00,310:INFO:Set up train/test split.
2025-02-27 16:22:00,313:INFO:Set up index.
2025-02-27 16:22:00,314:INFO:Assigning column types.
2025-02-27 16:22:00,318:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:22:00,318:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,325:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,425:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,426:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,427:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,435:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,486:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,524:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,525:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,526:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 16:22:00,531:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,535:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,583:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,621:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,628:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,632:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,715:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,717:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 16:22:00,729:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,859:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:00,968:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:00,969:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 16:22:01,041:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,092:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,168:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,217:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,218:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:22:01,290:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:22:01,464:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,464:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 16:22:01,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,587:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,676:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,676:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,678:INFO:Preparing preprocessing pipeline...
2025-02-27 16:22:01,678:INFO:Set up simple imputation.
2025-02-27 16:22:01,678:INFO:Set up feature normalization.
2025-02-27 16:22:01,679:INFO:Set up column name cleaning.
2025-02-27 16:22:01,704:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:22:01,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP_(in billion USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 16:22:01,710:INFO:Creating final display dataframe.
2025-02-27 16:22:01,777:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target   Economic_Growth
2                   Target type        Regression
3           Original data shape          (304, 5)
4        Transformed data shape          (304, 5)
5   Transformed train set shape          (212, 5)
6    Transformed test set shape           (92, 5)
7              Numeric features                 4
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator             KFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  reg-default-name
20                          USI              beeb
2025-02-27 16:22:01,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:01,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:02,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:02,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:02,004:INFO:setup() successfully completed in 1.76s...............
2025-02-27 16:22:02,004:INFO:Initializing compare_models()
2025-02-27 16:22:02,005:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2025-02-27 16:22:02,005:INFO:Checking exceptions
2025-02-27 16:22:02,007:INFO:Preparing display monitor
2025-02-27 16:22:02,010:INFO:Initializing Linear Regression
2025-02-27 16:22:02,010:INFO:Total runtime is 1.8715858459472655e-06 minutes
2025-02-27 16:22:02,010:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:02,011:INFO:Initializing create_model()
2025-02-27 16:22:02,011:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:02,011:INFO:Checking exceptions
2025-02-27 16:22:02,011:INFO:Importing libraries
2025-02-27 16:22:02,011:INFO:Copying training dataset
2025-02-27 16:22:02,014:INFO:Defining folds
2025-02-27 16:22:02,014:INFO:Declaring metric variables
2025-02-27 16:22:02,014:INFO:Importing untrained model
2025-02-27 16:22:02,015:INFO:Linear Regression Imported successfully
2025-02-27 16:22:02,015:INFO:Starting cross validation
2025-02-27 16:22:02,019:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:05,448:INFO:Calculating mean and std
2025-02-27 16:22:05,450:INFO:Creating metrics dataframe
2025-02-27 16:22:05,456:INFO:Uploading results into container
2025-02-27 16:22:05,460:INFO:Uploading model into container now
2025-02-27 16:22:05,461:INFO:_master_model_container: 1
2025-02-27 16:22:05,461:INFO:_display_container: 2
2025-02-27 16:22:05,462:INFO:LinearRegression(n_jobs=-1)
2025-02-27 16:22:05,463:INFO:create_model() successfully completed......................................
2025-02-27 16:22:05,562:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:05,562:INFO:Creating metrics dataframe
2025-02-27 16:22:05,566:INFO:Initializing Lasso Regression
2025-02-27 16:22:05,566:INFO:Total runtime is 0.05926915009816488 minutes
2025-02-27 16:22:05,566:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:05,567:INFO:Initializing create_model()
2025-02-27 16:22:05,567:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:05,567:INFO:Checking exceptions
2025-02-27 16:22:05,567:INFO:Importing libraries
2025-02-27 16:22:05,567:INFO:Copying training dataset
2025-02-27 16:22:05,571:INFO:Defining folds
2025-02-27 16:22:05,571:INFO:Declaring metric variables
2025-02-27 16:22:05,572:INFO:Importing untrained model
2025-02-27 16:22:05,572:INFO:Lasso Regression Imported successfully
2025-02-27 16:22:05,573:INFO:Starting cross validation
2025-02-27 16:22:05,574:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:05,738:INFO:Calculating mean and std
2025-02-27 16:22:05,739:INFO:Creating metrics dataframe
2025-02-27 16:22:05,742:INFO:Uploading results into container
2025-02-27 16:22:05,743:INFO:Uploading model into container now
2025-02-27 16:22:05,743:INFO:_master_model_container: 2
2025-02-27 16:22:05,744:INFO:_display_container: 2
2025-02-27 16:22:05,744:INFO:Lasso(random_state=42)
2025-02-27 16:22:05,744:INFO:create_model() successfully completed......................................
2025-02-27 16:22:05,816:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:05,816:INFO:Creating metrics dataframe
2025-02-27 16:22:05,820:INFO:Initializing Ridge Regression
2025-02-27 16:22:05,820:INFO:Total runtime is 0.06350311438242595 minutes
2025-02-27 16:22:05,821:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:05,821:INFO:Initializing create_model()
2025-02-27 16:22:05,821:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:05,821:INFO:Checking exceptions
2025-02-27 16:22:05,821:INFO:Importing libraries
2025-02-27 16:22:05,822:INFO:Copying training dataset
2025-02-27 16:22:05,827:INFO:Defining folds
2025-02-27 16:22:05,827:INFO:Declaring metric variables
2025-02-27 16:22:05,827:INFO:Importing untrained model
2025-02-27 16:22:05,828:INFO:Ridge Regression Imported successfully
2025-02-27 16:22:05,828:INFO:Starting cross validation
2025-02-27 16:22:05,829:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:05,952:INFO:Calculating mean and std
2025-02-27 16:22:05,953:INFO:Creating metrics dataframe
2025-02-27 16:22:05,955:INFO:Uploading results into container
2025-02-27 16:22:05,956:INFO:Uploading model into container now
2025-02-27 16:22:05,956:INFO:_master_model_container: 3
2025-02-27 16:22:05,956:INFO:_display_container: 2
2025-02-27 16:22:05,957:INFO:Ridge(random_state=42)
2025-02-27 16:22:05,957:INFO:create_model() successfully completed......................................
2025-02-27 16:22:06,027:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:06,028:INFO:Creating metrics dataframe
2025-02-27 16:22:06,033:INFO:Initializing Elastic Net
2025-02-27 16:22:06,033:INFO:Total runtime is 0.06705257892608643 minutes
2025-02-27 16:22:06,034:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:06,034:INFO:Initializing create_model()
2025-02-27 16:22:06,034:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:06,034:INFO:Checking exceptions
2025-02-27 16:22:06,034:INFO:Importing libraries
2025-02-27 16:22:06,034:INFO:Copying training dataset
2025-02-27 16:22:06,040:INFO:Defining folds
2025-02-27 16:22:06,040:INFO:Declaring metric variables
2025-02-27 16:22:06,041:INFO:Importing untrained model
2025-02-27 16:22:06,042:INFO:Elastic Net Imported successfully
2025-02-27 16:22:06,042:INFO:Starting cross validation
2025-02-27 16:22:06,044:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:06,196:INFO:Calculating mean and std
2025-02-27 16:22:06,196:INFO:Creating metrics dataframe
2025-02-27 16:22:06,199:INFO:Uploading results into container
2025-02-27 16:22:06,200:INFO:Uploading model into container now
2025-02-27 16:22:06,200:INFO:_master_model_container: 4
2025-02-27 16:22:06,201:INFO:_display_container: 2
2025-02-27 16:22:06,201:INFO:ElasticNet(random_state=42)
2025-02-27 16:22:06,201:INFO:create_model() successfully completed......................................
2025-02-27 16:22:06,273:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:06,273:INFO:Creating metrics dataframe
2025-02-27 16:22:06,278:INFO:Initializing Least Angle Regression
2025-02-27 16:22:06,279:INFO:Total runtime is 0.07114294767379761 minutes
2025-02-27 16:22:06,279:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:06,279:INFO:Initializing create_model()
2025-02-27 16:22:06,279:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:06,279:INFO:Checking exceptions
2025-02-27 16:22:06,279:INFO:Importing libraries
2025-02-27 16:22:06,280:INFO:Copying training dataset
2025-02-27 16:22:06,283:INFO:Defining folds
2025-02-27 16:22:06,284:INFO:Declaring metric variables
2025-02-27 16:22:06,284:INFO:Importing untrained model
2025-02-27 16:22:06,284:INFO:Least Angle Regression Imported successfully
2025-02-27 16:22:06,285:INFO:Starting cross validation
2025-02-27 16:22:06,286:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:06,423:INFO:Calculating mean and std
2025-02-27 16:22:06,424:INFO:Creating metrics dataframe
2025-02-27 16:22:06,427:INFO:Uploading results into container
2025-02-27 16:22:06,428:INFO:Uploading model into container now
2025-02-27 16:22:06,429:INFO:_master_model_container: 5
2025-02-27 16:22:06,429:INFO:_display_container: 2
2025-02-27 16:22:06,429:INFO:Lars(random_state=42)
2025-02-27 16:22:06,429:INFO:create_model() successfully completed......................................
2025-02-27 16:22:06,497:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:06,498:INFO:Creating metrics dataframe
2025-02-27 16:22:06,501:INFO:Initializing Lasso Least Angle Regression
2025-02-27 16:22:06,501:INFO:Total runtime is 0.07485496203104655 minutes
2025-02-27 16:22:06,502:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:06,502:INFO:Initializing create_model()
2025-02-27 16:22:06,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:06,502:INFO:Checking exceptions
2025-02-27 16:22:06,502:INFO:Importing libraries
2025-02-27 16:22:06,502:INFO:Copying training dataset
2025-02-27 16:22:06,507:INFO:Defining folds
2025-02-27 16:22:06,507:INFO:Declaring metric variables
2025-02-27 16:22:06,507:INFO:Importing untrained model
2025-02-27 16:22:06,508:INFO:Lasso Least Angle Regression Imported successfully
2025-02-27 16:22:06,509:INFO:Starting cross validation
2025-02-27 16:22:06,510:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:06,682:INFO:Calculating mean and std
2025-02-27 16:22:06,683:INFO:Creating metrics dataframe
2025-02-27 16:22:06,687:INFO:Uploading results into container
2025-02-27 16:22:06,688:INFO:Uploading model into container now
2025-02-27 16:22:06,689:INFO:_master_model_container: 6
2025-02-27 16:22:06,690:INFO:_display_container: 2
2025-02-27 16:22:06,690:INFO:LassoLars(random_state=42)
2025-02-27 16:22:06,691:INFO:create_model() successfully completed......................................
2025-02-27 16:22:06,781:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:06,782:INFO:Creating metrics dataframe
2025-02-27 16:22:06,788:INFO:Initializing Orthogonal Matching Pursuit
2025-02-27 16:22:06,788:INFO:Total runtime is 0.07963877121607463 minutes
2025-02-27 16:22:06,789:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:06,789:INFO:Initializing create_model()
2025-02-27 16:22:06,790:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:06,790:INFO:Checking exceptions
2025-02-27 16:22:06,790:INFO:Importing libraries
2025-02-27 16:22:06,790:INFO:Copying training dataset
2025-02-27 16:22:06,799:INFO:Defining folds
2025-02-27 16:22:06,800:INFO:Declaring metric variables
2025-02-27 16:22:06,800:INFO:Importing untrained model
2025-02-27 16:22:06,801:INFO:Orthogonal Matching Pursuit Imported successfully
2025-02-27 16:22:06,802:INFO:Starting cross validation
2025-02-27 16:22:06,805:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:06,997:INFO:Calculating mean and std
2025-02-27 16:22:06,999:INFO:Creating metrics dataframe
2025-02-27 16:22:07,001:INFO:Uploading results into container
2025-02-27 16:22:07,002:INFO:Uploading model into container now
2025-02-27 16:22:07,003:INFO:_master_model_container: 7
2025-02-27 16:22:07,003:INFO:_display_container: 2
2025-02-27 16:22:07,003:INFO:OrthogonalMatchingPursuit()
2025-02-27 16:22:07,003:INFO:create_model() successfully completed......................................
2025-02-27 16:22:07,075:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:07,075:INFO:Creating metrics dataframe
2025-02-27 16:22:07,079:INFO:Initializing Bayesian Ridge
2025-02-27 16:22:07,079:INFO:Total runtime is 0.08448825279871623 minutes
2025-02-27 16:22:07,080:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:07,080:INFO:Initializing create_model()
2025-02-27 16:22:07,080:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:07,080:INFO:Checking exceptions
2025-02-27 16:22:07,080:INFO:Importing libraries
2025-02-27 16:22:07,080:INFO:Copying training dataset
2025-02-27 16:22:07,085:INFO:Defining folds
2025-02-27 16:22:07,085:INFO:Declaring metric variables
2025-02-27 16:22:07,086:INFO:Importing untrained model
2025-02-27 16:22:07,087:INFO:Bayesian Ridge Imported successfully
2025-02-27 16:22:07,087:INFO:Starting cross validation
2025-02-27 16:22:07,089:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:07,233:INFO:Calculating mean and std
2025-02-27 16:22:07,234:INFO:Creating metrics dataframe
2025-02-27 16:22:07,238:INFO:Uploading results into container
2025-02-27 16:22:07,239:INFO:Uploading model into container now
2025-02-27 16:22:07,239:INFO:_master_model_container: 8
2025-02-27 16:22:07,239:INFO:_display_container: 2
2025-02-27 16:22:07,240:INFO:BayesianRidge()
2025-02-27 16:22:07,240:INFO:create_model() successfully completed......................................
2025-02-27 16:22:07,313:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:07,313:INFO:Creating metrics dataframe
2025-02-27 16:22:07,321:INFO:Initializing Passive Aggressive Regressor
2025-02-27 16:22:07,321:INFO:Total runtime is 0.08851375182469687 minutes
2025-02-27 16:22:07,321:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:07,322:INFO:Initializing create_model()
2025-02-27 16:22:07,322:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:07,322:INFO:Checking exceptions
2025-02-27 16:22:07,322:INFO:Importing libraries
2025-02-27 16:22:07,322:INFO:Copying training dataset
2025-02-27 16:22:07,330:INFO:Defining folds
2025-02-27 16:22:07,330:INFO:Declaring metric variables
2025-02-27 16:22:07,331:INFO:Importing untrained model
2025-02-27 16:22:07,331:INFO:Passive Aggressive Regressor Imported successfully
2025-02-27 16:22:07,332:INFO:Starting cross validation
2025-02-27 16:22:07,335:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:07,544:INFO:Calculating mean and std
2025-02-27 16:22:07,545:INFO:Creating metrics dataframe
2025-02-27 16:22:07,548:INFO:Uploading results into container
2025-02-27 16:22:07,549:INFO:Uploading model into container now
2025-02-27 16:22:07,550:INFO:_master_model_container: 9
2025-02-27 16:22:07,550:INFO:_display_container: 2
2025-02-27 16:22:07,550:INFO:PassiveAggressiveRegressor(random_state=42)
2025-02-27 16:22:07,550:INFO:create_model() successfully completed......................................
2025-02-27 16:22:07,620:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:07,620:INFO:Creating metrics dataframe
2025-02-27 16:22:07,626:INFO:Initializing Huber Regressor
2025-02-27 16:22:07,626:INFO:Total runtime is 0.09360073804855347 minutes
2025-02-27 16:22:07,626:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:07,627:INFO:Initializing create_model()
2025-02-27 16:22:07,627:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:07,627:INFO:Checking exceptions
2025-02-27 16:22:07,627:INFO:Importing libraries
2025-02-27 16:22:07,627:INFO:Copying training dataset
2025-02-27 16:22:07,631:INFO:Defining folds
2025-02-27 16:22:07,631:INFO:Declaring metric variables
2025-02-27 16:22:07,631:INFO:Importing untrained model
2025-02-27 16:22:07,631:INFO:Huber Regressor Imported successfully
2025-02-27 16:22:07,632:INFO:Starting cross validation
2025-02-27 16:22:07,633:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:07,769:INFO:Calculating mean and std
2025-02-27 16:22:07,770:INFO:Creating metrics dataframe
2025-02-27 16:22:07,772:INFO:Uploading results into container
2025-02-27 16:22:07,773:INFO:Uploading model into container now
2025-02-27 16:22:07,773:INFO:_master_model_container: 10
2025-02-27 16:22:07,773:INFO:_display_container: 2
2025-02-27 16:22:07,774:INFO:HuberRegressor()
2025-02-27 16:22:07,774:INFO:create_model() successfully completed......................................
2025-02-27 16:22:07,844:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:07,844:INFO:Creating metrics dataframe
2025-02-27 16:22:07,848:INFO:Initializing K Neighbors Regressor
2025-02-27 16:22:07,848:INFO:Total runtime is 0.0973004420598348 minutes
2025-02-27 16:22:07,848:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:07,849:INFO:Initializing create_model()
2025-02-27 16:22:07,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:07,849:INFO:Checking exceptions
2025-02-27 16:22:07,849:INFO:Importing libraries
2025-02-27 16:22:07,849:INFO:Copying training dataset
2025-02-27 16:22:07,852:INFO:Defining folds
2025-02-27 16:22:07,852:INFO:Declaring metric variables
2025-02-27 16:22:07,852:INFO:Importing untrained model
2025-02-27 16:22:07,853:INFO:K Neighbors Regressor Imported successfully
2025-02-27 16:22:07,853:INFO:Starting cross validation
2025-02-27 16:22:07,854:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:07,988:INFO:Calculating mean and std
2025-02-27 16:22:07,989:INFO:Creating metrics dataframe
2025-02-27 16:22:07,991:INFO:Uploading results into container
2025-02-27 16:22:07,992:INFO:Uploading model into container now
2025-02-27 16:22:07,993:INFO:_master_model_container: 11
2025-02-27 16:22:07,993:INFO:_display_container: 2
2025-02-27 16:22:07,993:INFO:KNeighborsRegressor(n_jobs=-1)
2025-02-27 16:22:07,993:INFO:create_model() successfully completed......................................
2025-02-27 16:22:08,057:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:08,057:INFO:Creating metrics dataframe
2025-02-27 16:22:08,062:INFO:Initializing Decision Tree Regressor
2025-02-27 16:22:08,062:INFO:Total runtime is 0.10086061557133993 minutes
2025-02-27 16:22:08,062:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:08,062:INFO:Initializing create_model()
2025-02-27 16:22:08,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:08,062:INFO:Checking exceptions
2025-02-27 16:22:08,062:INFO:Importing libraries
2025-02-27 16:22:08,063:INFO:Copying training dataset
2025-02-27 16:22:08,066:INFO:Defining folds
2025-02-27 16:22:08,067:INFO:Declaring metric variables
2025-02-27 16:22:08,067:INFO:Importing untrained model
2025-02-27 16:22:08,067:INFO:Decision Tree Regressor Imported successfully
2025-02-27 16:22:08,068:INFO:Starting cross validation
2025-02-27 16:22:08,069:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:08,180:INFO:Calculating mean and std
2025-02-27 16:22:08,180:INFO:Creating metrics dataframe
2025-02-27 16:22:08,183:INFO:Uploading results into container
2025-02-27 16:22:08,183:INFO:Uploading model into container now
2025-02-27 16:22:08,184:INFO:_master_model_container: 12
2025-02-27 16:22:08,184:INFO:_display_container: 2
2025-02-27 16:22:08,184:INFO:DecisionTreeRegressor(random_state=42)
2025-02-27 16:22:08,184:INFO:create_model() successfully completed......................................
2025-02-27 16:22:08,250:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:08,250:INFO:Creating metrics dataframe
2025-02-27 16:22:08,254:INFO:Initializing Random Forest Regressor
2025-02-27 16:22:08,254:INFO:Total runtime is 0.10406366586685181 minutes
2025-02-27 16:22:08,254:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:08,254:INFO:Initializing create_model()
2025-02-27 16:22:08,254:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:08,254:INFO:Checking exceptions
2025-02-27 16:22:08,254:INFO:Importing libraries
2025-02-27 16:22:08,255:INFO:Copying training dataset
2025-02-27 16:22:08,258:INFO:Defining folds
2025-02-27 16:22:08,258:INFO:Declaring metric variables
2025-02-27 16:22:08,258:INFO:Importing untrained model
2025-02-27 16:22:08,259:INFO:Random Forest Regressor Imported successfully
2025-02-27 16:22:08,259:INFO:Starting cross validation
2025-02-27 16:22:08,260:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:08,905:INFO:Calculating mean and std
2025-02-27 16:22:08,907:INFO:Creating metrics dataframe
2025-02-27 16:22:08,909:INFO:Uploading results into container
2025-02-27 16:22:08,910:INFO:Uploading model into container now
2025-02-27 16:22:08,911:INFO:_master_model_container: 13
2025-02-27 16:22:08,911:INFO:_display_container: 2
2025-02-27 16:22:08,912:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:22:08,912:INFO:create_model() successfully completed......................................
2025-02-27 16:22:08,985:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:08,985:INFO:Creating metrics dataframe
2025-02-27 16:22:08,990:INFO:Initializing Extra Trees Regressor
2025-02-27 16:22:08,990:INFO:Total runtime is 0.11633763313293458 minutes
2025-02-27 16:22:08,991:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:08,991:INFO:Initializing create_model()
2025-02-27 16:22:08,991:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:08,991:INFO:Checking exceptions
2025-02-27 16:22:08,991:INFO:Importing libraries
2025-02-27 16:22:08,991:INFO:Copying training dataset
2025-02-27 16:22:08,995:INFO:Defining folds
2025-02-27 16:22:08,995:INFO:Declaring metric variables
2025-02-27 16:22:08,995:INFO:Importing untrained model
2025-02-27 16:22:08,995:INFO:Extra Trees Regressor Imported successfully
2025-02-27 16:22:08,996:INFO:Starting cross validation
2025-02-27 16:22:08,997:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:09,461:INFO:Calculating mean and std
2025-02-27 16:22:09,461:INFO:Creating metrics dataframe
2025-02-27 16:22:09,464:INFO:Uploading results into container
2025-02-27 16:22:09,464:INFO:Uploading model into container now
2025-02-27 16:22:09,465:INFO:_master_model_container: 14
2025-02-27 16:22:09,465:INFO:_display_container: 2
2025-02-27 16:22:09,465:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:22:09,465:INFO:create_model() successfully completed......................................
2025-02-27 16:22:09,530:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:09,530:INFO:Creating metrics dataframe
2025-02-27 16:22:09,534:INFO:Initializing AdaBoost Regressor
2025-02-27 16:22:09,534:INFO:Total runtime is 0.1254073182741801 minutes
2025-02-27 16:22:09,535:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:09,535:INFO:Initializing create_model()
2025-02-27 16:22:09,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:09,535:INFO:Checking exceptions
2025-02-27 16:22:09,535:INFO:Importing libraries
2025-02-27 16:22:09,535:INFO:Copying training dataset
2025-02-27 16:22:09,538:INFO:Defining folds
2025-02-27 16:22:09,539:INFO:Declaring metric variables
2025-02-27 16:22:09,539:INFO:Importing untrained model
2025-02-27 16:22:09,539:INFO:AdaBoost Regressor Imported successfully
2025-02-27 16:22:09,539:INFO:Starting cross validation
2025-02-27 16:22:09,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:09,890:INFO:Calculating mean and std
2025-02-27 16:22:09,891:INFO:Creating metrics dataframe
2025-02-27 16:22:09,893:INFO:Uploading results into container
2025-02-27 16:22:09,894:INFO:Uploading model into container now
2025-02-27 16:22:09,894:INFO:_master_model_container: 15
2025-02-27 16:22:09,894:INFO:_display_container: 2
2025-02-27 16:22:09,895:INFO:AdaBoostRegressor(random_state=42)
2025-02-27 16:22:09,895:INFO:create_model() successfully completed......................................
2025-02-27 16:22:09,959:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:09,959:INFO:Creating metrics dataframe
2025-02-27 16:22:09,963:INFO:Initializing Gradient Boosting Regressor
2025-02-27 16:22:09,963:INFO:Total runtime is 0.1325470010439555 minutes
2025-02-27 16:22:09,963:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:09,963:INFO:Initializing create_model()
2025-02-27 16:22:09,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:09,963:INFO:Checking exceptions
2025-02-27 16:22:09,963:INFO:Importing libraries
2025-02-27 16:22:09,963:INFO:Copying training dataset
2025-02-27 16:22:09,967:INFO:Defining folds
2025-02-27 16:22:09,967:INFO:Declaring metric variables
2025-02-27 16:22:09,967:INFO:Importing untrained model
2025-02-27 16:22:09,968:INFO:Gradient Boosting Regressor Imported successfully
2025-02-27 16:22:09,968:INFO:Starting cross validation
2025-02-27 16:22:09,969:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:22:10,264:INFO:Calculating mean and std
2025-02-27 16:22:10,265:INFO:Creating metrics dataframe
2025-02-27 16:22:10,267:INFO:Uploading results into container
2025-02-27 16:22:10,268:INFO:Uploading model into container now
2025-02-27 16:22:10,268:INFO:_master_model_container: 16
2025-02-27 16:22:10,268:INFO:_display_container: 2
2025-02-27 16:22:10,269:INFO:GradientBoostingRegressor(random_state=42)
2025-02-27 16:22:10,269:INFO:create_model() successfully completed......................................
2025-02-27 16:22:10,340:INFO:SubProcess create_model() end ==================================
2025-02-27 16:22:10,340:INFO:Creating metrics dataframe
2025-02-27 16:22:10,343:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 16:22:10,343:INFO:Total runtime is 0.13889064788818362 minutes
2025-02-27 16:22:10,344:INFO:SubProcess create_model() called ==================================
2025-02-27 16:22:10,344:INFO:Initializing create_model()
2025-02-27 16:22:10,344:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:22:10,344:INFO:Checking exceptions
2025-02-27 16:22:10,344:INFO:Importing libraries
2025-02-27 16:22:10,344:INFO:Copying training dataset
2025-02-27 16:22:10,348:INFO:Defining folds
2025-02-27 16:22:10,348:INFO:Declaring metric variables
2025-02-27 16:22:10,348:INFO:Importing untrained model
2025-02-27 16:22:10,350:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:22:10,350:INFO:Starting cross validation
2025-02-27 16:22:10,351:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:25:17,243:INFO:Calculating mean and std
2025-02-27 16:25:17,253:INFO:Creating metrics dataframe
2025-02-27 16:25:17,259:INFO:Uploading results into container
2025-02-27 16:25:17,261:INFO:Uploading model into container now
2025-02-27 16:25:17,262:INFO:_master_model_container: 17
2025-02-27 16:25:17,262:INFO:_display_container: 2
2025-02-27 16:25:17,263:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:25:17,263:INFO:create_model() successfully completed......................................
2025-02-27 16:25:17,338:INFO:SubProcess create_model() end ==================================
2025-02-27 16:25:17,338:INFO:Creating metrics dataframe
2025-02-27 16:25:17,344:INFO:Initializing Dummy Regressor
2025-02-27 16:25:17,344:INFO:Total runtime is 3.2555635094642636 minutes
2025-02-27 16:25:17,344:INFO:SubProcess create_model() called ==================================
2025-02-27 16:25:17,345:INFO:Initializing create_model()
2025-02-27 16:25:17,345:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7b7ec2aab3a0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:25:17,345:INFO:Checking exceptions
2025-02-27 16:25:17,345:INFO:Importing libraries
2025-02-27 16:25:17,345:INFO:Copying training dataset
2025-02-27 16:25:17,350:INFO:Defining folds
2025-02-27 16:25:17,351:INFO:Declaring metric variables
2025-02-27 16:25:17,351:INFO:Importing untrained model
2025-02-27 16:25:17,351:INFO:Dummy Regressor Imported successfully
2025-02-27 16:25:17,352:INFO:Starting cross validation
2025-02-27 16:25:17,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:25:17,488:INFO:Calculating mean and std
2025-02-27 16:25:17,489:INFO:Creating metrics dataframe
2025-02-27 16:25:17,492:INFO:Uploading results into container
2025-02-27 16:25:17,493:INFO:Uploading model into container now
2025-02-27 16:25:17,494:INFO:_master_model_container: 18
2025-02-27 16:25:17,494:INFO:_display_container: 2
2025-02-27 16:25:17,495:INFO:DummyRegressor()
2025-02-27 16:25:17,495:INFO:create_model() successfully completed......................................
2025-02-27 16:25:17,572:INFO:SubProcess create_model() end ==================================
2025-02-27 16:25:17,572:INFO:Creating metrics dataframe
2025-02-27 16:25:17,578:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 16:25:17,581:INFO:Initializing create_model()
2025-02-27 16:25:17,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:25:17,581:INFO:Checking exceptions
2025-02-27 16:25:17,583:INFO:Importing libraries
2025-02-27 16:25:17,583:INFO:Copying training dataset
2025-02-27 16:25:17,588:INFO:Defining folds
2025-02-27 16:25:17,588:INFO:Declaring metric variables
2025-02-27 16:25:17,588:INFO:Importing untrained model
2025-02-27 16:25:17,588:INFO:Declaring custom model
2025-02-27 16:25:17,590:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:25:17,592:INFO:Cross validation set to False
2025-02-27 16:25:17,592:INFO:Fitting Model
2025-02-27 16:25:17,615:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 16:25:17,616:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000077 seconds.
2025-02-27 16:25:17,617:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:25:17,617:INFO:[LightGBM] [Info] Total Bins 180
2025-02-27 16:25:17,623:INFO:[LightGBM] [Info] Number of data points in the train set: 212, number of used features: 4
2025-02-27 16:25:17,625:INFO:[LightGBM] [Info] Start training from score 3.073208
2025-02-27 16:25:17,626:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,628:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,632:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,634:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,676:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,729:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf

2025-02-27 16:25:17,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,820:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:25:17,821:INFO:create_model() successfully completed......................................
2025-02-27 16:25:17,925:INFO:_master_model_container: 18
2025-02-27 16:25:17,925:INFO:_display_container: 2
2025-02-27 16:25:17,926:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:25:17,926:INFO:compare_models() successfully completed......................................
2025-02-27 16:25:17,927:INFO:Initializing finalize_model()
2025-02-27 16:25:17,927:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:25:17,928:INFO:Finalizing LGBMRegressor(n_jobs=-1, random_state=42)
2025-02-27 16:25:17,934:INFO:Initializing create_model()
2025-02-27 16:25:17,934:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7b7efc8316c0>, estimator=LGBMRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:25:17,934:INFO:Checking exceptions
2025-02-27 16:25:17,936:INFO:Importing libraries
2025-02-27 16:25:17,936:INFO:Copying training dataset
2025-02-27 16:25:17,937:INFO:Defining folds
2025-02-27 16:25:17,937:INFO:Declaring metric variables
2025-02-27 16:25:17,937:INFO:Importing untrained model
2025-02-27 16:25:17,937:INFO:Declaring custom model
2025-02-27 16:25:17,940:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:25:17,942:INFO:Cross validation set to False
2025-02-27 16:25:17,942:INFO:Fitting Model
2025-02-27 16:25:17,964:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-02-27 16:25:17,965:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000083 seconds.
2025-02-27 16:25:17,965:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:25:17,965:INFO:[LightGBM] [Info] Total Bins 226
2025-02-27 16:25:17,966:INFO:[LightGBM] [Info] Number of data points in the train set: 304, number of used features: 4
2025-02-27 16:25:17,966:INFO:[LightGBM] [Info] Start training from score 3.060428
2025-02-27 16:25:17,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:17,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:25:18,100:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP_(in billion USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 16:25:18,100:INFO:create_model() successfully completed......................................
2025-02-27 16:25:18,173:INFO:_master_model_container: 18
2025-02-27 16:25:18,173:INFO:_display_container: 2
2025-02-27 16:25:18,183:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Year', 'GDP_(in billion USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('actual_estimator',
                 LGBMRegressor(n_jobs=-1, random_state=42))])
2025-02-27 16:25:18,184:INFO:finalize_model() successfully completed......................................
2025-02-27 16:44:07,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:07,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:07,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:07,441:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:48,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:48,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:48,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:48,534:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:48,621:INFO:PyCaret RegressionExperiment
2025-02-27 16:44:48,621:INFO:Logging name: reg-default-name
2025-02-27 16:44:48,621:INFO:ML Usecase: MLUsecase.REGRESSION
2025-02-27 16:44:48,621:INFO:version 3.3.2
2025-02-27 16:44:48,622:INFO:Initializing setup()
2025-02-27 16:44:48,622:INFO:self.USI: 70f5
2025-02-27 16:44:48,622:INFO:self._variable_keys: {'X', 'exp_name_log', 'X_test', 'pipeline', 'n_jobs_param', 'gpu_n_jobs_param', 'gpu_param', 'data', 'seed', 'memory', 'html_param', 'fold_generator', 'y_train', 'fold_groups_param', 'logging_param', 'USI', '_ml_usecase', 'y_test', 'log_plots_param', 'y', 'exp_id', 'X_train', 'idx', 'transform_target_param', 'fold_shuffle_param', '_available_plots', 'target_param'}
2025-02-27 16:44:48,622:INFO:Checking environment
2025-02-27 16:44:48,622:INFO:python_version: 3.10.12
2025-02-27 16:44:48,622:INFO:python_build: ('main', 'Feb  4 2025 14:57:36')
2025-02-27 16:44:48,622:INFO:machine: x86_64
2025-02-27 16:44:48,623:INFO:platform: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:44:48,623:INFO:Memory: svmem(total=16420966400, available=8827584512, percent=46.2, used=6490206208, free=1348534272, active=7540785152, inactive=6168485888, buffers=337477632, cached=8244748288, shared=751513600, slab=778612736)
2025-02-27 16:44:48,624:INFO:Physical Core: 4
2025-02-27 16:44:48,624:INFO:Logical Core: 8
2025-02-27 16:44:48,624:INFO:Checking libraries
2025-02-27 16:44:48,624:INFO:System:
2025-02-27 16:44:48,624:INFO:    python: 3.10.12 (main, Feb  4 2025, 14:57:36) [GCC 11.4.0]
2025-02-27 16:44:48,624:INFO:executable: /home/kamil/MyProjects/Economic_Model_AI/venv/bin/python
2025-02-27 16:44:48,624:INFO:   machine: Linux-6.8.0-52-generic-x86_64-with-glibc2.35
2025-02-27 16:44:48,624:INFO:PyCaret required dependencies:
2025-02-27 16:44:48,644:INFO:                 pip: 25.0.1
2025-02-27 16:44:48,644:INFO:          setuptools: 75.8.2
2025-02-27 16:44:48,644:INFO:             pycaret: 3.3.2
2025-02-27 16:44:48,644:INFO:             IPython: 8.32.0
2025-02-27 16:44:48,644:INFO:          ipywidgets: 8.1.5
2025-02-27 16:44:48,644:INFO:                tqdm: 4.67.1
2025-02-27 16:44:48,644:INFO:               numpy: 1.26.4
2025-02-27 16:44:48,644:INFO:              pandas: 2.1.4
2025-02-27 16:44:48,644:INFO:              jinja2: 3.1.5
2025-02-27 16:44:48,645:INFO:               scipy: 1.11.4
2025-02-27 16:44:48,645:INFO:              joblib: 1.3.2
2025-02-27 16:44:48,645:INFO:             sklearn: 1.4.2
2025-02-27 16:44:48,645:INFO:                pyod: 2.0.3
2025-02-27 16:44:48,645:INFO:            imblearn: 0.13.0
2025-02-27 16:44:48,645:INFO:   category_encoders: 2.7.0
2025-02-27 16:44:48,645:INFO:            lightgbm: 4.6.0
2025-02-27 16:44:48,645:INFO:               numba: 0.61.0
2025-02-27 16:44:48,645:INFO:            requests: 2.32.3
2025-02-27 16:44:48,645:INFO:          matplotlib: 3.7.5
2025-02-27 16:44:48,645:INFO:          scikitplot: 0.3.7
2025-02-27 16:44:48,645:INFO:         yellowbrick: 1.5
2025-02-27 16:44:48,645:INFO:              plotly: 5.24.1
2025-02-27 16:44:48,645:INFO:    plotly-resampler: Not installed
2025-02-27 16:44:48,645:INFO:             kaleido: 0.2.1
2025-02-27 16:44:48,645:INFO:           schemdraw: 0.15
2025-02-27 16:44:48,645:INFO:         statsmodels: 0.14.4
2025-02-27 16:44:48,645:INFO:              sktime: 0.26.0
2025-02-27 16:44:48,645:INFO:               tbats: 1.1.3
2025-02-27 16:44:48,645:INFO:            pmdarima: 2.0.4
2025-02-27 16:44:48,645:INFO:              psutil: 7.0.0
2025-02-27 16:44:48,645:INFO:          markupsafe: 3.0.2
2025-02-27 16:44:48,645:INFO:             pickle5: Not installed
2025-02-27 16:44:48,645:INFO:         cloudpickle: 3.1.1
2025-02-27 16:44:48,645:INFO:         deprecation: 2.1.0
2025-02-27 16:44:48,645:INFO:              xxhash: 3.5.0
2025-02-27 16:44:48,645:INFO:           wurlitzer: 3.1.1
2025-02-27 16:44:48,645:INFO:PyCaret optional dependencies:
2025-02-27 16:44:48,658:INFO:                shap: Not installed
2025-02-27 16:44:48,658:INFO:           interpret: Not installed
2025-02-27 16:44:48,658:INFO:                umap: Not installed
2025-02-27 16:44:48,658:INFO:     ydata_profiling: Not installed
2025-02-27 16:44:48,658:INFO:  explainerdashboard: Not installed
2025-02-27 16:44:48,658:INFO:             autoviz: Not installed
2025-02-27 16:44:48,659:INFO:           fairlearn: Not installed
2025-02-27 16:44:48,659:INFO:          deepchecks: Not installed
2025-02-27 16:44:48,659:INFO:             xgboost: Not installed
2025-02-27 16:44:48,659:INFO:            catboost: Not installed
2025-02-27 16:44:48,659:INFO:              kmodes: Not installed
2025-02-27 16:44:48,659:INFO:             mlxtend: Not installed
2025-02-27 16:44:48,659:INFO:       statsforecast: Not installed
2025-02-27 16:44:48,659:INFO:        tune_sklearn: Not installed
2025-02-27 16:44:48,659:INFO:                 ray: Not installed
2025-02-27 16:44:48,659:INFO:            hyperopt: Not installed
2025-02-27 16:44:48,659:INFO:              optuna: Not installed
2025-02-27 16:44:48,659:INFO:               skopt: Not installed
2025-02-27 16:44:48,659:INFO:              mlflow: Not installed
2025-02-27 16:44:48,659:INFO:              gradio: Not installed
2025-02-27 16:44:48,659:INFO:             fastapi: Not installed
2025-02-27 16:44:48,659:INFO:             uvicorn: Not installed
2025-02-27 16:44:48,659:INFO:              m2cgen: Not installed
2025-02-27 16:44:48,659:INFO:           evidently: Not installed
2025-02-27 16:44:48,659:INFO:               fugue: Not installed
2025-02-27 16:44:48,659:INFO:           streamlit: Not installed
2025-02-27 16:44:48,660:INFO:             prophet: Not installed
2025-02-27 16:44:48,660:INFO:None
2025-02-27 16:44:48,660:INFO:Set up data.
2025-02-27 16:44:48,665:INFO:Set up folding strategy.
2025-02-27 16:44:48,665:INFO:Set up train/test split.
2025-02-27 16:44:48,670:INFO:Set up index.
2025-02-27 16:44:48,670:INFO:Assigning column types.
2025-02-27 16:44:48,674:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:44:48,674:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,679:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,684:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,736:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,775:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,776:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,777:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,781:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,785:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,837:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,872:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,874:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-02-27 16:44:48,878:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,882:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,928:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:48,967:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-02-27 16:44:48,971:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,017:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,052:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,053:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-02-27 16:44:49,060:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,105:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,153:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,242:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,244:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-02-27 16:44:49,304:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,403:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,441:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,442:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:44:49,502:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,604:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-02-27 16:44:49,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,643:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,643:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-02-27 16:44:49,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,742:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,840:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:49,842:INFO:Preparing preprocessing pipeline...
2025-02-27 16:44:49,842:INFO:Set up simple imputation.
2025-02-27 16:44:49,845:INFO:Set up encoding of categorical features.
2025-02-27 16:44:49,846:INFO:Set up column name cleaning.
2025-02-27 16:44:49,909:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:44:49,917:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['GDP_(in_billion_USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country'],
                                    transformer=OneHotEncoder(cols=['Country'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2025-02-27 16:44:49,917:INFO:Creating final display dataframe.
2025-02-27 16:44:50,051:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target   Economic_Growth
2                   Target type        Regression
3           Original data shape          (304, 6)
4        Transformed data shape         (304, 24)
5   Transformed train set shape         (212, 24)
6    Transformed test set shape          (92, 24)
7              Numeric features                 3
8          Categorical features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              70f5
2025-02-27 16:44:50,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:50,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:50,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:50,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:50,246:INFO:setup() successfully completed in 1.63s...............
2025-02-27 16:44:50,246:INFO:Initializing create_model()
2025-02-27 16:44:50,246:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:50,246:INFO:Checking exceptions
2025-02-27 16:44:50,248:INFO:Importing libraries
2025-02-27 16:44:50,248:INFO:Copying training dataset
2025-02-27 16:44:50,251:INFO:Defining folds
2025-02-27 16:44:50,251:INFO:Declaring metric variables
2025-02-27 16:44:50,251:INFO:Importing untrained model
2025-02-27 16:44:50,251:INFO:Linear Regression Imported successfully
2025-02-27 16:44:50,252:INFO:Starting cross validation
2025-02-27 16:44:50,255:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:53,109:INFO:Calculating mean and std
2025-02-27 16:44:53,109:INFO:Creating metrics dataframe
2025-02-27 16:44:53,112:INFO:Finalizing model
2025-02-27 16:44:53,161:INFO:Uploading results into container
2025-02-27 16:44:53,161:INFO:Uploading model into container now
2025-02-27 16:44:53,171:INFO:_master_model_container: 1
2025-02-27 16:44:53,172:INFO:_display_container: 2
2025-02-27 16:44:53,172:INFO:LinearRegression(n_jobs=-1)
2025-02-27 16:44:53,172:INFO:create_model() successfully completed......................................
2025-02-27 16:44:53,242:INFO:Initializing tune_model()
2025-02-27 16:44:53,242:INFO:tune_model(estimator=LinearRegression(n_jobs=-1), fold=None, round=4, n_iter=10, custom_grid=None, optimize=R2, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>)
2025-02-27 16:44:53,243:INFO:Checking exceptions
2025-02-27 16:44:53,245:INFO:Copying training dataset
2025-02-27 16:44:53,248:INFO:Checking base model
2025-02-27 16:44:53,248:INFO:Base model : Linear Regression
2025-02-27 16:44:53,248:INFO:Declaring metric variables
2025-02-27 16:44:53,248:INFO:Defining Hyperparameters
2025-02-27 16:44:53,248:INFO:10 is bigger than total combinations 2, setting search algorithm to grid
2025-02-27 16:44:53,310:INFO:Tuning with n_jobs=-1
2025-02-27 16:44:53,310:INFO:Initializing GridSearchCV
2025-02-27 16:44:53,773:INFO:best_params: {'actual_estimator__fit_intercept': False}
2025-02-27 16:44:53,774:INFO:Hyperparameter search completed
2025-02-27 16:44:53,774:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:53,774:INFO:Initializing create_model()
2025-02-27 16:44:53,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x727dc51e8250>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'fit_intercept': False})
2025-02-27 16:44:53,774:INFO:Checking exceptions
2025-02-27 16:44:53,774:INFO:Importing libraries
2025-02-27 16:44:53,775:INFO:Copying training dataset
2025-02-27 16:44:53,780:INFO:Defining folds
2025-02-27 16:44:53,780:INFO:Declaring metric variables
2025-02-27 16:44:53,780:INFO:Importing untrained model
2025-02-27 16:44:53,781:INFO:Declaring custom model
2025-02-27 16:44:53,781:INFO:Linear Regression Imported successfully
2025-02-27 16:44:53,782:INFO:Starting cross validation
2025-02-27 16:44:53,784:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:54,021:INFO:Calculating mean and std
2025-02-27 16:44:54,022:INFO:Creating metrics dataframe
2025-02-27 16:44:54,025:INFO:Finalizing model
2025-02-27 16:44:54,060:INFO:Uploading results into container
2025-02-27 16:44:54,061:INFO:Uploading model into container now
2025-02-27 16:44:54,061:INFO:_master_model_container: 2
2025-02-27 16:44:54,061:INFO:_display_container: 3
2025-02-27 16:44:54,061:INFO:LinearRegression(fit_intercept=False, n_jobs=-1)
2025-02-27 16:44:54,061:INFO:create_model() successfully completed......................................
2025-02-27 16:44:54,122:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:54,122:INFO:choose_better activated
2025-02-27 16:44:54,122:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:54,123:INFO:Initializing create_model()
2025-02-27 16:44:54,123:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>, estimator=LinearRegression(n_jobs=-1), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:54,123:INFO:Checking exceptions
2025-02-27 16:44:54,124:INFO:Importing libraries
2025-02-27 16:44:54,124:INFO:Copying training dataset
2025-02-27 16:44:54,128:INFO:Defining folds
2025-02-27 16:44:54,128:INFO:Declaring metric variables
2025-02-27 16:44:54,128:INFO:Importing untrained model
2025-02-27 16:44:54,128:INFO:Declaring custom model
2025-02-27 16:44:54,129:INFO:Linear Regression Imported successfully
2025-02-27 16:44:54,129:INFO:Starting cross validation
2025-02-27 16:44:54,130:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:54,357:INFO:Calculating mean and std
2025-02-27 16:44:54,357:INFO:Creating metrics dataframe
2025-02-27 16:44:54,359:INFO:Finalizing model
2025-02-27 16:44:54,396:INFO:Uploading results into container
2025-02-27 16:44:54,396:INFO:Uploading model into container now
2025-02-27 16:44:54,397:INFO:_master_model_container: 3
2025-02-27 16:44:54,397:INFO:_display_container: 4
2025-02-27 16:44:54,397:INFO:LinearRegression(n_jobs=-1)
2025-02-27 16:44:54,397:INFO:create_model() successfully completed......................................
2025-02-27 16:44:54,455:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:54,456:INFO:LinearRegression(n_jobs=-1) result for R2 is 0.358
2025-02-27 16:44:54,456:INFO:LinearRegression(fit_intercept=False, n_jobs=-1) result for R2 is 0.358
2025-02-27 16:44:54,456:INFO:LinearRegression(n_jobs=-1) is best model
2025-02-27 16:44:54,457:INFO:choose_better completed
2025-02-27 16:44:54,457:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-27 16:44:54,464:INFO:_master_model_container: 3
2025-02-27 16:44:54,464:INFO:_display_container: 3
2025-02-27 16:44:54,464:INFO:LinearRegression(n_jobs=-1)
2025-02-27 16:44:54,464:INFO:tune_model() successfully completed......................................
2025-02-27 16:44:54,528:INFO:Initializing evaluate_model()
2025-02-27 16:44:54,528:INFO:evaluate_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>, estimator=LinearRegression(n_jobs=-1), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-27 16:44:54,533:INFO:Initializing plot_model()
2025-02-27 16:44:54,533:INFO:plot_model(plot=pipeline, fold=KFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=LinearRegression(n_jobs=-1), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.regression.oop.RegressionExperiment object at 0x727dc6074160>, system=True)
2025-02-27 16:44:54,533:INFO:Checking exceptions
2025-02-27 16:44:54,536:INFO:Preloading libraries
2025-02-27 16:44:54,536:INFO:Copying training dataset
2025-02-27 16:44:54,536:INFO:Plot type: pipeline
2025-02-27 16:44:54,637:WARNING:/home/kamil/MyProjects/Economic_Model_AI/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/tabular_experiment.py:582: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
  plt.show()

2025-02-27 16:44:54,637:INFO:Visual Rendered Successfully
2025-02-27 16:44:54,701:INFO:plot_model() successfully completed......................................
2025-02-27 16:44:54,712:INFO:Initializing save_model()
2025-02-27 16:44:54,713:INFO:save_model(model=LinearRegression(n_jobs=-1), model_name=model.pkl, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['GDP_(in_billion_USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country'],
                                    transformer=OneHotEncoder(cols=['Country'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2025-02-27 16:44:54,714:INFO:Adding model into prep_pipe
2025-02-27 16:44:54,729:INFO:model.pkl.pkl saved in current working directory
2025-02-27 16:44:54,743:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['GDP_(in_billion_USD)',
                                             'Inflation_Rate',
                                             'Unemployment_Rate'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['Country'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['Country'],
                                    transformer=OneHotEncoder(cols=['Country'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model', LinearRegression(n_jobs=-1))])
2025-02-27 16:44:54,745:INFO:save_model() successfully completed......................................
